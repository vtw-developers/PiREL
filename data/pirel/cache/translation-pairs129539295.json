{
  "source_lang": "py",
  "target_lang": "js",
  "template": "def __(digits: str) -> List[str]:\n    some_secret_fn_4071()",
  "template_origin": "def f_gold(digits: str) -> List[str]:\n    some_secret_fn_4071()",
  "templatized_node_ids": [
    2
  ],
  "translation_pairs": [
    [
      {
        "source": "def variant1(digits: str) -> List[str]:\n    some_secret_fn_4071()",
        "target": "function variant1(digits) {\n    some_secret_fn_4071();\n}"
      },
      {
        "source": "def variant2(numbers: str) -> List[str]:\n    some_secret_fn_4071()",
        "target": "function variant2(numbers) {\n    some_secret_fn_4071();\n}"
      }
    ],
    [
      {
        "source": "def variant1(digits: str) -> List[str]:\n    some_secret_fn_4071()",
        "target": "function variant1(digits) {\n    some_secret_fn_4071();\n}"
      },
      {
        "source": "def variant3(sequence: str) -> List[str]:\n    some_secret_fn_4071()",
        "target": "function variant3(sequence) {\n    some_secret_fn_4071();\n}"
      }
    ],
    [
      {
        "source": "def variant1(digits: str) -> List[str]:\n    some_secret_fn_4071()",
        "target": "function variant1(digits) {\n    some_secret_fn_4071();\n}"
      },
      {
        "source": "def variant4(chars: str) -> List[str]:\n    some_secret_fn_4071()",
        "target": "function variant4(chars) {\n    some_secret_fn_4071();\n}"
      }
    ],
    [
      {
        "source": "def variant1(digits: str) -> List[str]:\n    some_secret_fn_4071()",
        "target": "function variant1(digits) {\n    some_secret_fn_4071();\n}"
      },
      {
        "source": "def variant5(values: str) -> List[str]:\n    some_secret_fn_4071()",
        "target": "function variant5(values) {\n    some_secret_fn_4071();\n}"
      }
    ],
    [
      {
        "source": "def variant2(numbers: str) -> List[str]:\n    some_secret_fn_4071()",
        "target": "function variant2(numbers) {\n    some_secret_fn_4071();\n}"
      },
      {
        "source": "def variant3(sequence: str) -> List[str]:\n    some_secret_fn_4071()",
        "target": "function variant3(sequence) {\n    some_secret_fn_4071();\n}"
      }
    ],
    [
      {
        "source": "def variant2(numbers: str) -> List[str]:\n    some_secret_fn_4071()",
        "target": "function variant2(numbers) {\n    some_secret_fn_4071();\n}"
      },
      {
        "source": "def variant4(chars: str) -> List[str]:\n    some_secret_fn_4071()",
        "target": "function variant4(chars) {\n    some_secret_fn_4071();\n}"
      }
    ],
    [
      {
        "source": "def variant2(numbers: str) -> List[str]:\n    some_secret_fn_4071()",
        "target": "function variant2(numbers) {\n    some_secret_fn_4071();\n}"
      },
      {
        "source": "def variant5(values: str) -> List[str]:\n    some_secret_fn_4071()",
        "target": "function variant5(values) {\n    some_secret_fn_4071();\n}"
      }
    ],
    [
      {
        "source": "def variant3(sequence: str) -> List[str]:\n    some_secret_fn_4071()",
        "target": "function variant3(sequence) {\n    some_secret_fn_4071();\n}"
      },
      {
        "source": "def variant4(chars: str) -> List[str]:\n    some_secret_fn_4071()",
        "target": "function variant4(chars) {\n    some_secret_fn_4071();\n}"
      }
    ],
    [
      {
        "source": "def variant3(sequence: str) -> List[str]:\n    some_secret_fn_4071()",
        "target": "function variant3(sequence) {\n    some_secret_fn_4071();\n}"
      },
      {
        "source": "def variant5(values: str) -> List[str]:\n    some_secret_fn_4071()",
        "target": "function variant5(values) {\n    some_secret_fn_4071();\n}"
      }
    ],
    [
      {
        "source": "def variant4(chars: str) -> List[str]:\n    some_secret_fn_4071()",
        "target": "function variant4(chars) {\n    some_secret_fn_4071();\n}"
      },
      {
        "source": "def variant5(values: str) -> List[str]:\n    some_secret_fn_4071()",
        "target": "function variant5(values) {\n    some_secret_fn_4071();\n}"
      }
    ]
  ]
}
