{
  "template": "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[__])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
  "lang": "py",
  "temperature": 1.1,
  "code_blocks": [
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-6])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[6])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[7])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[8])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[9])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[u])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[u-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[9])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[8])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[7])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t)\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[len(t)-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[6])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[7])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[8])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[9])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[6])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[7])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[8])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[9])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[6])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[7])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[8])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[9])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[6])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[7])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[8])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[9])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[u])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[s])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t)\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[len(t)-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[s-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0:])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append((t,__])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append((t[__]))\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[6])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[7])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[8])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[9])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[6])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[7])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[8])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[9])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[6])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[7])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[8])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[9])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[7])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[8])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[6])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[7])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[8])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[len(t) - 1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "t.append(c)\ndfs(s + c, i, t)\nt.pop()",
    "s += c\ndfs(s, i, t)\nt.pop()",
    "t.extend(c)\ndfs(s + c, i, t)\nt.pop()",
    "t.insert(__, c)\ndfs(s + c, i, t)\nt.pop()",
    "t.append(__)\ndfs(s + c, i, t)\nt.pop()",
    "t.extend((c,))\ndfs(s + c, i, t)\nt.pop()",
    "t += [c]\ndfs(s + c, i, t)\nt.pop()",
    "t[__] = c\ndfs(s + c, i, t)\nt.pop()",
    "t.insert(u, c)\ndfs(s + c, i, t)\nt.pop()",
    "t.extend(list(c))\ndfs(s + c, i, t)\nt.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[len(t) - 1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[u])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[s])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[u - 1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[s - 1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[unit])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[6])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[7])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[8])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[9])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\n\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\n\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\n\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\n\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\n\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\n\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\n\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[6])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\n\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[7])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\n\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[8])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\n\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[u])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[s])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[len(t)-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[s-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.clear()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.clear()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.clear()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.clear()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[6])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[7])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[8])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[9])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[6])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[7])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[8])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[len(t) - 1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[6])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[7])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[8])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[9])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[6])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[7])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[8])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[9])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[6])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[7])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[8])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[9])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[6])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[7])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[8])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[9])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[6])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[7])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[8])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[9])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[6])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[7])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[8])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[len(t)-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[__]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[__]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[u])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[u])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[__]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[len(t)-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-6])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[6])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[7])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[8])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[9])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[6])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[7])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[8])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[9])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[6])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[7])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[8])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[9])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[u])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[s])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.insert(0, c)\n        dfs(s + c, i, t)\n        t.pop(0)\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.appendleft(c)\n        dfs(s + c, i, t)\n        t.popleft()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "from collections import deque\n\ndef dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.appendleft(c)\n        dfs(s + c, i, t)\n        t.popleft()\nans = deque()\ndfs(0, 0, deque())\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[6])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[7])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[8])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[u])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[s])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[s - 1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[6])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[7])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[8])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[6])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[7])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[8])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[9])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[6])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[7])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[8])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, __, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(__, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(__)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, __, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + __, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for __ in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for __ in range(u, len(candidates)):\n        c = candidates[__]\n        t.append(c)\n        dfs(s + c, __, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, __)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[len(ans)])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[s])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[u])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[i])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[u + 1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[u - 1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[s - u])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[6])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[7])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[8])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[9])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[6])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[6])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[7])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[8])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[9])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[6])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[7])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[8])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[9])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[u])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[s])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[len(t)-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[t.index(u)])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[6])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[7])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[8])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[6])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[7])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[8])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[9])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[6])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[7])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[8])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[6])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[7])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[8])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[9])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[6])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[7])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[8])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[9])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[u])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[s])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-u])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[len(t)-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-u])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[s])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[len(t)-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "t.append(i)",
    "t.append(u)",
    "t.append(candidates[i])",
    "t.append(s)",
    "t.append(target)",
    "t.append(c)",
    "t.append(s + c)",
    "t.append(0)",
    "t.append(len(candidates))",
    "t.append(ans)",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[6])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[7])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[8])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[9])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[a])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[INDEX])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[_index])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[@@])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[xyz])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[__!])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[333])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[_result])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[answer])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[10])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-10])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[6])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[7])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[8])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[9])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[6])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[7])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[8])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[9])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[6])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[7])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[8])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[9])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[6])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[7])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[8])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[9])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[len(t)-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[u])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[s])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[i])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[u-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[s-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[s+1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[len(t) - 1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "t.append(c)\ndfs(s + c, i, t)",
    "t.pop()\ndfs(s + c, i, t)",
    "i",
    "ans",
    "c",
    "target",
    "len(t)",
    "s",
    "if",
    "candidates",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[6])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[7])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[8])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[6])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[7])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[8])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[9])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[6])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[7])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[8])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[7])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[6])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[u])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[s])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[len(t)-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[u-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[:-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t)\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(__)\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[u])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[s])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[i])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0,0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[6])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[7])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[8])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[6])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[7])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[8])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[9])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[u])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[u-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[len(t)-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[len(t)//2:])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[6])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[7])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[8])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[9])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[6])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[7])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[8])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[6])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[7])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[8])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[9])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[6])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[7])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[8])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[6])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[7])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[8])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[6])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[7])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[8])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[9])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[7])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[9])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[11])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[13])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[15])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[6])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[7])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[8])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[9])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[6])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[7])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[8])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans"
  ],
  "num_code_blocks": 900
}
