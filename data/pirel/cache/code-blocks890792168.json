{
  "template": "if s == target:\n    ans.append(t[__])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
  "lang": "py",
  "temperature": 1,
  "code_blocks": [
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[i])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[s])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[i-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[i+1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[u])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-u])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[len(t) - 1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1:])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1:])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[6])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[7])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[8])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[len(t)-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[len(t)-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[len(t)-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[len(t)-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[u])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[len(t)-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[8])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[6])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[7])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[8])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[i])\n    return",
    "if s == target:\n    ans.append(t[i])\n    return",
    "if s == target:\n    ans.append(t[i])\n    return",
    "if s == target:\n    ans.append(t[i])\n    return",
    "if s == target:\n    ans.append(t[i])\n    return",
    "if s == target:\n    ans.append(t[i])\n    return",
    "if s == target:\n    ans.append(t[i])\n    return",
    "if s == target:\n    ans.append(t[i])\n    return",
    "if s == target:\n    ans.append(t[i])\n    return",
    "if s == target:\n    ans.append(t[i])\n    return",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[6])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[7])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[8])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\nt.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\nt.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[6])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[7])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[8])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[6])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[7])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[8])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[9])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[i])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[i])\n    return\nif s > target:\n    return\nfor u in range(len(candidates)):\n    c = candidates[u]\n    t.append(c)\n    dfs(s + c, u, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[s])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[u])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[i])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[u]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[i])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[u]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[i])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[i])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, u, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[i])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[u]\n    t.append(c)\n    dfs(s + c, u, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[i])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[u]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[u])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[s])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[u + 1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[i])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[len(t)-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[10])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[42])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-10])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[999])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[len(t) - 1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[len(t) - 2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[len(t) - 1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[len(t) - 2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[42])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[10])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[s])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[i])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[sum(candidates)])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[42 * u])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[s * len(candidates)])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[u])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[i])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[i])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[u])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[len(t)-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[i])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[u])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[len(t)-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[len(t)//2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[6])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[7])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[8])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[i])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[s])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[t])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i + 1, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[i])\n    return\nif s > target:\n    return\nfor i in range(u + 1, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u + 1, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u + 1, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[i])\n    return\nif s > target:\n    return\nfor i in range(u + 1, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i + 1, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[7])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[6])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[7])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[8])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[6])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[7])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[8])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[9])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[10])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[len(t)-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[u])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[s])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[s-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[u])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[6])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[7])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[9])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[7])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[10])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[8])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[6])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[7])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[8])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[6])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[7])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[8])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[len(t)-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[10])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[7])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[6])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[7])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[8])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[7])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[9])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[6])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[6])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[7])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[8])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[len(t)-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[u-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[s-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[6])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[7])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[8])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[9])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[10])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[7])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[7])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[9])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[8])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[6])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[42])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[len(t)-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[len(t)//2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[u])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2*u])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[i])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[target])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[len(candidates)-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[10])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[100])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[999])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[6])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[7])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[8])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[9])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[6])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[7])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[8])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[6])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[7])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[8])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[len(t)])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[None])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[object()])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[True])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[float(\"inf\")])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[str(len(t))])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[object.__new__(object())])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[sum(t)])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[10])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[7])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[8])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[9])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[8])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[42])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-42])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[7])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-7])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[7])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[9])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[6])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[7])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[8])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[9])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[u])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0:2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-2:])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1:3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[9])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[len(t)-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[100])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[99])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[7])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[8])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[6])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[6])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[7])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[8])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[9])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "__ = u + 1",
    "__ = u - 1",
    "__ = len(candidates) - 1",
    "__ = 0",
    "__ = u + 2",
    "__ = u - 2",
    "__ = len(candidates) - 2",
    "__ = 1",
    "__ = u + 3",
    "__ = u - 3",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[i])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[p])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[100])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[7])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[42])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[23])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[u])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[u - 1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[s])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[len(t)-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[99])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[42])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[u+1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[6])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[7])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[8])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[10])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[9])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[6])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[8])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[8])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[7])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[len(t)-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[7])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[9])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[6])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[u])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[9])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[len(t)-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[7])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[i])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[len(t) - 1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[42])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[u])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[s])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[10])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[6])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[6])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[i])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[s])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[123])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[len(t) - 1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[i + 1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[i * 2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[u])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[len(candidates) // 2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[6])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[9])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[7])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[len(t) // 2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[10])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[len(t) - 1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[u])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[i])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[c])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[10])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[100])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[6])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[7])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[8])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[6])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[7])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[9])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[8])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[u])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[10])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[len(t) - 1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[10])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-10])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[6])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[randrange(len(t))])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[len(t)//2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[len(t)-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[len(t)//2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[i])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[u])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[len(t)-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()"
  ],
  "num_code_blocks": 900
}
