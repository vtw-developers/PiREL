{
  "source_lang": "py",
  "target_lang": "js",
  "template": "def f_gold(nums: __[int]) -> bool:\n    some_secret_fn_4071()",
  "template_origin": "def f_gold(nums: List[int]) -> bool:\n    some_secret_fn_4071()",
  "templatized_node_ids": [
    8
  ],
  "translation_pairs": [
    [
      {
        "source": "def f_gold(nums: List[int]) -> bool:\n    some_secret_fn_4071()",
        "target": "function f_gold(nums) {\n    some_secret_fn_4071();\n}"
      },
      {
        "source": "def f_gold(nums: Tuple[int]) -> bool:\n    some_secret_fn_4071()",
        "target": "function f_gold(nums) {\n    some_secret_fn_4071();\n}"
      }
    ],
    [
      {
        "source": "def f_gold(nums: List[int]) -> bool:\n    some_secret_fn_4071()",
        "target": "function f_gold(nums) {\n    some_secret_fn_4071();\n}"
      },
      {
        "source": "def f_gold(nums: Set[int]) -> bool:\n    some_secret_fn_4071()",
        "target": "function f_gold(nums) {\n    some_secret_fn_4071();\n}"
      }
    ],
    [
      {
        "source": "def f_gold(nums: List[int]) -> bool:\n    some_secret_fn_4071()",
        "target": "function f_gold(nums) {\n    some_secret_fn_4071();\n}"
      },
      {
        "source": "def f_gold(nums: Iterable[int]) -> bool:\n    some_secret_fn_4071()",
        "target": "function f_gold(nums) {\n    some_secret_fn_4071();\n}"
      }
    ],
    [
      {
        "source": "def f_gold(nums: List[int]) -> bool:\n    some_secret_fn_4071()",
        "target": "function f_gold(nums) {\n    some_secret_fn_4071();\n}"
      },
      {
        "source": "def f_gold(nums: Optional[int]) -> bool:\n    some_secret_fn_4071()",
        "target": "function f_gold(nums) {\n    some_secret_fn_4071();\n}"
      }
    ],
    [
      {
        "source": "def f_gold(nums: Tuple[int]) -> bool:\n    some_secret_fn_4071()",
        "target": "function f_gold(nums) {\n    some_secret_fn_4071();\n}"
      },
      {
        "source": "def f_gold(nums: Set[int]) -> bool:\n    some_secret_fn_4071()",
        "target": "function f_gold(nums) {\n    some_secret_fn_4071();\n}"
      }
    ],
    [
      {
        "source": "def f_gold(nums: Tuple[int]) -> bool:\n    some_secret_fn_4071()",
        "target": "function f_gold(nums) {\n    some_secret_fn_4071();\n}"
      },
      {
        "source": "def f_gold(nums: Iterable[int]) -> bool:\n    some_secret_fn_4071()",
        "target": "function f_gold(nums) {\n    some_secret_fn_4071();\n}"
      }
    ],
    [
      {
        "source": "def f_gold(nums: Tuple[int]) -> bool:\n    some_secret_fn_4071()",
        "target": "function f_gold(nums) {\n    some_secret_fn_4071();\n}"
      },
      {
        "source": "def f_gold(nums: Optional[int]) -> bool:\n    some_secret_fn_4071()",
        "target": "function f_gold(nums) {\n    some_secret_fn_4071();\n}"
      }
    ],
    [
      {
        "source": "def f_gold(nums: Set[int]) -> bool:\n    some_secret_fn_4071()",
        "target": "function f_gold(nums) {\n    some_secret_fn_4071();\n}"
      },
      {
        "source": "def f_gold(nums: Iterable[int]) -> bool:\n    some_secret_fn_4071()",
        "target": "function f_gold(nums) {\n    some_secret_fn_4071();\n}"
      }
    ],
    [
      {
        "source": "def f_gold(nums: Set[int]) -> bool:\n    some_secret_fn_4071()",
        "target": "function f_gold(nums) {\n    some_secret_fn_4071();\n}"
      },
      {
        "source": "def f_gold(nums: Optional[int]) -> bool:\n    some_secret_fn_4071()",
        "target": "function f_gold(nums) {\n    some_secret_fn_4071();\n}"
      }
    ],
    [
      {
        "source": "def f_gold(nums: Iterable[int]) -> bool:\n    some_secret_fn_4071()",
        "target": "function f_gold(nums) {\n    some_secret_fn_4071();\n}"
      },
      {
        "source": "def f_gold(nums: Optional[int]) -> bool:\n    some_secret_fn_4071()",
        "target": "function f_gold(nums) {\n    some_secret_fn_4071();\n}"
      }
    ]
  ]
}
