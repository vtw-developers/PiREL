{
  "template": "nums1[i + k // 2 - 1] if i + k // 2 - 1 < __ else float('inf')",
  "source_lang": "py",
  "target_lang": "js",
  "template_origin": "nums1[i + k // 2 - 1] if i + k // 2 - 1 < m else float('inf')",
  "translations": {
    "nums1[i + k // 2 - 1] if i + k // 2 - 1 < n else float('inf')": [
      "nums1[i + Math.floor(k / 2) - 1] < n ? nums1[i + Math.floor(k / 2) - 1] : Number.POSITIVE_INFINITY;"
    ],
    "nums1[i + k // 2 - 1] if i + k // 2 - 1 < index else float('inf')": [
      "nums1[i + Math.floor(k / 2) - 1] < index ? nums1[i + Math.floor(k / 2) - 1] : Infinity;"
    ],
    "nums1[i + k // 2 - 1] if i + k // 2 - 1 < m else float('inf')": [
      "nums1[i + Math.floor(k / 2) - 1] < m ? nums1[i + Math.floor(k / 2) - 1] : Infinity;"
    ],
    "nums1[i + k // 2 - 1] if i + k // 2 - 1 < size else float('inf')": [
      "nums1[i + Math.floor(k / 2) - 1] < size ? nums1[i + Math.floor(k / 2) - 1] : Infinity;"
    ],
    "nums1[i + k // 2 - 1] if i + k // 2 - 1 < limit else float('inf')": [
      "nums1[i + Math.floor(k / 2) - 1] < limit ? nums1[i + Math.floor(k / 2) - 1] : Infinity;"
    ]
  }
}
