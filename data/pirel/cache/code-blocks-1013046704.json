{
  "template": "[[False] * (n + __) for _ in range(m + __)]",
  "lang": "py",
  "temperature": 0.7,
  "code_blocks": [
    "[[False] * (n + 1) for _ in range(m + 1)]",
    "[[False] * (n + 2) for _ in range(m + 2)]",
    "[[False] * (n + 3) for _ in range(m + 3)]",
    "[[False] * (n + 4) for _ in range(m + 4)]",
    "[[False] * (n + 5) for _ in range(m + 5)]",
    "[[False] * (n + 6) for _ in range(m + 6)]",
    "[[False] * (n + 7) for _ in range(m + 7)]",
    "[[False] * (n + 8) for _ in range(m + 8)]",
    "[[False] * (n + 9) for _ in range(m + 9)]",
    "[[False] * (n + 10) for _ in range(m + 10)]",
    "[[False] * (n + 1) for _ in range(m + 1)]",
    "[[False] * (n + 2) for _ in range(m + 2)]",
    "[[False] * (n + 3) for _ in range(m + 3)]",
    "[[False] * (n + 4) for _ in range(m + 4)]",
    "[[False] * (n + 5) for _ in range(m + 5)]",
    "[[False] * (n + 6) for _ in range(m + 6)]",
    "[[False] * (n + 7) for _ in range(m + 7)]",
    "[[False] * (n + 8) for _ in range(m + 8)]",
    "[[False] * (n + 9) for _ in range(m + 9)]",
    "[[False] * (n + 10) for _ in range(m + 10)]",
    "[[False] * (n + 1) for _ in range(m + 1)]",
    "[[False] * (n + 2) for _ in range(m + 2)]",
    "[[False] * (n + 3) for _ in range(m + 3)]",
    "[[False] * (n + 4) for _ in range(m + 4)]",
    "[[False] * (n + 5) for _ in range(m + 5)]",
    "[[False] * (n + 6) for _ in range(m + 6)]",
    "[[False] * (n + 7) for _ in range(m + 7)]",
    "[[False] * (n + 8) for _ in range(m + 8)]",
    "[[False] * (n + 9) for _ in range(m + 9)]",
    "[[False] * (n + 10) for _ in range(m + 10)]",
    "[[False] * (n + 1) for _ in range(m + 1)]",
    "[[False] * (n + 2) for _ in range(m + 2)]",
    "[[False] * (n + 3) for _ in range(m + 3)]",
    "[[False] * (n + 4) for _ in range(m + 4)]",
    "[[False] * (n + 5) for _ in range(m + 5)]",
    "[[False] * (n + 6) for _ in range(m + 6)]",
    "[[False] * (n + 7) for _ in range(m + 7)]",
    "[[False] * (n + 8) for _ in range(m + 8)]",
    "[[False] * (n + 9) for _ in range(m + 9)]",
    "[[False] * (n + 10) for _ in range(m + 10)]",
    "[[False] * (n + 1) for _ in range(m + 1)]",
    "[[False] * (n + 2) for _ in range(m + 2)]",
    "[[False] * (n + 3) for _ in range(m + 3)]",
    "[[False] * (n + 4) for _ in range(m + 4)]",
    "[[False] * (n + 5) for _ in range(m + 5)]",
    "[[False] * (n + 6) for _ in range(m + 6)]",
    "[[False] * (n + 7) for _ in range(m + 7)]",
    "[[False] * (n + 8) for _ in range(m + 8)]",
    "[[False] * (n + 9) for _ in range(m + 9)]",
    "[[False] * (n + 10) for _ in range(m + 10)]",
    "[[False] * (n + 1) for _ in range(m + 1)]",
    "[[False] * (n + 2) for _ in range(m + 2)]",
    "[[False] * (n + 3) for _ in range(m + 3)]",
    "[[False] * (n + 4) for _ in range(m + 4)]",
    "[[False] * (n + 5) for _ in range(m + 5)]",
    "[[False] * (n + 6) for _ in range(m + 6)]",
    "[[False] * (n + 7) for _ in range(m + 7)]",
    "[[False] * (n + 8) for _ in range(m + 8)]",
    "[[False] * (n + 9) for _ in range(m + 9)]",
    "[[False] * (n + 10) for _ in range(m + 10)]",
    "[[False] * (n + 1) for _ in range(m + 1)]",
    "[[False] * (n + 2) for _ in range(m + 2)]",
    "[[False] * (n + 3) for _ in range(m + 3)]",
    "[[False] * (n + 4) for _ in range(m + 4)]",
    "[[False] * (n + 5) for _ in range(m + 5)]",
    "[[False] * (n + 6) for _ in range(m + 6)]",
    "[[False] * (n + 7) for _ in range(m + 7)]",
    "[[False] * (n + 8) for _ in range(m + 8)]",
    "[[False] * (n + 9) for _ in range(m + 9)]",
    "[[False] * (n + 10) for _ in range(m + 10)]",
    "[[False] * (n + 1) for _ in range(m + 1)]",
    "[[False] * (n + 2) for _ in range(m + 2)]",
    "[[False] * (n + 3) for _ in range(m + 3)]",
    "[[False] * (n + 4) for _ in range(m + 4)]",
    "[[False] * (n + 5) for _ in range(m + 5)]",
    "[[False] * (n + 6) for _ in range(m + 6)]",
    "[[False] * (n + 7) for _ in range(m + 7)]",
    "[[False] * (n + 8) for _ in range(m + 8)]",
    "[[False] * (n + 9) for _ in range(m + 9)]",
    "[[False] * (n + 10) for _ in range(m + 10)]",
    "[[False] * (n + 1) for _ in range(m + 1)]",
    "[[False] * (n + 2) for _ in range(m + 2)]",
    "[[False] * (n + 3) for _ in range(m + 3)]",
    "[[False] * (n + 4) for _ in range(m + 4)]",
    "[[False] * (n + 5) for _ in range(m + 5)]",
    "[[False] * (n + 6) for _ in range(m + 6)]",
    "[[False] * (n + 7) for _ in range(m + 7)]",
    "[[False] * (n + 8) for _ in range(m + 8)]",
    "[[False] * (n + 9) for _ in range(m + 9)]",
    "[[False] * (n + 10) for _ in range(m + 10)]",
    "[[False] * (n + 0) for _ in range(m + 0)]",
    "[[False] * (n + 1) for _ in range(m + 1)]",
    "[[False] * (n + 2) for _ in range(m + 2)]",
    "[[False] * (n + 3) for _ in range(m + 3)]",
    "[[False] * (n + 4) for _ in range(m + 4)]",
    "[[False] * (n + 5) for _ in range(m + 5)]",
    "[[False] * (n + 6) for _ in range(m + 6)]",
    "[[False] * (n + 7) for _ in range(m + 7)]",
    "[[False] * (n + 8) for _ in range(m + 8)]",
    "[[False] * (n + 9) for _ in range(m + 9)]",
    "[[False] * (n + 10) for _ in range(m + 10)]",
    "[[False] * (n + 5) for _ in range(m + 5)]",
    "[[False] * (n + 1) for _ in range(m + 1)]",
    "[[False] * (n + 100) for _ in range(m + 100)]",
    "[[False] * (n + 3) for _ in range(m + 3)]",
    "[[False] * (n + 7) for _ in range(m + 7)]",
    "[[False] * (n + 2) for _ in range(m + 2)]",
    "[[False] * (n + 15) for _ in range(m + 15)]",
    "[[False] * (n + 8) for _ in range(m + 8)]",
    "[[False] * (n + 20) for _ in range(m + 20)]",
    "[[False] * (n + 1) for _ in range(m + 1)]",
    "[[False] * (n + 2) for _ in range(m + 2)]",
    "[[False] * (n + 3) for _ in range(m + 3)]",
    "[[False] * (n + 4) for _ in range(m + 4)]",
    "[[False] * (n + 5) for _ in range(m + 5)]",
    "[[False] * (n + 6) for _ in range(m + 6)]",
    "[[False] * (n + 7) for _ in range(m + 7)]",
    "[[False] * (n + 8) for _ in range(m + 8)]",
    "[[False] * (n + 9) for _ in range(m + 9)]",
    "[[False] * (n + 10) for _ in range(m + 10)]",
    "[[False] * (n + 1) for _ in range(m + 1)]",
    "[[False] * (n + 2) for _ in range(m + 2)]",
    "[[False] * (n + 3) for _ in range(m + 3)]",
    "[[False] * (n + 4) for _ in range(m + 4)]",
    "[[False] * (n + 5) for _ in range(m + 5)]",
    "[[False] * (n + 6) for _ in range(m + 6)]",
    "[[False] * (n + 7) for _ in range(m + 7)]",
    "[[False] * (n + 8) for _ in range(m + 8)]",
    "[[False] * (n + 9) for _ in range(m + 9)]",
    "[[False] * (n + 10) for _ in range(m + 10)]",
    "[[False] * (n + 1) for _ in range(m + 1)]",
    "[[False] * (n + 2) for _ in range(m + 2)]",
    "[[False] * (n + 3) for _ in range(m + 3)]",
    "[[False] * (n + 4) for _ in range(m + 4)]",
    "[[False] * (n + 5) for _ in range(m + 5)]",
    "[[False] * (n + 6) for _ in range(m + 6)]",
    "[[False] * (n + 7) for _ in range(m + 7)]",
    "[[False] * (n + 8) for _ in range(m + 8)]",
    "[[False] * (n + 9) for _ in range(m + 9)]",
    "[[False] * (n + 10) for _ in range(m + 10)]",
    "[[False] * (n + 1) for _ in range(m + 1)]",
    "[[False] * (n + 2) for _ in range(m + 2)]",
    "[[False] * (n + 3) for _ in range(m + 3)]",
    "[[False] * (n + 4) for _ in range(m + 4)]",
    "[[False] * (n + 5) for _ in range(m + 5)]",
    "[[False] * (n + 6) for _ in range(m + 6)]",
    "[[False] * (n + 7) for _ in range(m + 7)]",
    "[[False] * (n + 8) for _ in range(m + 8)]",
    "[[False] * (n + 9) for _ in range(m + 9)]",
    "[[False] * (n + 10) for _ in range(m + 10)]",
    "[[False] * (n + 1) for _ in range(m + 1)]",
    "[[False] * (n + 2) for _ in range(m + 2)]",
    "[[False] * (n + 3) for _ in range(m + 3)]",
    "[[False] * (n + 4) for _ in range(m + 4)]",
    "[[False] * (n + 5) for _ in range(m + 5)]",
    "[[False] * (n + 6) for _ in range(m + 6)]",
    "[[False] * (n + 7) for _ in range(m + 7)]",
    "[[False] * (n + 8) for _ in range(m + 8)]",
    "[[False] * (n + 9) for _ in range(m + 9)]",
    "[[False] * (n + 10) for _ in range(m + 10)]",
    "[[False] * (n + 0) for _ in range(m + 0)]",
    "[[False] * (n + 1) for _ in range(m + 1)]",
    "[[False] * (n + 2) for _ in range(m + 2)]",
    "[[False] * (n + 3) for _ in range(m + 3)]",
    "[[False] * (n + 4) for _ in range(m + 4)]",
    "[[False] * (n + 5) for _ in range(m + 5)]",
    "[[False] * (n + 6) for _ in range(m + 6)]",
    "[[False] * (n + 7) for _ in range(m + 7)]",
    "[[False] * (n + 8) for _ in range(m + 8)]",
    "[[False] * (n + 9) for _ in range(m + 9)]",
    "[[False] * (n + 1) for _ in range(m + 1)]",
    "[[False] * (n + 2) for _ in range(m + 2)]",
    "[[False] * (n + 3) for _ in range(m + 3)]",
    "[[False] * (n + 4) for _ in range(m + 4)]",
    "[[False] * (n + 5) for _ in range(m + 5)]",
    "[[False] * (n + 6) for _ in range(m + 6)]",
    "[[False] * (n + 7) for _ in range(m + 7)]",
    "[[False] * (n + 8) for _ in range(m + 8)]",
    "[[False] * (n + 9) for _ in range(m + 9)]",
    "[[False] * (n + 10) for _ in range(m + 10)]",
    "[[False] * (n + 1) for _ in range(m + 1)]",
    "[[False] * (n + 5) for _ in range(m + 5)]",
    "[[False] * (n + 10) for _ in range(m + 10)]",
    "[[False] * (n + 100) for _ in range(m + 100)]",
    "[[False] * (n + 0) for _ in range(m + 0)]",
    "[[False] * (n + -1) for _ in range(m + -1)]",
    "[[False] * (n + 2) for _ in range(m + 2)]",
    "[[False] * (n + 7) for _ in range(m + 7)]",
    "[[False] * (n + 50) for _ in range(m + 50)]",
    "[[False] * (n + 999) for _ in range(m + 999)]",
    "[[False] * (n + 1) for _ in range(m + 1)]",
    "[[False] * (n + 2) for _ in range(m + 2)]",
    "[[False] * (n + 3) for _ in range(m + 3)]",
    "[[False] * (n + 4) for _ in range(m + 4)]",
    "[[False] * (n + 5) for _ in range(m + 5)]",
    "[[False] * (n + 6) for _ in range(m + 6)]",
    "[[False] * (n + 7) for _ in range(m + 7)]",
    "[[False] * (n + 8) for _ in range(m + 8)]",
    "[[False] * (n + 9) for _ in range(m + 9)]",
    "[[False] * (n + 10) for _ in range(m + 10)]",
    "[[False] * (n + 1) for _ in range(m + 1)]",
    "[[False] * (n + 2) for _ in range(m + 2)]",
    "[[False] * (n + 3) for _ in range(m + 3)]",
    "[[False] * (n + 4) for _ in range(m + 4)]",
    "[[False] * (n + 5) for _ in range(m + 5)]",
    "[[False] * (n + 6) for _ in range(m + 6)]",
    "[[False] * (n + 7) for _ in range(m + 7)]",
    "[[False] * (n + 8) for _ in range(m + 8)]",
    "[[False] * (n + 9) for _ in range(m + 9)]",
    "[[False] * (n + 10) for _ in range(m + 10)]",
    "[[False] * (n + 1) for _ in range(m + 1)]",
    "[[False] * (n + 2) for _ in range(m + 2)]",
    "[[False] * (n + 3) for _ in range(m + 3)]",
    "[[False] * (n + 4) for _ in range(m + 4)]",
    "[[False] * (n + 5) for _ in range(m + 5)]",
    "[[False] * (n + 6) for _ in range(m + 6)]",
    "[[False] * (n + 7) for _ in range(m + 7)]",
    "[[False] * (n + 8) for _ in range(m + 8)]",
    "[[False] * (n + 9) for _ in range(m + 9)]",
    "[[False] * (n + 10) for _ in range(m + 10)]",
    "[[False] * (n + 1) for _ in range(m + 2)]",
    "[[False] * (n + 2) for _ in range(m + 3)]",
    "[[False] * (n + 3) for _ in range(m + 4)]",
    "[[False] * (n + 4) for _ in range(m + 5)]",
    "[[False] * (n + 5) for _ in range(m + 6)]",
    "[[False] * (n + 6) for _ in range(m + 7)]",
    "[[False] * (n + 7) for _ in range(m + 8)]",
    "[[False] * (n + 8) for _ in range(m + 9)]",
    "[[False] * (n + 9) for _ in range(m + 10)]",
    "[[False] * (n + 10) for _ in range(m + 11)]",
    "[[False] * (n + 1) for _ in range(m + 1)]",
    "[[False] * (n + 2) for _ in range(m + 2)]",
    "[[False] * (n + 3) for _ in range(m + 3)]",
    "[[False] * (n + 4) for _ in range(m + 4)]",
    "[[False] * (n + 5) for _ in range(m + 5)]",
    "[[False] * (n + 6) for _ in range(m + 6)]",
    "[[False] * (n + 7) for _ in range(m + 7)]",
    "[[False] * (n + 8) for _ in range(m + 8)]",
    "[[False] * (n + 9) for _ in range(m + 9)]",
    "[[False] * (n + 10) for _ in range(m + 10)]",
    "[[False] * (n + 1) for _ in range(m + 1)]",
    "[[False] * (n + 2) for _ in range(m + 2)]",
    "[[False] * (n + 3) for _ in range(m + 3)]",
    "[[False] * (n + 4) for _ in range(m + 4)]",
    "[[False] * (n + 5) for _ in range(m + 5)]",
    "[[False] * (n + 6) for _ in range(m + 6)]",
    "[[False] * (n + 7) for _ in range(m + 7)]",
    "[[False] * (n + 8) for _ in range(m + 8)]",
    "[[False] * (n + 9) for _ in range(m + 9)]",
    "[[False] * (n + 10) for _ in range(m + 10)]",
    "# Variant 1\n[[False] * (n + 1) for _ in range(m + 1)]\n\n# Variant 2\n[[False] * (n + 2) for _ in range(m + 2)]\n\n# Variant 3\n[[False] * (n + 3) for _ in range(m + 3)]\n\n# Variant 4\n[[False] * (n + 4) for _ in range(m + 4)]\n\n# Variant 5\n[[False] * (n + 5) for _ in range(m + 5)]\n\n# Variant 6\n[[False] * (n + 6) for _ in range(m + 6)]\n\n# Variant 7\n[[False] * (n + 7) for _ in range(m + 7)]\n\n# Variant 8\n[[False] * (n + 8) for _ in range(m + 8)]\n\n# Variant 9\n[[False] * (n + 9) for _ in range(m + 9)]\n\n# Variant 10\n[[False] * (n + 10) for _ in range(m + 10)]",
    "[[False] * (n + 1) for _ in range(m + 1)]",
    "[[False] * (n + 2) for _ in range(m + 2)]",
    "[[False] * (n + 3) for _ in range(m + 3)]",
    "[[False] * (n + 4) for _ in range(m + 4)]",
    "[[False] * (n + 5) for _ in range(m + 5)]",
    "[[False] * (n + 6) for _ in range(m + 6)]",
    "[[False] * (n + 7) for _ in range(m + 7)]",
    "[[False] * (n + 8) for _ in range(m + 8)]",
    "[[False] * (n + 9) for _ in range(m + 9)]",
    "[[False] * (n + 10) for _ in range(m + 10)]",
    "[[False] * (n + 1) for _ in range(m + 1)]",
    "[[False] * (n + 2) for _ in range(m + 2)]",
    "[[False] * (n + 3) for _ in range(m + 3)]",
    "[[False] * (n + 4) for _ in range(m + 4)]",
    "[[False] * (n + 5) for _ in range(m + 5)]",
    "[[False] * (n + 6) for _ in range(m + 6)]",
    "[[False] * (n + 7) for _ in range(m + 7)]",
    "[[False] * (n + 8) for _ in range(m + 8)]",
    "[[False] * (n + 9) for _ in range(m + 9)]",
    "[[False] * (n + 10) for _ in range(m + 10)]",
    "[[False] * (n + 1) for _ in range(m + 1)]",
    "[[False] * (n + 2) for _ in range(m + 2)]",
    "[[False] * (n + 3) for _ in range(m + 3)]",
    "[[False] * (n + 4) for _ in range(m + 4)]",
    "[[False] * (n + 5) for _ in range(m + 5)]",
    "[[False] * (n + 6) for _ in range(m + 6)]",
    "[[False] * (n + 7) for _ in range(m + 7)]",
    "[[False] * (n + 8) for _ in range(m + 8)]",
    "[[False] * (n + 9) for _ in range(m + 9)]",
    "[[False] * (n + 10) for _ in range(m + 10)]",
    "[[False] * (n + 1) for _ in range(m + 1)]",
    "[[False] * (n + 2) for _ in range(m + 2)]",
    "[[False] * (n + 3) for _ in range(m + 3)]",
    "[[False] * (n + 4) for _ in range(m + 4)]",
    "[[False] * (n + 5) for _ in range(m + 5)]",
    "[[False] * (n + 6) for _ in range(m + 6)]",
    "[[False] * (n + 7) for _ in range(m + 7)]",
    "[[False] * (n + 8) for _ in range(m + 8)]",
    "[[False] * (n + 9) for _ in range(m + 9)]",
    "[[False] * (n + 10) for _ in range(m + 10)]"
  ],
  "num_code_blocks": 291
}
