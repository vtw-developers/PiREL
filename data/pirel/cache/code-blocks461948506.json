{
  "template": "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[__])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
  "lang": "py",
  "temperature": 1,
  "code_blocks": [
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[u])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[s])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[target])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t)\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[s])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t.__class__)\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[t])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[i])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[s])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[s])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[u])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[s])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[len(candidates)-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[target])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[s - u])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[len(t)-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[s])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[i])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[len(ans)])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[s])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[u])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-u])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[len(t) - 1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[s - u])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-u - 1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[u - 1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[u])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[s])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[target])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[i])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[len(t)//2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[s-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[len(t)-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.insert(0, c)\n            dfs(s + c, i, t)\n            t.pop(0)\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.insert(0, c)\n            dfs(s + c, i, t)\n            t.pop(0)\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[u])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[u])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop(0)\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.insert(0, c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.insert(0, c)\n            dfs(s + c, i, t)\n            t.pop(0)\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.insert(0, c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[u])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.insert(0, c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "ans.append(t)",
    "ans.extend(t)",
    "ans.insert(0, t)",
    "ans.insert(len(ans), t)",
    "ans.insert(1, t)",
    "ans.extend([t])",
    "ans += t",
    "ans.append(t[:])",
    "ans.append(list(t))",
    "ans.append(t.copy())",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop(0)\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i + 1, t)\n            t.pop(0)\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i + 1, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[__])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i + 1, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, u + 1, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, u + 1, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, u + 1, t)\n            t.pop(0)\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, u + 1, t)\n            t.pop(0)\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "t.append(c)",
    "ans.append(t)",
    "u.append(c)",
    "s.append(c)",
    "target.append(c)",
    "s.append(target)",
    "u.append(target)",
    "t.append(target)",
    "ans.append(target)",
    "c.append(target)",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[u])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[s])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[s])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, u, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[target])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[s])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, u, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[u])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, u, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[target])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, u, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[__])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[__])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[s])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[10])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.append(0)\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.append(0)\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[10])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.append(0)\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.extend([0])\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.extend([0])\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[10])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.extend([0])\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[10])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.extend([0, 0])\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop(0)\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.remove(t[0])\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.insert(0, c)\n            dfs(s + c, i, t)\n            t.pop(0)\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.extend([c])\n            dfs(s + c, i, t)\n            t.pop(0)\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.extend([c])\n            dfs(s + c, i, t)\n            t.remove(t[0])\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.extend([c])\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.extend([c])\n            dfs(s + c, i, t)\n            t.pop(0)\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.remove(t[0])\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i + 1, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, u, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, u, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i + 1, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, u, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, u, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i + 1, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, u, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[u])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[s])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[u + 1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[s - 1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[len(t) - 1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[i])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[len(t)-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[len(t)-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-1:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i+1, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u+1, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u+1, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i+1, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(list(t))\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(list(t))\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i+1, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(list(t))\n            return\n        if s > target:\n            return\n        for i in range(u+1, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(list(t))\n            return\n        if s > target:\n            return\n        for i in range(u+1, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i+1, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t.copy())\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t.copy())\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i+1, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[len(t)-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "t.append(c)\ndfs(s + c, i + 1, t)",
    "t.append(c)\ndfs(s + c, i + 1, t)\nt.pop()",
    "t.append(c)\ndfs(s + c, u + 1, t)\nt.pop()",
    "t.append(c)\ndfs(s + c, u + 1, t)",
    "ans.append(t[-1])",
    "ans.append(t[len(t) - 1])",
    "ans.append(t[len(t)])",
    "ans.append(t[u])",
    "ans.append(t[i])",
    "ans.append(t[c])",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[u])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[s])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[i])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t)\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[len(t)-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[u - 1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[s - 1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(u)\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(i)\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[u + 1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[u])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[u + 1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[len(t) - 1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[u])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[s])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[t])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[len(t)-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[u-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[s-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[len(candidates)-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t)\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t + [s])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append([])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append([t])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append([t])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t.copy())\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t.copy())\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i + 1, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:u])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:u+1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:u+1])\n            return\n        if s > target:\n            return\n        for i in range(u+1, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i + 1, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i + 1, t + [c])\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i + 1, t.copy())\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i + 1, list(t))\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t.copy())\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i + 1, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t.copy())\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i + 1, t.copy())\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t.copy())\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i + 1, list(t))\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t)\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i + 1, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t)\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i + 1, t.copy())\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t.copy())\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i + 1, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u + 1, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0 , [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i + 1, t.copy())\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t.copy())\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u + 1, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i + 1, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u + 1, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i + 1, t.copy())\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u + 1, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i + 1, t.copy())\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t)\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t.copy())\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(list(t))\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(list(t))\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i + 1, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t.copy())\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i + 1, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(list(t))\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t[:])\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t.copy())\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t[:])\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i + 1, t[:])\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t[:])\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[10])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i+1, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s, i+1, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u+1, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u+1, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i+1, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(list(t))\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(list(t))\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i+1, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(list(t))\n            return\n        if s > target:\n            return\n        for i in range(u+1, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(list(t))\n            return\n        if s > target:\n            return\n        for i in range(u+1, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i+1, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(list(t[::-1]))\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(list(t))\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i + 1, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i + 1, t[:])\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(list(t))\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i + 1, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i + 1, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t[:])\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(list(t))\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i + 1, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(list(t))\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t[:])\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans[__].extend(t)\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.concat(t)\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.insert(__, c)\n            dfs(s + c, i, t)\n            t.pop(__)\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.insert(__, c)\n            dfs(s + c, i, t)\n            t.pop(__)\n    ans = []\n    dfs(__, __, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, __, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t)\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, __, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t)\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop(__)\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t.copy())\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t.copy())\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i + 1, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "ans.append(t[-1])",
    "ans.append(t[0])",
    "ans.append(t[1])",
    "ans.append(t[len(t)-1])",
    "ans.append(t[-2])",
    "ans.append(t[2])",
    "ans.append(t[3])",
    "ans.append(t[-3])",
    "ans.append(t[4])",
    "ans.append(t[-4])",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[len(t) - 1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[len(t) - 1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[len(t) - 1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t)\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t.copy())\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t)\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t.copy())\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t)\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])  # replace __ with `[:]`\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(list(t))  # replace __ with `list(t)`\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t.copy())  # replace __ with `t.copy()`\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])  # replace __ with `[:]`\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])  # replace __ with `[:]`\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])  # replace __ with `[:]`\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t.copy())  # replace __ with `t.copy()`\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(list(t))  # replace __ with `list(t)`\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(list(t))  # replace __ with `list(t)`\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t.copy())  # replace __ with `t.copy()`\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c + u)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[len(t) - 1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[u])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c + u)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u + 1, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > u:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u + 1, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[u])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i + 1, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[u])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i - 1, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "ans.append(t[0])",
    "ans.append(t[1])",
    "ans.append(t[2])",
    "ans.append(t[-1])",
    "ans.append(t[len(t) - 1])",
    "ans.append(t[-2])",
    "ans.append(t[len(t) - 2])",
    "ans.append(t[3])",
    "ans.append(t[4])",
    "ans.append(t[-3])",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[u])  # Fill the hole with 'u'\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[s])  # Fill the hole with 's'\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[target])  # Fill the hole with 'target'\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-1])  # Fill the hole with '-1'\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])  # Fill the hole with '0'\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[len(candidates) - 1])  # Fill the hole with 'len(candidates) - 1'\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[s - 1])  # Fill the hole with 's - 1'\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[I])  # Fill the hole with 'I'\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[len(t) - 1])  # Fill the hole with 'len(t) - 1'\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])  # Fill the hole with '0'\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "t[-1]",
    "len(t) - 1",
    "u",
    "i",
    "s",
    "target",
    "len(ans)",
    "0",
    "s + 1",
    "u + 1",
    "ans.append(t[-1])",
    "ans.append(t[0])",
    "ans.append(t[len(t)-1])",
    "ans.append(t[-2])",
    "ans.append(t[1])",
    "ans.append(t[len(t)-2])",
    "ans.append(t[-3])",
    "ans.append(t[2])",
    "ans.append(t[len(t)-3])",
    "ans.append(t[-4])",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])  # Variant 1: Change __ to [:]\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t + [])  # Variant 2: Change __ to + []\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(tuple(t))  # Variant 3: Change __ to tuple(t)\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append([x for x in t])  # Variant 4: Change __ to [x for x in t]\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(list(t))  # Variant 5: Change __ to list(t)\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t.copy())  # Variant 6: Change __ to t.copy()\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(deepcopy(t))  # Variant 7: Change __ to deepcopy(t)\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t * 1)  # Variant 8: Change __ to t * 1\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t + [])  # Variant 9: Change __ to + []\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])  # Variant 10: Change __ to t[:]\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[len(t) // 2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[u])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[s])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[s // 2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[target])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[len(t) - 1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "ans.append(t[-1])",
    "ans.append(t)",
    "ans.append(c)",
    "ans.append(i)",
    "ans.append(candidates[i])",
    "ans.append(s)",
    "ans.append(u)",
    "ans.append(len(candidates))",
    "ans.append(target)",
    "ans.append(s + c)",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t.copy())\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i+1, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t.copy())\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i+1, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s - c, i, t)\n            t.pop()\n    ans = []\n    dfs(target, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t.copy())\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s - c, i, t)\n            t.pop()\n    ans = []\n    dfs(target, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s - c, i+1, t)\n            t.pop()\n    ans = []\n    dfs(target, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t.copy())\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s - c, i+1, t)\n            t.pop()\n    ans = []\n    dfs(target, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(target, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t.copy())\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(target, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[u])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[len(t)-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[len(t)-2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[u + 1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[u - 1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[index])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    index = 2\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[candidates[0]])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[u])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[s])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[u-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[u+1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[len(t)//2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[len(t)//3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[len(t)//4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[u])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[int])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[target])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[candidates])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[len(candidates)])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[s])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[t])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[s])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[s])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[u]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[s])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[u])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[s])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[target])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[target - 1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[len(t) - 1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-len(t)])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[len(t)-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[40])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[100])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[len(t) - 1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[len(t)-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i + 1, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)-1):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)-1):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i + 1, t)\n            t.pop()\n        if t:\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n        if t:\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n        if len(t):\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "__1 = candidates[i]\nt.append(__1)",
    "__2 = i\nt.append(__2)",
    "__3 = s + c\nt.append(__3)",
    "__4 = ans\nt.append(__4)",
    "__5 = len(candidates)\nt.append(__5)",
    "__6 = target\nans.append(t[__6])",
    "__7 = len(t)\nans.append(t[__7])",
    "__8 = s\nans.append(t[__8])",
    "__9 = i\nans.append(t[__9])",
    "__10 = c\nt.append(__10)",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[target])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[target - 1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[len(t) - 1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[s])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[u])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[u - 1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[u + 1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "ans.append(t)",
    "ans[t]",
    "ans.extend(t)",
    "ans.extend([t])",
    "ans += t",
    "ans += [t]",
    "ans.insert(__, t)",
    "ans.insert(0, t)",
    "ans.insert(-1, t)",
    "ans.insert(999, t)",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i + 1, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates) - 1):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i + 1, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u + 1, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u + 1, len(candidates) - 1):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t)\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t)\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates) - 1):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t)\n            return\n        if s > target:\n            return\n        for i in range(u + 1, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t)\n            return\n        if s > target:\n            return\n        for i in range(u + 1, len(candidates) - 1):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t)\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i + 1, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[u])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: list, target: int) -> list[list]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[u])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[u])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop(u)\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: list[int], target: int) -> list[list[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[u])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: list, target: int) -> list:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[u])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: list, target: int) -> list:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List, target: int) -> List:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[u])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[int]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[u])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop(0)\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List, target: int) -> List[int]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[u])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: list[int], target: int) -> list:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[u])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop(0)\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans"
  ],
  "num_code_blocks": 1493
}
