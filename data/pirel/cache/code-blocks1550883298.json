{
  "template": "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[__])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
  "lang": "py",
  "temperature": 0.7,
  "code_blocks": [
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "Variant 2:",
    "Variant 3:",
    "Variant 4:",
    "Variant 5:",
    "Variant 6:",
    "Variant 7:",
    "Variant 8:",
    "Variant 9:",
    "Variant 10:",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "ans.append(t[-1])",
    "ans.append(t[0])",
    "ans.append(t[len(t)-1])",
    "ans.append(t[u])",
    "ans.append(t[i])",
    "ans.append(t[-u])",
    "ans.append(t[-i])",
    "ans.append(t[u-1])",
    "ans.append(t[i-1])",
    "ans.append(t[len(t)-u])",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i + 1, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, u + 1, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, u, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, u + 1, t[:])\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, u, t[:])\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i + 1, t[:])\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t[:])\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, u + 1, t[:])\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, u, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[u])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[s])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[target])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[u-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[len(t)//2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[::-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[u])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-u])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[u+1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[u-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[u*u])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])  # Fill hole with `[:]`\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t.copy())  # Fill hole with `.copy()`\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])  # Fill hole with `[:]`\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.remove(c)  # Fill hole with `.remove(c)`\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])  # Fill hole with `[:]`\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.clear()  # Fill hole with `.clear()`\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])  # Fill hole with `[:]`\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            while t:  # Fill hole with `while t:`\n                t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])  # Fill hole with `[:]`\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t[:] = []  # Fill hole with `t[:] = []`\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])  # Fill hole with `[:]`\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t = []  # Fill hole with `t = []`\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])  # Fill hole with `[:]`\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t = list()  # Fill hole with `t = list()`\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])  # Fill hole with `[:]`\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t = [None]  # Fill hole with `t = [None]`\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])  # Fill hole with `[:]`\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t = [0]  # Fill hole with `t = [0]`\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[len(t)-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i+1, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-1])\n            return\n        if s > target:\n            return\n        for i in range(u+1, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u+1, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u+1, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[len(t)-1])\n            return\n        if s > target:\n            return\n        for i in range(u+1, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t)\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t.copy())\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.remove(c)\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t)\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.remove(c)\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t.copy())\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.remove(c)\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i+1, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t)\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i+1, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t.copy())\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i+1, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i+1, t)\n            t.remove(c)\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[u])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[u])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[u])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[u])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[u])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[u])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[u])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[u])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[u])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[u])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t.copy())\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i+1, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u+1, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i+1, t)\n            t.pop()\n    ans = []\n    dfs(0, 1, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(1, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i+1, t)\n            t.pop()\n    ans = []\n    dfs(1, 1, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u+1, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(1, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u+1, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i+1, t)\n            t.pop()\n    ans = []\n    dfs(1, 1, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 1, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[len(t) - 1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[u])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[s])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t)\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[u])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[u])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[s])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[len(t) - 1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[u])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[s])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[u + 1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[u - 1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0][0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[len(t)-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[len(t) - 1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[u])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[s])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[target])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[len(t)-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[s-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(list(t))\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(list(t))\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t.copy())\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(list(t))\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(list(t))\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(list(t))\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[u])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[s])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[t])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[len(t)-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-u])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[u-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[u+1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "ans.append(t[-1])",
    "ans.append(t[0])",
    "ans.append(t[len(t) - 1])",
    "ans.append(t[u])",
    "ans.append(t[i])",
    "ans.append(t[s])",
    "ans.append(t[target])",
    "ans.append(t[1])",
    "ans.append(t[s + u])",
    "ans.append(t[s - u])",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[u])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[s])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[target])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[i])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[len(t)-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[u+1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[len(t)-2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[i+1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[len(candidates)-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "...\n            ans.append(t[0])\n...",
    "...\n            ans.append(t[1])\n...",
    "...\n            ans.append(t[2])\n...",
    "...\n            ans.append(t[3])\n...",
    "...\n            ans.append(t[4])\n...",
    "...\n            ans.append(t[5])\n...",
    "...\n            ans.append(t[6])\n...",
    "...\n            ans.append(t[7])\n...",
    "...\n            ans.append(t[8])\n...",
    "...\n            ans.append(t[9])\n...",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i + 1, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i + 1, t[:])\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(list(t))\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t.copy())\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i + 1, t.copy())\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t.copy())\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t.copy())\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i + 1, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t[:])\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i + 1, t[:])\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i + 1, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, u + 1, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, u + 1, t[:])\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, u + 1, t.copy())\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i + 1, t.copy())\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, u + 1, list(t))\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i + 1, list(t))\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, u, t.copy())\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i + 1, t.copy())\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t)\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t)\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t)\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t)\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t)\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t.copy())\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i + 1, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t[:])\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i + 1, t[:])\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i + 1, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t[:])\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i + 1, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t[:])\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i + 1, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t + [])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t.copy())\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(list(t))\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t.copy())\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t)\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(list(t))\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t + [])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(list(t))\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[u])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[s])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[target])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[len(t)-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[s-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[u-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[u+1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i + 1, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u + 1, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u + 1, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i + 1, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i + 1, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u + 1, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i + 1, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u + 1, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u + 1, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i + 1, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[u])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[u - 1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[u + 1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[u * 2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[u // 2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i + 1, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i - 1, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s - c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s - c, i + 1, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s - c, i - 1, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s * c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s * c, i + 1, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s * c, i - 1, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s / c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i + 1, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i + 1, t[:])\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i + 1, t.copy())\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i + 1, t[:])\n            t.remove(c)\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i + 1, t.copy())\n            t.remove(c)\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i + 1, t.copy())\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t.copy())\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i + 1, t.copy())\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t.copy())\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i + 1, t[:])\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t.copy())\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i + 1, t[:])\n            t.remove(c)\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[u])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[s])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[len(t)-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i + 1, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, u, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i + 1, t[:])\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, u, t[:])\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t[:])\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, u, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i + 1, t[:])\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t[:])\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, u, t[:])\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[u])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[s])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[target])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[len(t) - 1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[u - 1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[s - 1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[len(t) - 1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "ans.append(t)",
    "ans.append(t[:])",
    "ans.append(list(t))",
    "ans.append(tuple(t))",
    "ans.append(t[0])",
    "ans.append(t[-1])",
    "ans.append(t[0:2])",
    "ans.append(t[-2:])",
    "ans.append([t])",
    "ans.append(list(t[::-1]))",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[u])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[s])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[len(candidates)])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[len(t) - 1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[target])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[s - 1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "ans.append(t)",
    "ans.append(c)",
    "ans.append(i)",
    "ans.append(u)",
    "ans.append(s)",
    "ans.append(len(candidates))",
    "ans.append(target)",
    "ans.append(dfs)",
    "ans.append(s + c)",
    "ans.append(i + 1)",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i + 1, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, u + 1, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i + 1, t[:])\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, u + 1, t[:])\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t)\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t)\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i + 1, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t)\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, u + 1, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t)\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i + 1, t[:])\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t)\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, u + 1, t[:])\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i + 1, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i + 1, t[:])\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i + 1, list(t))\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i + 1, t.copy())\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t)\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t)\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i + 1, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t)\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i + 1, list(t))\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t)\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i + 1, t[:])\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t)\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i + 1, t.copy())\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans"
  ],
  "num_code_blocks": 2700
}
