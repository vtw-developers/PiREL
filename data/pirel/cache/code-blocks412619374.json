{
  "template": "-1 if a * __ < 0 else 1",
  "lang": "py",
  "temperature": 0.7,
  "code_blocks": [
    "-1 if a * b < 0 else 1",
    "-1 if a * c < 0 else 1",
    "-1 if a * d < 0 else 1",
    "-1 if a * e < 0 else 1",
    "-1 if a * f < 0 else 1",
    "-1 if a * g < 0 else 1",
    "-1 if a * h < 0 else 1",
    "-1 if a * i < 0 else 1",
    "-1 if a * j < 0 else 1",
    "-1 if a * k < 0 else 1",
    "-1 if a * b < 0 else 1",
    "-1 if a * c < 0 else 1",
    "-1 if a * d < 0 else 1",
    "-1 if a * e < 0 else 1",
    "-1 if a * f < 0 else 1",
    "-1 if a * g < 0 else 1",
    "-1 if a * h < 0 else 1",
    "-1 if a * i < 0 else 1",
    "-1 if a * j < 0 else 1",
    "-1 if a * k < 0 else 1",
    "-1 if a * b < 0 else 1",
    "-1 if a * x < 0 else 1",
    "-1 if a * value < 0 else 1",
    "-1 if a * num < 0 else 1",
    "-1 if a * val < 0 else 1",
    "-1 if a * factor < 0 else 1",
    "-1 if a * multiplier < 0 else 1",
    "-1 if a * operand < 0 else 1",
    "-1 if a * coefficient < 0 else 1",
    "-1 if a * constant < 0 else 1",
    "-1 if a * b < 0 else 1",
    "-1 if a * c < 0 else 1",
    "-1 if a * d < 0 else 1",
    "-1 if a * e < 0 else 1",
    "-1 if a * f < 0 else 1",
    "-1 if a * g < 0 else 1",
    "-1 if a * h < 0 else 1",
    "-1 if a * i < 0 else 1",
    "-1 if a * j < 0 else 1",
    "-1 if a * k < 0 else 1",
    "-1 if a * b < 0 else 1",
    "-1 if a * c < 0 else 1",
    "-1 if a * d < 0 else 1",
    "-1 if a * e < 0 else 1",
    "-1 if a * f < 0 else 1",
    "-1 if a * g < 0 else 1",
    "-1 if a * h < 0 else 1",
    "-1 if a * i < 0 else 1",
    "-1 if a * j < 0 else 1",
    "-1 if a * k < 0 else 1",
    "-1 if a * b < 0 else 1",
    "-1 if a * 0 < 0 else 1",
    "-1 if a * 1 < 0 else 1",
    "-1 if a * 2 < 0 else 1",
    "-1 if a * 3 < 0 else 1",
    "-1 if a * 4 < 0 else 1",
    "-1 if a * 5 < 0 else 1",
    "-1 if a * 6 < 0 else 1",
    "-1 if a * 7 < 0 else 1",
    "-1 if a * 8 < 0 else 1",
    "-1 if a * b < 0 else 1",
    "-1 if a * c < 0 else 1",
    "-1 if a * x < 0 else 1",
    "-1 if a * foo < 0 else 1",
    "-1 if a * bar < 0 else 1",
    "-1 if a * baz < 0 else 1",
    "-1 if a * qux < 0 else 1",
    "-1 if a * spam < 0 else 1",
    "-1 if a * eggs < 0 else 1",
    "-1 if a * cheese < 0 else 1",
    "-1 if a * b < 0 else 1",
    "-1 if a * c < 0 else 1",
    "-1 if a * d < 0 else 1",
    "-1 if a * e < 0 else 1",
    "-1 if a * f < 0 else 1",
    "-1 if a * g < 0 else 1",
    "-1 if a * h < 0 else 1",
    "-1 if a * i < 0 else 1",
    "-1 if a * j < 0 else 1",
    "-1 if a * k < 0 else 1",
    "-1 if a * b < 0 else 1",
    "-1 if a * c < 0 else 1",
    "-1 if a * d < 0 else 1",
    "-1 if a * e < 0 else 1",
    "-1 if a * f < 0 else 1",
    "-1 if a * g < 0 else 1",
    "-1 if a * h < 0 else 1",
    "-1 if a * i < 0 else 1",
    "-1 if a * j < 0 else 1",
    "-1 if a * k < 0 else 1",
    "-1 if a * b < 0 else 1",
    "-1 if a * 3 < 0 else 1",
    "-1 if a * x < 0 else 1",
    "-1 if a * foo < 0 else 1",
    "-1 if a * 0.5 < 0 else 1",
    "-1 if a * -2 < 0 else 1",
    "-1 if a * \"x\" < 0 else 1",
    "-1 if a * True < 0 else 1",
    "-1 if a * [1, 2, 3] < 0 else 1",
    "-1 if a * None < 0 else 1",
    "-1 if a * b < 0 else 1",
    "-1 if a * x < 0 else 1",
    "-1 if a * var < 0 else 1",
    "-1 if a * value < 0 else 1",
    "-1 if a * num < 0 else 1",
    "-1 if a * i < 0 else 1",
    "-1 if a * n < 0 else 1",
    "-1 if a * val < 0 else 1",
    "-1 if a * result < 0 else 1",
    "-1 if a * temp < 0 else 1",
    "-1 if a * 0 < 0 else 1",
    "-1 if a * 1 < 0 else 1",
    "-1 if a * 2 < 0 else 1",
    "-1 if a * 3 < 0 else 1",
    "-1 if a * 4 < 0 else 1",
    "-1 if a * 5 < 0 else 1",
    "-1 if a * 6 < 0 else 1",
    "-1 if a * 7 < 0 else 1",
    "-1 if a * 8 < 0 else 1",
    "-1 if a * 9 < 0 else 1",
    "-1 if a * b < 0 else 1",
    "-1 if a * c < 0 else 1",
    "-1 if a * d < 0 else 1",
    "-1 if a * e < 0 else 1",
    "-1 if a * f < 0 else 1",
    "-1 if a * g < 0 else 1",
    "-1 if a * h < 0 else 1",
    "-1 if a * i < 0 else 1",
    "-1 if a * j < 0 else 1",
    "-1 if a * k < 0 else 1",
    "-1 if a * b < 0 else 1",
    "-1 if a * c < 0 else 1",
    "-1 if a * d < 0 else 1",
    "-1 if a * e < 0 else 1",
    "-1 if a * f < 0 else 1",
    "-1 if a * g < 0 else 1",
    "-1 if a * h < 0 else 1",
    "-1 if a * i < 0 else 1",
    "-1 if a * j < 0 else 1",
    "-1 if a * k < 0 else 1",
    "-1 if a * b < 0 else 1",
    "-1 if a * x < 0 else 1",
    "-1 if a * foo < 0 else 1",
    "-1 if a * num < 0 else 1",
    "-1 if a * value < 0 else 1",
    "-1 if a * result < 0 else 1",
    "-1 if a * var < 0 else 1",
    "-1 if a * temp < 0 else 1",
    "-1 if a * val < 0 else 1",
    "-1 if a * x_val < 0 else 1",
    "-1 if a * b < 0 else 1",
    "-1 if a * c < 0 else 1",
    "-1 if a * d < 0 else 1",
    "-1 if a * e < 0 else 1",
    "-1 if a * f < 0 else 1",
    "-1 if a * g < 0 else 1",
    "-1 if a * h < 0 else 1",
    "-1 if a * i < 0 else 1",
    "-1 if a * j < 0 else 1",
    "-1 if a * k < 0 else 1",
    "-1 if a * b < 0 else 1",
    "-1 if a * x < 0 else 1",
    "-1 if a * value < 0 else 1",
    "-1 if a * num < 0 else 1",
    "-1 if a * n < 0 else 1",
    "-1 if a * i < 0 else 1",
    "-1 if a * value1 < 0 else 1",
    "-1 if a * x_val < 0 else 1",
    "-1 if a * count < 0 else 1",
    "-1 if a * value2 < 0 else 1",
    "-1 if a * b < 0 else 1",
    "-1 if a * 2 < 0 else 1",
    "-1 if a * 0.5 < 0 else 1",
    "-1 if a * -1 < 0 else 1",
    "-1 if a * 10 < 0 else 1",
    "-1 if a * (3+4) < 0 else 1",
    "-1 if a * (x+y) < 0 else 1",
    "-1 if a * (a*b) < 0 else 1",
    "-1 if a * (a-1) < 0 else 1",
    "-1 if a * (a**2) < 0 else 1",
    "-1 if a * 0 < 0 else 1",
    "-1 if a * 1 < 0 else 1",
    "-1 if a * 2 < 0 else 1",
    "-1 if a * 3 < 0 else 1",
    "-1 if a * 4 < 0 else 1",
    "-1 if a * 5 < 0 else 1",
    "-1 if a * 6 < 0 else 1",
    "-1 if a * 7 < 0 else 1",
    "-1 if a * 8 < 0 else 1",
    "-1 if a * 9 < 0 else 1",
    "-1 if a * b < 0 else 1",
    "-1 if a * c < 0 else 1",
    "-1 if a * d < 0 else 1",
    "-1 if a * e < 0 else 1",
    "-1 if a * f < 0 else 1",
    "-1 if a * g < 0 else 1",
    "-1 if a * h < 0 else 1",
    "-1 if a * i < 0 else 1",
    "-1 if a * j < 0 else 1",
    "-1 if a * k < 0 else 1",
    "-1 if a * b < 0 else 1",
    "-1 if a * c < 0 else 1",
    "-1 if a * d < 0 else 1",
    "-1 if a * e < 0 else 1",
    "-1 if a * f < 0 else 1",
    "-1 if a * g < 0 else 1",
    "-1 if a * h < 0 else 1",
    "-1 if a * i < 0 else 1",
    "-1 if a * j < 0 else 1",
    "-1 if a * k < 0 else 1",
    "-1 if a * b < 0 else 1",
    "-1 if a * x < 0 else 1",
    "-1 if a * value < 0 else 1",
    "-1 if a * num < 0 else 1",
    "-1 if a * val < 0 else 1",
    "-1 if a * multiplier < 0 else 1",
    "-1 if a * factor < 0 else 1",
    "-1 if a * operand < 0 else 1",
    "-1 if a * temp < 0 else 1",
    "-1 if a * value1 < 0 else 1",
    "-1 if a * b < 0 else 1",
    "-1 if a * 2 < 0 else 1",
    "-1 if a * 3 < 0 else 1",
    "-1 if a * 4 < 0 else 1",
    "-1 if a * 5 < 0 else 1",
    "-1 if a * 6 < 0 else 1",
    "-1 if a * 7 < 0 else 1",
    "-1 if a * 8 < 0 else 1",
    "-1 if a * 9 < 0 else 1",
    "-1 if a * 10 < 0 else 1",
    "-1 if a * b < 0 else 1",
    "-1 if a * x < 0 else 1",
    "-1 if a * num < 0 else 1",
    "-1 if a * value < 0 else 1",
    "-1 if a * val < 0 else 1",
    "-1 if a * n < 0 else 1",
    "-1 if a * count < 0 else 1",
    "-1 if a * multiplier < 0 else 1",
    "-1 if a * factor < 0 else 1",
    "-1 if a * operand < 0 else 1",
    "-1 if a * b < 0 else 1",
    "-1 if a * c < 0 else 1",
    "-1 if a * d < 0 else 1",
    "-1 if a * e < 0 else 1",
    "-1 if a * f < 0 else 1",
    "-1 if a * g < 0 else 1",
    "-1 if a * h < 0 else 1",
    "-1 if a * i < 0 else 1",
    "-1 if a * j < 0 else 1",
    "-1 if a * k < 0 else 1",
    "-1 if a * b < 0 else 1",
    "-1 if a * 42 < 0 else 1",
    "-1 if a * x < 0 else 1",
    "-1 if a * value < 0 else 1",
    "-1 if a * 7.5 < 0 else 1",
    "-1 if a * foo < 0 else 1",
    "-1 if a * 0.123 < 0 else 1",
    "-1 if a * bar < 0 else 1",
    "-1 if a * 100 < 0 else 1",
    "-1 if a * spam < 0 else 1",
    "-1 if a * b < 0 else 1",
    "-1 if a * c < 0 else 1",
    "-1 if a * d < 0 else 1",
    "-1 if a * e < 0 else 1",
    "-1 if a * f < 0 else 1",
    "-1 if a * g < 0 else 1",
    "-1 if a * h < 0 else 1",
    "-1 if a * i < 0 else 1",
    "-1 if a * j < 0 else 1",
    "-1 if a * k < 0 else 1",
    "-1 if a * b < 0 else 1",
    "-1 if a * c < 0 else 1",
    "-1 if a * d < 0 else 1",
    "-1 if a * e < 0 else 1",
    "-1 if a * f < 0 else 1",
    "-1 if a * g < 0 else 1",
    "-1 if a * h < 0 else 1",
    "-1 if a * i < 0 else 1",
    "-1 if a * j < 0 else 1",
    "-1 if a * k < 0 else 1",
    "-1 if a * b < 0 else 1",
    "-1 if a * c < 0 else 1",
    "-1 if a * d < 0 else 1",
    "-1 if a * e < 0 else 1",
    "-1 if a * f < 0 else 1",
    "-1 if a * g < 0 else 1",
    "-1 if a * h < 0 else 1",
    "-1 if a * i < 0 else 1",
    "-1 if a * j < 0 else 1",
    "-1 if a * k < 0 else 1",
    "-1 if a * b < 0 else 1",
    "-1 if a * c < 0 else 1",
    "-1 if a * d < 0 else 1",
    "-1 if a * e < 0 else 1",
    "-1 if a * f < 0 else 1",
    "-1 if a * g < 0 else 1",
    "-1 if a * h < 0 else 1",
    "-1 if a * i < 0 else 1",
    "-1 if a * j < 0 else 1",
    "-1 if a * k < 0 else 1"
  ],
  "num_code_blocks": 300
}
