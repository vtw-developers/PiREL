{
  "template": "def f_gold(nums1: __[int], nums2: List[int]) -> float:\n    some_secret_fn_4071()",
  "lang": "py",
  "temperature": 0.7,
  "code_blocks": [
    "def f_gold(nums1: List[int], nums2: List[int]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: List[float], nums2: List[int]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: List[int], nums2: List[float]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: List[float], nums2: List[float]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: List[int], nums2: list) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: list, nums2: List[int]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: List[int], nums2: list[float]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: list[float], nums2: List[int]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: list, nums2: list[float]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: list[float], nums2: list[float]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: List[int], nums2: List[int]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: int, nums2: List[int]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: List, nums2: List[int]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: List[int], nums2: float) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: int, nums2: float) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: List, nums2: float) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: int, nums2: List) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: List[int], nums2: List) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: int, nums2: List) -> int:\n    some_secret_fn_4071()",
    "def f_gold(nums1: int, nums2: List[int]) -> int:\n    some_secret_fn_4071()",
    "def f_gold(nums1: List[int], nums2: List[int]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: set[int], nums2: List[int]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: dict[str, int], nums2: List[int]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: tuple[int, int, int], nums2: List[int]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: Union[int, float], nums2: List[int]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: List[List[int]], nums2: List[int]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: Any, nums2: List[int]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: str, nums2: List[int]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: bool, nums2: List[int]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: List[bool], nums2: List[int]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: List[int], nums2: List[int]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: Tuple[int], nums2: List[int]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: Union[int, List[int]], nums2: List[int]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: Optional[List[int]], nums2: List[int]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: List[int], nums2: Optional[List[int]]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: List[int], nums2: Union[int, List[int]]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: Union[int, List[int]], nums2: Union[int, List[int]]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: List[Union[int, str]], nums2: List[int]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: List[int], nums2: List[Union[int, str]]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: List, nums2: List[int]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: List[int], nums2: List[int]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: Tuple[int], nums2: List[int]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: List[int], nums2: Tuple[int]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: List[int], nums2: List[float]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: List[int], nums2: List[str]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: List[int], nums2: List[bool]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: List[int], nums2: Dict[str, int]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: List[int], nums2: Set[int]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: List[int], nums2: Union[int, float]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: List[int], nums2: Any) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: list[int], nums2: List[int]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: List[int], nums2: List[int]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: List[int], nums2: list[int]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: List[int], nums2: List) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: list, nums2: List[int]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: list, nums2: list[int]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: list, nums2: List) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: List, nums2: List[int]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: List, nums2: List) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: list, nums2: list) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: list[int], nums2: List[int]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: List[int], nums2: list[int]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: List[int], nums2: List[int]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: [int], nums2: List[int]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: list, nums2: List[int]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: [int], nums2: [int]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: list, nums2: [int]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: [int], nums2: list) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: list[int], nums2: [int]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: [int], nums2: list[int]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: list[int], nums2: List[int]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: List[int], nums2: list[int]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: List[int], nums2: List[int]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: int[], nums2: List[int]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: List[int], nums2: int[]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: int[], nums2: int[]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: list[int], nums2: int[]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: int[], nums2: list[int]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: list[int], nums2: list[int]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: int[], nums2: int[]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: List[int], nums2: List[int]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: Tuple[int], nums2: List[int]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: List[float], nums2: List[int]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: List[int], nums2: List[float]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: Union[int, float], nums2: List[int]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: List[int], nums2: List[int]) -> int:\n    some_secret_fn_4071()",
    "def f_gold(nums1: List[int], nums2: List[int]) -> str:\n    some_secret_fn_4071()",
    "def f_gold(nums1: List[int], nums2: List[int]) -> bool:\n    some_secret_fn_4071()",
    "def f_gold(nums1: List[int], nums2: List[int]) -> object:\n    some_secret_fn_4071()",
    "def f_gold(nums1: List[int], nums2: List[int]) -> None:\n    some_secret_fn_4071()",
    "# Variant 1\ndef f_gold(nums1: List[int], nums2: List[int]) -> float:\n    some_secret_fn_4071()\n\n# Variant 2\ndef f_gold(nums1: Any, nums2: List[int]) -> float:\n    some_secret_fn_4071()\n\n# Variant 3\ndef f_gold(nums1: List, nums2: List[int]) -> float:\n    some_secret_fn_4071()\n\n# Variant 4\ndef f_gold(nums1: List[Any], nums2: List[int]) -> float:\n    some_secret_fn_4071()\n\n# Variant 5\ndef f_gold(nums1: List[float], nums2: List[int]) -> float:\n    some_secret_fn_4071()\n\n# Variant 6\ndef f_gold(nums1: List[str], nums2: List[int]) -> float:\n    some_secret_fn_4071()\n\n# Variant 7\ndef f_gold(nums1: List[bool], nums2: List[int]) -> float:\n    some_secret_fn_4071()\n\n# Variant 8\ndef f_gold(nums1: List[object], nums2: List[int]) -> float:\n    some_secret_fn_4071()\n\n# Variant 9\ndef f_gold(nums1: List[Tuple[int]], nums2: List[int]) -> float:\n    some_secret_fn_4071()\n\n# Variant 10\ndef f_gold(nums1: List[Union[int, float]], nums2: List[int]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: List[int], nums2: List[int]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: Tuple[int], nums2: List[int]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: Set[int], nums2: List[int]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: Dict[str, int], nums2: List[int]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: Union[int, float], nums2: List[int]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: Any, nums2: List[int]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: Optional[int], nums2: List[int]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: Callable[[int], int], nums2: List[int]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: Generator[int, None, None], nums2: List[int]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: Iterator[int], nums2: List[int]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: List[int], nums2: List[int]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: Tuple[int], nums2: List[int]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: List[int], nums2: List[float]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: List[int], nums2: List[str]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: List[int], nums2: List[bool]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: List[int], nums2: List[complex]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: List[int], nums2: List[object]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: List[int], nums2: List[Any]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: List[int], nums2: List[Union[int, float]]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: List[int], nums2: List[Optional[int]]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: List[int], nums2: List[int]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: list[int], nums2: List[int]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: typing.List[int], nums2: List[int]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: [int], nums2: List[int]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: (int,), nums2: List[int]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: tuple[int], nums2: List[int]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: int[], nums2: List[int]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: list, nums2: List[int]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: list[int], nums2: list[int]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: list, nums2: list[int]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: List[int], nums2: List[int]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: dict[int, int], nums2: List[int]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: Tuple[int, int], nums2: List[int]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: int, nums2: List[int]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: List[str], nums2: List[int]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: Set[int], nums2: List[int]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: Union[int, str], nums2: List[int]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: Any, nums2: List[int]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: List[float], nums2: List[int]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: List[Union[float, int]], nums2: List[int]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: List[int], nums2: List[int]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: int, nums2: List[int]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: List, nums2: List[int]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: List[int], nums2: float) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: int, nums2: float) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: List, nums2: float) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: int, nums2: int) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: List, nums2: int) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: int, nums2: List) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: List, nums2: List) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: List[int], nums2: List[int]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: dict[int, int], nums2: List[int]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: str, nums2: List[int]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: set[int], nums2: List[int]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: tuple[int], nums2: List[int]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: int, nums2: List[int]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: float, nums2: List[int]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: bool, nums2: List[int]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: bytes, nums2: List[int]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: bytearray, nums2: List[int]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: list[int], nums2: List[int]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: tuple[int], nums2: List[int]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: set[int], nums2: List[int]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: dict[str, int], nums2: List[int]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: str, nums2: List[int]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: bytes, nums2: List[int]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: bytearray, nums2: List[int]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: range, nums2: List[int]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: complex, nums2: List[int]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: bool, nums2: List[int]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: list[int], nums2: List[int]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: List[int], nums2: list[int]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: List[int], nums2: List[int]) -> int:\n    some_secret_fn_4071()",
    "def f_gold(nums1: list[int], nums2: list[int]) -> int:\n    some_secret_fn_4071()",
    "def f_gold(nums1: List[float], nums2: List[int]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: List[int], nums2: List[float]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: List[str], nums2: List[int]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: List[int], nums2: List[str]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: List[int], nums2: List[int]) -> None:\n    some_secret_fn_4071()",
    "def f_gold(nums1: List[int], nums2: List[int]) -> bool:\n    some_secret_fn_4071()",
    "def f_gold(nums1: list[int], nums2: List[int]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: List[int], nums2: List[int]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: typing.List[int], nums2: List[int]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: List[int], nums2: typing.List[int]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: [int], nums2: List[int]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: List[int], nums2: [int]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: [], nums2: List[int]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: List[int], nums2: []) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: list, nums2: List[int]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: List[int], nums2: list) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: List[int], nums2: List[int]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: int, nums2: List[int]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: Any, nums2: List[int]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: Union[int, float], nums2: List[int]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: List, nums2: List[int]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: List[float], nums2: List[int]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: List[int], nums2: int) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: List[int], nums2: Any) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: List[int], nums2: Union[int, float]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: List[int], nums2: List) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: List[int], nums2: List[int]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: tuple[int], nums2: List[int]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: set[int], nums2: List[int]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: dict[str, int], nums2: List[int]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: int, nums2: List[int]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: float, nums2: List[int]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: str, nums2: List[int]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: bool, nums2: List[int]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: None, nums2: List[int]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: object, nums2: List[int]) -> float:\n    some_secret_fn_4071()",
    "# Variant 1\nfrom typing import List\n\ndef f_gold(nums1: List[int], nums2: List[int]) -> float:\n    some_secret_fn_4071()\n\n# Variant 2\nfrom typing import List, Any\n\ndef f_gold(nums1: List[int], nums2: List[Any]) -> float:\n    some_secret_fn_4071()\n\n# Variant 3\nfrom typing import List, Union\n\ndef f_gold(nums1: List[int], nums2: List[Union[int, str]]) -> float:\n    some_secret_fn_4071()\n\n# Variant 4\nfrom typing import List, Tuple\n\ndef f_gold(nums1: List[int], nums2: List[Tuple[int, int]]) -> float:\n    some_secret_fn_4071()\n\n# Variant 5\nfrom typing import List, Dict\n\ndef f_gold(nums1: List[int], nums2: List[Dict[str, int]]) -> float:\n    some_secret_fn_4071()\n\n# Variant 6\nfrom typing import List, Set\n\ndef f_gold(nums1: List[int], nums2: List[Set[int]]) -> float:\n    some_secret_fn_4071()\n\n# Variant 7\nfrom typing import List, Callable\n\ndef f_gold(nums1: List[int], nums2: List[Callable]) -> float:\n    some_secret_fn_4071()\n\n# Variant 8\nfrom typing import List, AnyStr\n\ndef f_gold(nums1: List[int], nums2: List[AnyStr]) -> float:\n    some_secret_fn_4071()\n\n# Variant 9\nfrom typing import List, Iterable\n\ndef f_gold(nums1: List[int], nums2: List[Iterable[int]]) -> float:\n    some_secret_fn_4071()\n\n# Variant 10\nfrom typing import List, Optional\n\ndef f_gold(nums1: List[int], nums2: List[Optional[int]]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: list[int], nums2: List[int]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: List[int], nums2: list[int]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: List[int], nums2: List[int]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: int[], nums2: List[int]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: List[int], nums2: int[]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: int[], nums2: int[]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: List, nums2: List[int]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: List[int], nums2: List) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: list, nums2: List[int]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: List[int], nums2: list) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: List[int], nums2: List[int]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: Tuple[int], nums2: List[int]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: List[float], nums2: List[int]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: Tuple[float], nums2: List[int]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: Set[int], nums2: List[int]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: Dict[str, int], nums2: List[int]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: Union[int, float], nums2: List[int]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: Any, nums2: List[int]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: int, nums2: List[int]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: float, nums2: List[int]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: Union[int], nums2: List[int]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: Optional[int], nums2: List[int]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: Tuple[int], nums2: List[int]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: Iterable[int], nums2: List[int]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: Any[int], nums2: List[int]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: Callable[[int], int], nums2: List[int]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: Generator[int, None, None], nums2: List[int]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: Dict[int, int], nums2: List[int]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: Set[int], nums2: List[int]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: Iterator[int], nums2: List[int]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: dict[int], nums2: List[int]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: set[int], nums2: List[int]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: str, nums2: List[int]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: tuple[int], nums2: List[int]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: bool, nums2: List[int]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: float, nums2: List[int]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: bytes, nums2: List[int]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: bytearray, nums2: List[int]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: complex, nums2: List[int]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: object, nums2: List[int]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: list[int], nums2: List[int]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: tuple[int], nums2: List[int]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: set[int], nums2: List[int]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: dict[int, int], nums2: List[int]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: str, nums2: List[int]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: float, nums2: List[int]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: bool, nums2: List[int]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: object, nums2: List[int]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: int, nums2: List[int]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: Any, nums2: List[int]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: List[int], nums2: List[int]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: Tuple[int], nums2: List[int]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: Dict[str, int], nums2: List[int]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: Set[int], nums2: List[int]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: Union[int, float], nums2: List[int]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: Callable, nums2: List[int]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: Any, nums2: List[int]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: Optional[int], nums2: List[int]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: Type[int], nums2: List[int]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: Iterator[int], nums2: List[int]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: List[int], nums2: List[int]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: int, nums2: List[int]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: str, nums2: List[int]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: float, nums2: List[int]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: bool, nums2: List[int]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: dict, nums2: List[int]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: set, nums2: List[int]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: tuple, nums2: List[int]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: Any, nums2: List[int]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: Union[int, float], nums2: List[int]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: List[int], nums2: List[int]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: list[int], nums2: List[int]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: typing.List[int], nums2: List[int]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: [int], nums2: List[int]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: List[int], nums2: list[int]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: List[int], nums2: typing.List[int]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: [int], nums2: list[int]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: list[int], nums2: typing.List[int]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: [int], nums2: [int]) -> float:\n    some_secret_fn_4071()",
    "def f_gold(nums1: list[int], nums2: list[int]) -> float:\n    some_secret_fn_4071()"
  ],
  "num_code_blocks": 282
}
