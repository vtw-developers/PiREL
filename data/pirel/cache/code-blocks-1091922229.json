{
  "template": "[[__] * (n + 1) for _ in range(m + 1)]",
  "lang": "py",
  "temperature": 1.2,
  "code_blocks": [
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[['placeholder'] * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1) for _ in range(m + 1)]",
    "[[] * (n + 1) for _ in range(m + 1)]",
    "[{} * (n + 1) for _ in range(m + 1)]",
    "[True * (n + 1) for _ in range(m + 1)]",
    "[data] * (n + 1) for _ in range(m + 1)]",
    "[object() * (n + 1) for _ in range(m + 1)]",
    "[float('inf')] * (n + 1) for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1)  for _ in range(m + 1)]",
    "[[[]] * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[[True] * (n + 1) for _ in range(m + 1)]",
    "[[dict()] * (n + 1) for _ in range(m + 1)]",
    "[[object()] * (n + 1) for _ in range(m + 1)]",
    "[[{'key': 'value'}] * (n + 1) for _ in range(m + 1)]",
    "[[1.0] * (n + 1) for _ in range(m + 1)]",
    "[[set()] * (n + 1) for _ in range(m + 1)]",
    "[[_] * (n + 1) for _ in range(m + 1)]",
    "[[_()] * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[[True] * (n + 1) for _ in range(m + 1)]",
    "[[[]] * (n + 1) for _ in range(m + 1)]",
    "[[{}] * (n + 1) for _ in range(m + 1)]",
    "[[()] * (n + 1) for _ in range(m + 1)]",
    "[set() * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1) for _ in range(m + 1)]",
    "[[0.0] * (n + 1) for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1) for _ in range(m + 1)]",
    "[[] * (n + 1) for _ in range(m + 1)]",
    "[{} * (n + 1) for _ in range(m + 1)]",
    "[[False] * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[['__'] * (n + 1) for _ in range(m + 1)]",
    "[0.0 * (n + 1) for _ in range(m + 1)]",
    "[[()] * (n + 1) for _ in range(m + 1)]",
    "[[{} for _ in range(n + 1)] for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1) for _ in range(m + 1)]",
    "[[] * (n + 1) for _ in range(m + 1)]",
    "[{} * (n + 1) for _ in range(m + 1)]",
    "[() * (n + 1) for _ in range(m + 1)]",
    "[\"\"] * (n + 1) for _ in range(m + 1)",
    "[\"random_string\"] * (n + 1) for _ in range(m + 1)",
    "[True] * (n + 1) for _ in range(m + 1)",
    "[lambda x: x+1] * (n + 1) for _ in range(m + 1)",
    "[print(\"Hello\")] * (n + 1) for _ in range(m + 1)",
    "[None] * (n + 1) for _ in range(m + 1)",
    "1 * (n + 1) for _ in range(m + 1)",
    "\"string\" * (n + 1) for _ in range(m + 1)",
    "[True] * (n + 1) for _ in range(m + 1)",
    "(3.14) * (n + 1) for _ in range(m + 1)",
    "{1, 2, 3} * (n + 1) for _ in range(m + 1)",
    "(1, 2, 3) * (n + 1) for _ in range(m + 1)",
    "0.5 * (n + 1) for _ in range(m + 1)",
    "{True, False} * (n + 1) for _ in range(m + 1)",
    "\"string\" * (n + 1) for __ in range(m + 1)",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[[[]] * (n + 1) for _ in range(m + 1)]",
    "[['__'] * (n + 1) for _ in range(m + 1)]",
    "[{} * (n + 1) for _ in range(m + 1)]",
    "[[True] * (n + 1) for _ in range(m + 1)]",
    "[float('inf')] * (n + 1) for _ in range(m + 1)",
    "[[lambda: None] * (n + 1) for _ in range(m + 1)]",
    "[['your_token'] * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1) for _ in range(m + 1)]",
    "[1] * (n + 1) for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[['placeholder'] * (n + 1) for _ in range(m + 1)]",
    "[[] * (n + 1) for _ in range(m + 1)]",
    "[[{} * (n + 1)] for _ in range(m + 1)]",
    "[[0.0] * (n + 1) for _ in range(m + 1)]",
    "[[True] * (n + 1)  for _ in range(m + 1)]",
    "[[''] * (n + 1)  for _ in range(m + 1)]",
    "[[()] * (n + 1) for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[[] * (n + 1) for _ in range(m + 1)]",
    "[{} * (n + 1) for _ in range(m + 1)]",
    "[set() * (n + 1) for _ in range(m + 1)]",
    "[() * (n + 1) for _ in range(m + 1)]",
    "[list() * (n + 1) for _ in range(m + 1)]",
    "[dict() * (n + 1) for _ in range(m + 1)]",
    "[str() * (n + 1) for _ in range(m + 1)]",
    "[[x] * (n + 1) for _ in range(m + 1)]  \n[[None] * (n + 1) for _ in range(m + 1)]\n[[''] * (n + 1) for _ in range(m + 1)]\n[{} * (n + 1) for _ in range(m + 1)]\n[() * (n + 1) for _ in range(m + 1)]\n[['placeholder'] * (n + 1) for _ in range(m + 1)]\n[[0] * (n + 1) for _ in range(m + 1)]\n[[True] * (n + 1) for _ in range(m + 1)]\n[['x'] * (n + 1) for _ in range(m + 1)]\n[[{'value': None}] * (n + 1) for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[] * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1) for _ in range(m + 1)]",
    "[['placeholder'] * (n + 1) for _ in range(m + 1)]",
    "[[True] * (n + 1) for _ in range(m + 1)]",
    "[{} * (n + 1) for _ in range(m + 1)]",
    "[[[]] * (n + 1) for _ in range(m + 1)]",
    "[[list()] * (n + 1) for _ in range(m + 1)]",
    "[[dict()] * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[0 * (n + 1) for _ in range(m + 1)]",
    "[True * (n + 1) for _ in range(m + 1)]",
    "[[] * (n + 1) for _ in range(m + 1)]",
    "['undefined_token' * (n + 1) for _ in range(m + 1)]",
    "['placeholder' * (n + 1) for _ in range(m + 1)]",
    "[1j * (n + 1) for _ in range(m + 1)]",
    "[[False] * (n + 1) for _ in range(m + 1)]",
    "[[{}] * (n + 1) for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[[] * (n + 1) for _ in range(m + 1)]",
    "['' * (n + 1) for _ in range(m + 1)]",
    "[0 * (n + 1) for _ in range(m + 1)]",
    "[False * (n + 1) for _ in range(m + 1)]",
    "[{} * (n + 1) for _ in range(m + 1)]",
    "[() * (n + 1) for _ in range(m + 1)]",
    "[float('nan') * (n + 1) for _ in range(m + 1)]",
    "[range(10) * (n + 1) for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[[[]] * (n + 1) for _ in range(m + 1)]",
    "[[{}] * (n + 1) for _ in range(m + 1)]",
    "[[set()] * (n + 1) for _ in range(m + 1)]",
    "[[()] * (n + 1) for _ in range(m + 1)]",
    "[[True] * (n + 1) for _ in range(m + 1)]",
    "[[False] * (n + 1) for _ in range(m + 1)]",
    "[[-1] * (n + 1) for _ in range(m + 1)]",
    "[[token] * (n + 1) for _ in range(m + 1)]",
    "[[var] * (n + 1) for _ in range(m + 1)]",
    "[[value] * (n + 1) for _ in range(m + 1)]",
    "[[placeholder] * (n + 1) for _ in range(m + 1)]",
    "[[hole] * (n + 1) for _ in range(m + 1)]",
    "[[undefined] * (n + 1) for _ in range(m + 1)]",
    "[[dummy] * (n + 1) for _ in range(m + 1)]",
    "[[temp] * (n + 1) for _ in range(m + 1)]",
    "[[value_hole] * (n + 1) for _ in range(m + 1)]",
    "[[abc] * (n + 1) for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[[[]] * (n + 1) for _ in range(m + 1)]",
    "[[{} for _ in range(2)] for _ in range(2)]",
    "[('a', 'b', 'c') for _ in range(3)]",
    "[[False] * (n + 1) for _ in range(m + 1)]",
    "[[0.0] * (n + 1) for _ in range(m + 1)]",
    "[['Hello'] * (n + 1) for _ in range(m + 1)]",
    "[['*'] * (n + 1) for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[True] * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[{i} * (n + 1) for _ in range(m + 1)]",
    "[{} * (n + 1) for _ in range(m + 1)]",
    "[['__'] * (n + 1) for _ in range(m + 1)]",
    "[(i, j) * (n + 1) for i in range(m + 1)]",
    "[()] * (n + 1) for _ in range(m + 1)]",
    "[lambda x: x * (n + 1) for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[[[]] * (n + 1) for _ in range(m + 1)]",
    "[['placeholder'] * (n + 1) for _ in range(m + 1)]",
    "[[False] * (n + 1) for _ in range(m + 1)]",
    "[[0.0] * (n + 1) for _ in range(m + 1)]",
    "[[-1] * (n + 1) for _ in range(m + 1)]",
    "[[{}]* (n + 1) for _ in range(m + 1)]",
    "['placeholder' * (n + 1) for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1) for _ in range(m + 1)]",
    "[[] * (n + 1) for _ in range(m + 1)]",
    "[{} * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[[False] * (n + 1) for _ in range(m + 1)]",
    "[[0.0] * (n + 1) for _ in range(m + 1)]",
    "[[()] * (n + 1) for _ in range(m + 1)]",
    "[['a'] * (n + 1) for _ in range(m + 1)]",
    "[[[1, 2, 3]] * (n + 1) for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[] * (n + 1) for _ in range(m + 1)]",
    "[\"\" * (n + 1) for _ in range(m + 1)]",
    "[{} * (n + 1) for _ in range(m + 1)]",
    "[() * (n + 1) for _ in range(m + 1)]",
    "[False * (n + 1) for _ in range(m + 1)]",
    "[0 * (n + 1) for _ in range(m + 1)]",
    "[0.0 * (n + 1) for _ in range(m + 1)]",
    "[None * (n + 1) for _ in range(m + 1)]",
    "[() * (n + 1) for _ in range(m + 1)]",
    "# Variant 1\n[[None] * (n + 1) for _ in range(m + 1)]\n\n# Variant 2\n[[0] * (n + 1) for _ in range(m + 1)]\n\n# Variant 3\n[[] * (n + 1) for _ in range(m + 1)]\n\n# Variant 4\n[[''] * (n + 1) for _ in range(m + 1)]\n\n# Variant 5\n[{}] * (n + 1) for _ in range(m + 1)]\n\n# Variant 6\n[[()] * (n + 1) for _ in range(m + 1)]\n\n# Variant 7\n[[set()] * (n + 1) for _ in range(m + 1)]\n\n# Variant 8\n[['' for _ in range(n + 1)] for _ in range(m + 1)]\n\n# Variant 9\n[[0 for _ in range(n + 1)] for _ in range(m + 1)]\n\n# Variant 10\n[[set() for __ in range(n + 1)] for ___ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[[[]] * (n + 1) for _ in range(m + 1)]",
    "[[{}] * (n + 1) for _ in range(m + 1)]",
    "[[True] * (n + 1) for _ in range(m + 1)]",
    "[[False] * (n + 1) for _ in range(m + 1)]",
    "[[0.0] * (n + 1) for _ in range(m + 1)]",
    "[[()] * (n + 1) for _ in range(m + 1)]",
    "[[object()] * (n + 1) for _ in range(m + 1)]",
    "[None for _ in range(m + 1)]",
    "[True for _ in range(m + 1)]",
    "['Hello' for _ in range(m + 1)]",
    "[1.0 for _ in range(m + 1)]",
    "[{'a': 1} for _ in range(m + 1)]",
    "[('cat', 'dog') for _ in range(m + 1)]",
    "[range(10) for _ in range(m + 1)]",
    "[object() for _ in range(m + 1)]",
    "[[[None]] for _ in range(m + 1)]",
    "[['abc'] for _ in range(m + 1)]",
    "[None] * (n + 1) for _ in range(m + 1)]",
    "[] * (n + 1) for _ in range(m + 1)]",
    "\"\" * (n + 1) for _ in range(m + 1)]",
    "True * (n + 1) for _ in range(m + 1)]",
    "1 * (n + 1) for _ in range(m + 1)]",
    "{} * (n + 1) for _ in range(m + 1)]",
    "{None} * (n + 1) for _ in range(m + 1)]",
    "(5.5) * (n + 1) for _ in range(m + 1)]",
    "(lambda x: x) * (n + 1) for _ in range(m + 1)]",
    "[x for x in range(5)] * (n + 1) for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1) for _ in range(m + 1)]",
    "[[] * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[[True] * (n + 1) for _ in range(m + 1)]",
    "[False for _ in range(m + 1)]",
    "[[[] for __ in range(n + 1)] for __ in range(m + 1)]",
    "[[{}] * (n + 1) for _ in range(m + 1)]",
    "[[0.0] * (n + 1) for _ in range(m + 1)]",
    "[[()] * (n + 1) for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1) for _ in range(m + 1)]",
    "[[] * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[{} * (n + 1) for _ in range(m + 1)]",
    "[set() * (n + 1) for _ in range(m + 1)]",
    "['' * (n + 1) for _ in range(m + 1)]",
    "['x' * (n + 1) for _ in range(m + 1)]",
    "[(0, 0) * (n + 1) for _ in range(m + 1)]",
    "[bool() * (n + 1) for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1) for _ in range(m + 1)]",
    "[[] * (n + 1) for _ in range(m + 1)]",
    "['' * (n + 1) for _ in range(m + 1)]",
    "[{} * (n + 1) for _ in range(m + 1)]",
    "[False * (n + 1) for _ in range(m + 1)]",
    "['filler' * (n + 1) for _ in range(m + 1)]",
    "[0.0 * (n + 1) for _ in range(m + 1)]",
    "[' ' * (n + 1) for _ in range(m + 1)]",
    "[(1, 2) * (n+1) for _ in range(m+1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[] * (n + 1) for _ in range(m + 1)]",
    "[{} * (n + 1) for _ in range(m + 1)]",
    "['' * (n + 1) for _ in range(m + 1)]",
    "[0 * (n + 1) for _ in range(m + 1)]",
    "[bool() * (n + 1) for _ in range(m + 1)]",
    "[float() * (n + 1) for _ in range(m + 1)]",
    "['test' * (n + 1) for _ in range(m + 1)]",
    "[bytes() * (n + 1) for _ in range(m + 1)]",
    "[set() * (n + 1) for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[[]] * (n + 1) for _ in range(m + 1)]",
    "[{} for _ in range(m + 1)]",
    "['' for _ in range(m + 1)]",
    "[0 for _ in range(m + 1)]",
    "[False for _ in range(m + 1)]",
    "[len([]) for _ in range(m + 1)]",
    "[chr(65) for _ in range(m + 1)]",
    "[1.0 for _ in range(m + 1)]",
    "[set() for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[{} * (n + 1) for _ in range(m + 1)]",
    "[[[]] * (n + 1) for _ in range(m + 1)]",
    "[[True] * (n + 1) for _ in range(m + 1)]",
    "[[1.0] * (n + 1) for _ in range(m + 1)]",
    "[() * (n + 1) for _ in range(m + 1)]",
    "[['A'] * (n + 1) for _ in range(m + 1)]",
    "[dict() * (n + 1) for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[1] * (n + 1) for _ in range(m + 1)]",
    "[[True] * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[{} * (n + 1) for _ in range(m + 1)]",
    "[[] * (n + 1) for _ in range(m + 1)]",
    "[[0.0] * (n + 1) for _ in range(m + 1)]",
    "[['a'] * (n + 1) for _ in range(m + 1)]",
    "[()] * (n + 1) for _ in range(m + 1)]",
    "[[[]] * (n + 1) for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[[]] * (n + 1) for _ in range(m + 1)]",
    "[0] * (n + 1) for _ in range(m + 1)]",
    "[(0,) * (n + 1) for _ in range(m + 1)]",
    "[''] * (n + 1) for _ in range(m + 1)]",
    "[{} * (n + 1) for _ in range(m + 1)]",
    "[True] * (n + 1) for _ in range(m + 1)]",
    "[float('inf')] * (n + 1) for _ in range(m + 1)]",
    "['placeholder'] * (n + 1) for _ in range(m + 1)]",
    "[str()] * (n + 1) for _ in range(m + 1)]",
    "[None] * (n + 1)  # Variant 1",
    "\"Hello\" * (n + 1)  # Variant 2",
    "5 * (n + 1)  # Variant 3",
    "[0] * (n + 1)  # Variant 4",
    "{\"key\": \"value\"} * (n + 1)  # Variant 5",
    "(1, 2, 3) * (n + 1)  # Variant 6",
    "{} * (n + 1)  # Variant 7",
    "True * (n + 1)  # Variant 8",
    "4.5 * (n + 1)  # Variant 9",
    "False * (n + 1)  # Variant 10",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1) for _ in range(m + 1)]",
    "[[] * (n + 1) for _ in range(m + 1)]",
    "[{} * (n + 1) for _ in range(m + 1)]",
    "[\"\" * (n + 1) for _ in range(m + 1)]",
    "[False * (n + 1) for _ in range(m + 1)]",
    "[True * (n + 1) for _ in range(m + 1)]",
    "[float(\"nan\") * (n + 1) for _ in range(m + 1)]",
    "[sum(_) * (n + 1) for _ in range(m + 1)]",
    "[TypeError() * (n + 1) for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[[] * (n + 1) for _ in range(m + 1)]",
    "[{} * (n + 1) for _ in range(m + 1)]",
    "[str() * (n + 1) for _ in range(m + 1)]",
    "[bool() * (n + 1) for _ in range(m + 1)]",
    "[int() * (n + 1) for _ in range(m + 1)]",
    "[[True] * (n + 1) for _ in range(m + 1)]",
    "[['hello'] * (n + 1) for _ in range(m + 1)]",
    "[['x'] * (n + 1) for _ in range(m + 1)]",
    "[[1] * (n + 1) for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[['abc'] * (n + 1) for _ in range(m + 1)]",
    "[[True] * (n + 1) for _ in range(m + 1)]",
    "[[0.0] * (n + 1) for _ in range(m + 1)]",
    "[[[]] * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[[{}] * (n + 1) for _ in range(m + 1)]",
    "[[object()] * (n + 1) for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1) for _ in range(m + 1)]",
    "[[[]] * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[[True] * (n + 1) for _ in range(m + 1)]",
    "[[False] * (n + 1) for _ in range(m + 1)]",
    "[[1.0] * (n + 1) for _ in range(m + 1)]",
    "[['a'] * (n + 1) for _ in range(m + 1)]",
    "[['foo'] * (n + 1) for _ in range(m + 1)]",
    "[[[]] * (n + 1) for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[[] for _ in range(m + 1)]",
    "[[False] * (n + 1) for _ in range(m + 1)]",
    "[[0.0] * (n + 1) for _ in range(m + 1)]",
    "[[{}] * (n + 1) for _ in range(m + 1)]",
    "[[()] * (n + 1) for _ in range(m + 1)]",
    "[[set()] * (n + 1) for _ in range(m + 1)]",
    "[[{None}] * (n + 1) for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[[[]] * (n + 1) for _ in range(m + 1)]",
    "[[{}] * (n + 1) for _ in range(m + 1)]",
    "[[set()] * (n + 1) for _ in range(m + 1)]",
    "[[True] * (n + 1) for _ in range(m + 1)]",
    "[['a'] * (n + 1) for _ in range(m + 1)]",
    "[[1.0] * (n + 1) for _ in range(m + 1)]",
    "[[object()] * (n + 1) for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[['filler'] * (n + 1) for _ in range(m + 1)]",
    "[{None} * (n + 1) for _ in range(m + 1)]",
    "[{} * (n + 1) for _ in range(m + 1)]",
    "[() * (n + 1) for _ in range(m + 1)]",
    "[set() * (n + 1) for _ in range(m + 1)]",
    "[[] * (n + 1) for _ in range(m + 1)]",
    "[1 * (n + 1) for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1) for _ in range(m + 1)]",
    "[[] * (n + 1) for _ in range(m + 1)]",
    "[[[]] * (n + 1) for _ in range(m + 1)]",
    "[[{}] * (n + 1) for _ in range(m + 1)]",
    "[[()] * (n + 1) for _ in range(m + 1)]",
    "[[False] * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[[set()] * (n + 1) for _ in range(m + 1)]",
    "[[1.0] * (n + 1) for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[] * (n + 1) for _ in range(m + 1)]",
    "[str()] * (n + 1) for _ in range(m + 1)]",
    "[float()] * (n + 1) for _ in range(m + 1)]",
    "[int()] * (n + 1) for _ in range(m + 1)]",
    "[True] * (n + 1) for _ in range(m + 1)]",
    "[False] * (n + 1) for _ in range(m + 1)]",
    "[()] * (n + 1) for _ in range(m + 1)]",
    "[{}] * (n + 1) for _ in range(m + 1)]",
    "[NoneType()] * (n + 1) for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[{} * (n + 1) for _ in range(m + 1)]",
    "[() * (n + 1) for _ in range(m + 1)]",
    "[[[]] * (n + 1) for _ in range(m + 1)]",
    "[[True] * (n + 1) for _ in range(m + 1)]",
    "[['foo'] * (n + 1) for _ in range(m + 1)]",
    "[[1, 2, 3] * (n + 1) for _ in range(m + 1)]",
    "[['a', 'b', 'c'] * (n + 1) for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[[] * (n + 1) for _ in range(m + 1)]",
    "[[False] * (n + 1) for _ in range(m + 1)]",
    "[['__'] * (n + 1) for _ in range(m + 1)]",
    "[[{}] * (n + 1) for _ in range(m + 1)]",
    "[[()] * (n + 1) for _ in range(m + 1)]",
    "[[object()] * (n + 1) for _ in range(m + 1)]",
    "[['Hello'] * (n + 1) for _ in range(m + 1)]",
    "[[a] * (n + 1) for _ in range(m + 1)]",
    "[[b] * (n + 1) for _ in range(m + 1)]",
    "[[c] * (n + 1) for _ in range(m + 1)]",
    "[[d] * (n + 1) for _ in range(m + 1)]",
    "[[e] * (n + 1) for _ in range(m + 1)]",
    "[[f] * (n + 1) for _ in range(m + 1)]",
    "[[g] * (n + 1) for _ in range(m + 1)]",
    "[[h] * (n + 1) for _ in range(m + 1)]",
    "[[i] * (n + 1) for _ in range(m + 1)]",
    "[[j] * (n + 1) for _ in range(m + 1)]",
    "[None] * (n + 1) for _ in range(m + 1)]",
    "[0] * (n + 1) for _ in range(m + 1)]",
    "[\"\"] * (n + 1) for _ in range(m + 1)]",
    "[[]] * (n + 1) for _ in range(m + 1)]",
    "[{}] * (n + 1) for _ in range(m + 1)]",
    "[set()] * (n + 1) for _ in range(m + 1)]",
    "[11, 22, 33] * (n + 1) for _ in range(m + 1)]",
    "[True] * (n + 1) for _ in range(m + 1)]",
    "[3.14] * (n + 1) for _ in range(m + 1)]",
    "[np.nan] * (n + 1) for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[0 * (n + 1) for _ in range(m + 1)]",
    "[True * (n + 1) for _ in range(m + 1)]",
    "[[] * (n + 1) for _ in range(m + 1)]",
    "[float('inf') * (n + 1) for _ in range(m + 1)]",
    "[str() * (n + 1) for _ in range(m + 1)]",
    "[object() * (n + 1) for _ in range(m + 1)]",
    "[range(10) * (n + 1) for _ in range(m + 1)]",
    "[str(None) * (n + 1) for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[] * (n + 1) for _ in range(m + 1)]",
    "[0 * (n + 1) for _ in range(m + 1)]",
    "[\"\" * (n + 1) for _ in range(m + 1)]",
    "[{} * (n + 1) for _ in range(m + 1)]",
    "[() * (n + 1) for _ in range(m + 1)]",
    "[True * (n + 1) for _ in range(m + 1)]",
    "[float(\"nan\") * (n + 1) for _ in range(m + 1)]",
    "[[[]] * (n + 1) for _ in range(m + 1)]",
    "[[()] * (n + 1) for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[[[]] * (n + 1) for _ in range(m + 1)]",
    "[{} * (n + 1) for _ in range(m + 1)]",
    "[float() * (n + 1) for _ in range(m + 1)]",
    "[True * (n + 1) for _ in range(m + 1)]",
    "[object() * (n + 1) for _ in range(m + 1)]",
    "[{()} * (n + 1) for _ in range(m + 1)]",
    "[[i] * (n + 1) for i in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1) for _ in range(m + 1)]",
    "[[[]] * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[['__'] * (n + 1) for _ in range(m + 1)]",
    "[[True] * (n + 1) for _ in range(m + 1)]",
    "[['placeholder'] * (n + 1) for _ in range(m + 1)]",
    "[[[] for _ in range(n + 1)] for _ in range(m + 1)]",
    "[[{} for _ in range(n + 1)] for _ in range(m + 1)]",
    "[[() for _ in range(n + 1)] for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1) for _ in range(m + 1)]",
    "[['hello'] * (n + 1) for _ in range(m + 1)]",
    "[[[]] * (n + 1) for _ in range(m + 1)]",
    "[['a'] * (n + 1) for _ in range(m + 1)]",
    "[[{}] * (n + 1) for _ in range(m + 1)]",
    "[[(i + j) for j in range(n + 1)] for i in range(m + 1)]",
    "[[str(i) for i in range(n + 1)] for _ in range(m + 1)]",
    "[[float('inf')] * (n + 1) for _ in range(m + 1)]",
    "[None] * (n + 1)",
    "[[]] * (n + 1)",
    "[()] * (n + 1)",
    "[0] * (n + 1)",
    "[True] * (n + 1)",
    "[\"\"] * (n + 1)",
    "[dict()] * (n + 1)",
    "[set()] * (n + 1)",
    "[float('nan')] * (n + 1)",
    "[object()] * (n + 1)",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[False] * (n + 1) for _ in range(m + 1)]",
    "[[] * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[['x'] * (n + 1) for _ in range(m + 1)]",
    "[{} * (n + 1) for _ in range(m + 1)]",
    "[() * (n + 1) for _ in range(m + 1)]",
    "[10 * (id(_) + 1) for _ in range(m + 1)]",
    "[range(-5, 6) * (n + 1) for _ in range(m + 1)]",
    "[['A', 'B', 'C'] * (n + 1) for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[True for _ in range(m + 1)]",
    "[0 for _ in range(m + 1)]",
    "[{} for _ in range(m + 1)]",
    "[[] for _ in range(m + 1)]",
    "[(lambda x: x) for _ in range(m + 1)]",
    "[() for _ in range(m + 1)]",
    "[float('inf') for _ in range(m + 1)]",
    "[range(n + 1) for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[[] * (n + 1) for _ in range(m + 1)]",
    "[{} * (n + 1) for _ in range(m + 1)]",
    "[0 * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1) for _ in range(m + 1)]",
    "[[1] * (n + 1) for _ in range(m + 1)]",
    "[[True] * (n + 1) for _ in range(m + 1)]",
    "[['a'] * (n + 1) for _ in range(m + 1)]",
    "[[1.5] * (n + 1) for _ in range(m + 1)]",
    "[['placeholder'] * (n + 1) for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1) for _ in range(m + 1)]",
    "[[False] * (n + 1) for _ in range(m + 1)]",
    "[[[]] * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[['', ''] * (n + 1) for _ in range(m + 1)]",
    "[[{}], []] * (n + 1) for _ in range(m + 1)]",
    "[[fun] * (n + 1) for _ in range(m + 1)]",
    "[[f'item {i}'] * (n + 1) for i in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1) for _ in range(m + 1)]",
    "[['__'] * (n + 1) for _ in range(m + 1)]",
    "[[[]] * (n + 1) for _ in range(m + 1)]",
    "[[set()] * (n + 1) for _ in range(m + 1)]",
    "[['placeholder'] * (n + 1) for _ in range(m + 1)]",
    "[['UNKNOWN'] * (n + 1) for _ in range(m + 1)]",
    "[[object()] * (n + 1) for _ in range(m + 1)]",
    "[[chr(0)] * (n + 1) for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[[True] * (n + 1) for _ in range(m + 1)]",
    "[[] * (n + 1) for _ in range(m + 1)]",
    "[{} * (n + 1) for _ in range(m + 1)]",
    "[float('inf')] * (n + 1) for _ in range(m + 1)",
    "[lambda x: x+1 for _ in range(n + 1)] for _ in range(m + 1)",
    "['hello'] * (n + 1) for _ in range(m + 1)",
    "[range(10)] * (n + 1) for _ in range(m + 1)",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1) for _ in range(m + 1)]",
    "[[[]] * (n + 1) for _ in range(m + 1)]",
    "[[\"\"]] * (n + 1) for _ in range(m + 1)]",
    "[[True] * (n + 1) for _ in range(m + 1)]",
    "[[False] * (n + 1) for _ in range(m + 1)]",
    "[[0.0] * (n + 1) for _ in range(m + 1)]",
    "[[\"hello\"] * (n + 1) for _ in range(m + 1)]",
    "[[{}]] * (n + 1) for _ in range(m + 1)]",
    "[[()] * (n + 1) for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[[] * (n + 1) for _ in range(m + 1)]",
    "[{}] * (n + 1) for _ in range(m + 1)]",
    "[set() * (n + 1) for _ in range(m + 1)]",
    "[dict() * (n + 1) for _ in range(m + 1)]",
    "[(lambda: [])() * (n + 1) for _ in range(m + 1)]",
    "[True * (n + 1) for _ in range(m + 1)]",
    "[False * (n + 1) for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[[True] * (n + 1) for _ in range(m + 1)]",
    "[[[]] * (n + 1) for _ in range(m + 1)]",
    "[[{}] * (n + 1) for _ in range(m + 1)]",
    "[['hello'] * (n + 1) for _ in range(m + 1)]",
    "[[42] * (n + 1) for _ in range(m + 1)]",
    "[[2.5] * (n + 1) for _ in range(m + 1)]",
    "[[True, False] * (n + 1) for _ in range(m + 1)]",
    "[None] * (n + 1) for _ in range(m + 1)",
    "[[]] * (n + 1) for _ in range(m + 1)",
    "[0] * (n + 1) for _ in range(m + 1)",
    "[str()] * (n + 1) for _ in range(m + 1)",
    "[set()] * (n + 1) for _ in range(m + 1)",
    "[{}] * (n + 1) for _ in range(m + 1)",
    "[float('nan')] * (n + 1) for _ in range(m + 1)",
    "[False] * (n + 1) for _ in range(m + 1)",
    "[1.0] * (n + 1) for _ in rang(m + 1)",
    "[() ] * (n + 1) for _ in range(m + 1)",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[[] * (n + 1) for _ in range(m + 1)]",
    "[{1} * (n + 1) for _ in range(m + 1)]",
    "[1.0 * (n + 1) for _ in range(m + 1)]",
    "['_' * (n + 1) for _ in range(m + 1)]",
    "[True * (n + 1) for _ in range(m + 1)]",
    "['hello' * (n + 1) for _ in range(m + 1)]",
    "[{} * (n + 1) for _ in range(m + 1)]",
    "[range(10) * (n + 1) for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1) for _ in range(m + 1)]",
    "[[[]] * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[{} * (n + 1) for _ in range(m + 1)]",
    "[[False] * (n + 1) for _ in range(m + 1)]",
    "[['__'] * (n + 1) for _ in range(m + 1)]",
    "[[1.0] * (n + 1) for _ in range(m + 1)]",
    "[[0.0] * (n + 1) for _ in range(m + 1)]",
    "[[() for _ in range(n + 1)] for _ in range(m + 1)]",
    "[0] * (n + 1) for _ in range(m + 1)]",
    "[''] * (n + 1) for _ in range(m + 1)]",
    "[True] * (n + 1) for _ in range(m + 1)]",
    "[None] * (n + 1) for _ in range(m + 1)]",
    "[float('inf')] * (n + 1) for _ in range(m + 1)]",
    "[set()] * (n + 1) for _ in range(m + 1)]",
    "[{}] * (n + 1) for _ in range(m + 1)]",
    "[[]] * (n + 1) for _ in range(m + 1)]",
    "[()] * (n + 1) for _ in range(m + 1)]",
    "[\"\"] * (n + 1) for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1) for _ in range(m + 1)]",
    "[[True] * (n + 1) for _ in range(m + 1)]",
    "[[[]] * (n + 1) for _ in range(m + 1)]",
    "[['placeholder'] * (n + 1) for _ in range(m + 1)]",
    "[[set()] * (n + 1) for _ in range(m + 1)]",
    "[[{}] * (n + 1) for _ in range(m + 1)]",
    "[[object()] * (n + 1) for _ in range(m + 1)]",
    "[[list()] * (n + 1) for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[['placeholder'] * (n + 1) for _ in range(m + 1)]",
    "[(0,) * (n + 1) for _ in range(m + 1)]",
    "[{} for _ in range(m + 1)]",
    "[[] for _ in range(m + 1)]",
    "[set() for _ in range(m + 1)]",
    "[str] * (n + 1) for _ in range(m + 1)]",
    "[[False] * (n + 1) for _ in range(m + 1)]",
    "[None] * (n + 1) for _ in range(m + 1)",
    "[True] * (n + 1) for _ in range (m + 1)",
    "[False] * (n + 1) for _ in range(m + 1)",
    "[0] * (n + 1) for _ in range(m + 1)",
    "[1.0] * (n + 1) for _ in range(m + 1)",
    "[''] * (n + 1) for _ in range(m + 1)",
    "[{}] * (n + 1) for _ in range(m + 1)",
    "[()] * (n + 1) for _ in range(m + 1)",
    "[set()] * (n + 1) for _ in range(m + 1)",
    "[object()] * (n + 1) for _ in range(m + 1)",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[] * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[[False] * (n + 1) for _ in range(m + 1)]",
    "[[[]] * (n + 1) for _ in range(m + 1)]",
    "[[{}] * (n + 1) for _ in range(m + 1)]",
    "[[() for __ in range(n + 1)] for _ in range(m + 1)]",
    "[[set() for __ in range(n + 1)] for _ in range(m + 1)]",
    "[[(lambda: None)() for __ in range(n + 1)] for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1) for _ in range(m + 1)]",
    "[['placeholder'] * (n + 1) for _ in range(m + 1)]",
    "[[[]] * (n + 1) for _ in range(m + 1)]",
    "[[set()] * (n + 1) for _ in range(m + 1)]",
    "[[(x, y)] * (n + 1) for _ in range(m + 1)]",
    "[[1, 2, 3] * (n + 1) for _ in range(m + 1)]",
    "[[{}]] * (n + 1) for _ in range(m + 1)]",
    "[[True, False]] * (n + 1) for _ in range(m + 1)] *",
    "lst = [None] * (n + 1)\n[[lst] * (n + 1) for _ in range(m + 1)]",
    "lst = []\nfor _ in range(n + 1):\n    lst.append(None)\n[[lst] * (n + 1) for _ in range(m + 1)]",
    "lst = [0] * (n + 1)\n[[lst] * (n + 1) for _ in range(m + 1)]",
    "lst = []\nfor _ in range(n + 1):\n    lst.append(0)\n[[lst] * (n + 1) for _ in range(m + 1)]",
    "lst = [[] for _ in range(n + 1)]\n[[lst] * (n + 1) for _ in range(m + 1)]",
    "lst = []\nfor _ in range(n + 1):\n    lst.append([])\n[[lst] * (n + 1) for _ in range(m + 1)]",
    "lst = [[None] * (n + 1)] * (m + 1)\nlst[0][0] = 'placeholder'\nlst",
    "[[0 for _ in range(n + 1)] for _ in range(m + 1)]",
    "[[None for _ in range(n + 1)] for _ in range(m + 1)]",
    "[[[] for _ in range(n + 1)] for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1) for _ in range(m + 1)]",
    "[[[]] * (n + 1) for _ in range(m + 1)]",
    "[[0.0] * (n + 1) for _ in range(m + 1)]",
    "[{}] * (n + 1) for _ in range(m + 1)]",
    "[['__'] * (n + 1) for _ in range(m + 1)]",
    "[[True] * (n + 1) for _ in range(m + 1)]",
    "[[[None]] * (n + 1) for _ in range(m + 1)]",
    "[[[1,2,3]] * (n + 1) for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[[]] * (n + 1) for _ in range(m + 1)]",
    "[[\"\"] * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1) for _ in range(m + 1)]",
    "[[False] * (n + 1) for _ in range(m + 1)]",
    "[{} * (n + 1) for _ in range(m + 1)]",
    "[[set()] * (n + 1) for _ in range(m + 1)]",
    "[[dict()] * (n + 1) for _ in range(m + 1)]",
    "10.",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[[True] * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1) for _ in range(m + 1)]",
    "[[{}] * (n + 1) for _ in range(m + 1)]",
    "[[0.0] * (n + 1) for _ in range(m + 1)]",
    "[[False] * (n + 1) for _ in range(m + 1)]",
    "[['__'] * (n + 1) for _ in range(m + 1)]",
    "[[[]] * (n + 1) for _ in range(m + 1)]",
    "[['__'.upper()] * (n + 1) for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[True] * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1) for _ in range(m + 1)]",
    "[[[]] * (n + 1) for _ in range(m + 1)]",
    "[[{}] * (n + 1) for _ in range(m + 1)]",
    "[[set()] * (n + 1) for _ in range(m + 1)]",
    "[[object()] * (n + 1) for _ in range(m + 1)]",
    "[[4.5] * (n + 1) for _ in range(m + 1)]",
    "[[lambda x: x**2] * (n + 1) for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1) for _ in range(m + 1)]",
    "[[[]] * (n + 1) for _ in range(m + 1)]",
    "[{} for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[[False] * (n + 1) for _ in range(m + 1)]",
    "[0 for _ in range(m + 1)]",
    "[['a'] * (n + 1) for _ in range(m + 1)]",
    "[[True] * (n + 1) for _ in range(m + 1)]",
    "[['hello'] * (n + 1) for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1) for _ in range(m + 1)]",
    "[[[]] * (n + 1) for _ in range(m + 1)]",
    "[[True] * (n + 1) for _ in range(m + 1)]",
    "[[\"\"] * (n + 1) for _ in range(m + 1)]",
    "[[{}] * (n + 1) for _ in range(m + 1)]",
    "[[() * (n + 1)] * (n + 1) for _ in range(m + 1)]",
    "[[\"item\"] * (n + 1) for _ in range(m + 1)]",
    "[[0.0] * (n + 1) for _ in range(m + 1)]",
    "[[set()] * (n + 1) for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1) for _ in range(m + 1)]",
    "[[[]] * (n + 1) for _ in range(m + 1)]",
    "[['foo'] * (n + 1) for _ in range(m + 1)]",
    "[[True] * (n + 1) for _ in range(m + 1)]",
    "[['a', 'b'] * (n + 1) for _ in range(m + 1)]",
    "[{} * (n + 1) for _ in range(m + 1)]",
    "[[1, 2, 3] * (n + 1) for _ in range(m + 1)]",
    "[[[1, 2], ['a', 'b']] * (n + 1) for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[['dummy'] * (n + 1) for _ in range(m + 1)]",
    "[[False] * (n + 1) for _ in range(m + 1)]",
    "[['X'] * (n + 1) for _ in range(m + 1)]",
    "[[{}] * (n + 1) for _ in range(m + 1)]",
    "[[()] * (n + 1) for _ in range(m + 1)]",
    "[[(i+j)%2 == 0 for i in range(n+1)] for j in range(m+1)]",
    "[((i,j), (j,i)) for i in range(m+1) for j in range(n+1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[['placeholder'] * (n + 1) for _ in range(m + 1)]",
    "[['fill'] * (n + 1) for _ in range(m + 1)]",
    "[[True] * (n + 1) for _ in range(m + 1)]",
    "[[] * (n + 1) for _ in range(m + 1)]",
    "[{} * (n + 1) for _ in range(m + 1)]",
    "[' ' * (n + 1) for _ in range(m + 1)]",
    "[[0.0] * (n + 1) for _ in range(m + 1)]",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "# Variant 1\n[None * (n + 1) for _ in range(m + 1)]\n\n# Variant 2\n[0 * (n + 1) for _ in range(m + 1)]\n\n# Variant 3\n['' * (n + 1) for _ in range(m + 1)]\n\n# Variant 4\n[[] * (n + 1) for _ in range(m + 1)]\n\n# Variant 5\n[{ } * (n + 1) for _ in range(m + 1)]\n\n# Variant 6\n[True * (n + 1) for _ in range(m + 1)]\n\n# Variant 7\n[float('nan') * (n + 1) for _ in range(m + 1)]\n\n# Variant 8\n[object() * (n + 1) for _ in range(m + 1)]\n\n# Variant 9\n[None * (n + 1) for None in range(m + 1)]\n\n# Variant 10\n[__ * (n + 1) for __ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[[] * (n + 1) for _ in range(m + 1)]",
    "[True * (n + 1) for _ in range(m + 1)]",
    "[0 * (n + 1) for _ in range(m + 1)]",
    "[{} * (n + 1) for _ in range(m + 1)]",
    "['hello' * (n + 1) for _ in range(m + 1)]",
    "[len([]) * (n + 1) for _ in range(m + 1)]",
    "[10**0 * (n + 1) for _ in range(m + 1)]",
    "[range(5) * (n + 1) for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1) for _ in range(m + 1)]",
    "[[] * (n + 1) for _ in range(m + 1)]",
    "[{} * (n + 1) for _ in range(m + 1)]",
    "[[[]] * (n + 1) for _ in range(m + 1)]",
    "[() * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[set() * (n + 1) for _ in range(m + 1)]",
    "[dict() * (n + 1) for _ in range(m + 1)]",
    "[(lambda: None)() * (n + 1) for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[{} * (n + 1) for _ in range(m + 1)]",
    "[['placeholder'] * (n + 1) for _ in range(m + 1)]",
    "[['HOLE'] * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1) for _ in range(m + 1)]",
    "[['__'] * (n + 1) for _ in range(m + 1)]",
    "[['undefined'] * (n + 1) for _ in range(m + 1)]",
    "[[False] * (n + 1) for _ in range(m + 1)]",
    "[[] * (n + 1) for _ in range(m + 1)]",
    "# Variant 1\n[[None] * (n + 1) for _ in range(m + 1)]\n\n# Variant 2\n[[0] * (n + 1) for _ in range(m + 1)]\n\n# Variant 3\n[[''] * (n + 1) for _ in range(m + 1)]\n\n# Variant 4\n[[False] * (n + 1) for _ in range(m + 1)]\n\n# Variant 5\n[['placeholder'] * (n + 1) for _ in range(m + 1)]\n\n# Variant 6\n[[ [] ] * (n + 1) for _ in range(m + 1)]\n\n# Variant 7\n[[{}]* (n + 1) for _ in range(m + 1)]\n\n# Variant 8\n[[0.0] * (n + 1) for _ in range(m + 1)]\n\n# Variant 9\n[[True] * (n + 1) for _ in range(m + 1)]\n\n# Variant 10\n[[set()]* (n + 1) for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1) for _ in range(m + 1)]",
    "[['placeholder'] * (n + 1) for _ in range(m + 1)]",
    "[[False] * (n + 1) for _ in range(m + 1)]",
    "[['unknown'] * (n + 1) for _ in range(m + 1)]",
    "[[{}] * (n + 1) for _ in range(m + 1)]",
    "[[set()] * (n + 1) for _ in range(m + 1)]",
    "[[[]] * (n + 1) for _ in range(m + 1)]",
    "[[(lambda: None)()] * (n + 1) for _ in range(m + 1)]",
    "[None for _ in range(m + 1)]",
    "[0 for _ in range(m + 1)]",
    "['' for _ in range(m + 1)]",
    "[[] for _ in range(m + 1)]",
    "[[None] for _ in range(m + 1)]",
    "[[0] for _ in range(m + 1)]",
    "[[''] for _ in range(m + 1)]",
    "[[]] * (n + 1)",
    "[[None]] * (n + 1)",
    "[[0]] * (n + 1)",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[[] * (n + 1) for _ in range(m + 1)]",
    "[set() for _ in range(m + 1)]",
    "[{} for _ in range(m + 1)]",
    "[() for _ in range(m + 1)]",
    "[False for _ in range(m + 1)]",
    "[0 for _ in range(m + 1)]",
    "[1.0 for _ in range(m + 1)]",
    "[object() for _ in range(m + 1)]",
    "[[i] * (n + 1) for i in range(m + 1)]",
    "[[] * (n + 1) for _ in range(m + 1)]",
    "[[True] * (n + 1) for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[3.14] * (n + 1) for _ in range(m + 1)]",
    "[['foo'] * (n + 1) for _ in range(m + 1)]",
    "[[{'key': 'value'}] * (n + 1) for _ in range(m + 1)]",
    "[[()] * (n + 1) for _ in range(m + 1)]",
    "[[object()] * (n + 1) for _ in range(m + 1)]",
    "[[range(10)] * (n + 1) for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[[] * (n + 1) for _ in range(m + 1)]",
    "[{} * (n + 1) for _ in range(m + 1)]",
    "[() * (n + 1) for _ in range(m + 1)]",
    "[[True] * (n + 1) for _ in range(m + 1)]",
    "[[False] * (n + 1) for _ in range(m + 1)]",
    "[['a'] * (n + 1) for _ in range(m + 1)]",
    "[[1.2] * (n + 1) for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[[[]] * (n + 1) for _ in range(m + 1)]",
    "[[True] * (n + 1) for _ in range(m + 1)]",
    "[[False] * (n + 1) for _ in range(m + 1)]",
    "[[dict()] * (n + 1) for _ in range(m + 1)]",
    "[[set()] * (n + 1) for _ in range(m + 1)]",
    "[[frozenset([])] * (n + 1) for _ in range(m + 1)]",
    "[[()]* (n + 1) for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[[[]] * (n + 1) for _ in range(m + 1)]",
    "[[{}] * (n + 1) for _ in range(m + 1)]",
    "[[True] * (n + 1) for _ in range(m + 1)]",
    "[[False] * (n + 1) for _ in range(m + 1)]",
    "[[0.0] * (n + 1) for _ in range(m + 1)]",
    "[[()] * (n + 1) for _ in range(m + 1)]",
    "[['foo'] * (n + 1) for _ in range(m + 1)]",
    "[[__undefined__] * (n + 1) for _ in range(m + 1)]",
    "[['undefined'] * (n + 1) for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[[0.0] * (n + 1) for _ in range(m + 1)]",
    "[[False] * (n + 1) for _ in range(m + 1)]",
    "[[{}] * (n + 1) for _ in range(m + 1)]",
    "[['undefined'] * (n + 1) for _ in range(m + 1)]",
    "[[()]* (n + 1) for _ in range(m + 1)]",
    "[[set()] * (n + 1) for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[['Hello'] * (n + 1) for _ in range(m + 1)]",
    "[{} * (n + 1) for _ in range(m + 1)]",
    "[[()] * (n + 1) for _ in range(m + 1)]",
    "[{'a': 0} * (n + 1) for _ in range(m + 1)]",
    "[set() * (n + 1) for _ in range(m + 1)]",
    "[0 * (n + 1) for _ in range(m + 1)]",
    "[True * (n + 1) for _ in range(m + 1)]",
    "[[] * (n + 1) for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[[True] * (n + 1) for _ in range(m + 1)]",
    "[[[]] * (n + 1) for _ in range(m + 1)]",
    "[{} * (n + 1) for _ in range(m + 1)]",
    "[{__} * (n + 1) for _ in range(m + 1)]",
    "[[4.2] * (n + 1) for _ in range(m + 1)]",
    "[('a', 'b') * (n + 1) for _ in range(m + 1)]",
    "[range(10) * (n + 1) for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1) for _ in range(m + 1)]",
    "[['unknown'] * (n + 1) for _ in range(m + 1)]",
    "[['placeholder'] * (n + 1) for _ in range(m + 1)]",
    "[[False] * (n + 1) for _ in range(m + 1)]",
    "[[{}] * (n + 1) for _ in range(m + 1)]",
    "[[set()] * (n + 1) for _ in range(m + 1)]",
    "[[()] * (n + 1) for _ in range(m + 1)]",
    "[[float('inf')] * (n + 1) for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1) for _ in range(m + 1)]",
    "[[] * (n + 1) for _ in range(m + 1)]",
    "[\"\" * (n + 1) for _ in range(m + 1)]",
    "[{} * (n + 1) for _ in range(m + 1)]",
    "[np.nan] * (n + 1) for _ in range(m + 1)]",
    "[set() for _ in range(n + 1)] for _ in range(m + 1)]",
    "[dict() for _ in range(n + 1)] for _ in range(m + 1)]",
    "[int() for _ in range(n + 1)] for _ in range(m + 1)]",
    "[bool() for _ in range(n + 1)] for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[[[]] * (n + 1) for _ in range(m + 1)]",
    "[[{}] * (n + 1) for _ in range(m + 1)]",
    "[[True] * (n + 1) for _ in range(m + 1)]",
    "[['hello'] * (n + 1) for _ in range(m + 1)]",
    "[[0.0] * (n + 1) for _ in range(m + 1)]",
    "[[()]* (n + 1) for _ in range(m + 1)]",
    "[[set()] * (n + 1) for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[42] * (n + 1) for _ in range(m + 1)]",
    "[[0.0] * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[[] * (n + 1) for _ in range(m + 1)]",
    "[{} * (n + 1) for _ in range(m + 1)]",
    "[[True] * (n + 1) for _ in range(m + 1)]",
    "[[[1, 2, 3]] * (n + 1) for _ in range(m + 1)]",
    "[['apple', 'banana', 'cherry'] * (n + 1) for _ in range(m + 1)]",
    "[[object()] * (n + 1) for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[[[]] * (n + 1) for _ in range(m + 1)]",
    "[{} for _ in range(m + 1)]",
    "[list() for _ in range(m + 1)]",
    "[set() for _ in range(m + 1)]",
    "[{} for _ in range(m + 1)]",
    "[0 for _ in range(m + 1)]",
    "['' for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[[[]] * (n + 1) for _ in range(m + 1)]",
    "[[{}] * (n + 1) for _ in range(m + 1)]",
    "[[set()] * (n + 1) for _ in range(m + 1)]",
    "[[0.0] * (n + 1) for _ in range(m + 1)]",
    "[[False] * (n + 1) for _ in range(m + 1)]",
    "[[True] * (n + 1) for _ in range(m + 1)]",
    "[['undefined'] * (n + 1) for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[[] * (n + 1) for _ in range(m + 1)]",
    "[[{}] * (n + 1) for _ in range(m + 1)]",
    "[[True] * (n + 1) for _ in range(m + 1)]",
    "[['abc'] * (n + 1) for _ in range(m + 1)]",
    "[['a', 'b', 'c'] * (n + 1) for _ in range(m + 1)]",
    "[[1, 2, 3] * (n + 1) for _ in range(m + 1)]",
    "[[None] * (n + 1)] * (m + 1)",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[{} * (n + 1) for _ in range(m + 1)]",
    "[0 * (n + 1) for _ in range(m + 1)]",
    "[False * (n + 1) for _ in range(m + 1)]",
    "[float('nan') * (n + 1) for _ in range(m + 1)]",
    "[[] * (n + 1) for _ in range(m + 1)]",
    "[{None} * (n + 1) for _ in range(m + 1)]",
    "[set() * (n + 1) for _ in range(m + 1)]",
    "[dict() * (n + 1) for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[] * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[[False] * (n + 1) for _ in range(m + 1)]",
    "[[{}] * (n + 1) for _ in range(m + 1)]",
    "[[()] * (n + 1) for _ in range(m + 1)]",
    "[[set()] * (n + 1) for _ in range(m + 1)]",
    "[[[]] * (n + 1) for _ in range(m + 1)]",
    "[['a'] * (n + 1) for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1) for _ in range(m + 1)]",
    "[['placeholder'] * (n + 1) for _ in range(m + 1)]",
    "[[] * (n + 1) for _ in range(m + 1)]",
    "[dict() for _ in range(m + 1)]",
    "['undefined' for _ in range(m + 1)]",
    "[[set()] * (n + 1) for _ in range(m + 1)]",
    "[len('empty') for _ in range(m + 1)]",
    "[False for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1) for _ in range(m + 1)]",
    "[[False] * (n + 1) for _ in range(m + 1)]",
    "[[] * (n + 1) for _ in range(m + 1)]",
    "[['__'] * (n + 1) for _ in range(m + 1)]",
    "[['fill'] * (n + 1) for _ in range(m + 1)]",
    "[range(n + 1) for _ in range(m + 1)]",
    "[['_'.join(str(i))+']' * (n + 1) for _ in range(m + 1)]",
    "[[1 / (i+1) for i in range(n + 1)] for _ in range(m + 1)]",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1) for _ in range(m + 1)]",
    "[[True] * (n + 1) for _ in range(m + 1)]",
    "[[[]] * (n + 1) for _ in range(m + 1)]",
    "[[{}] * (n + 1) for _ in range(m + 1)]",
    "[[set()] * (n + 1) for _ in range(m + 1)]",
    "[[\"Hello\"] * (n + 1) for _ in range(m + 1)]",
    "[[1.23] * (n + 1) for _ in range(m + 1)]",
    "[np.nan] * (n + 1) for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[True] * (n + 1) for _ in range(m + 1)]",
    "[[False] * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[['foo'] * (n + 1) for _ in range(m + 1)]",
    "[[] * (n + 1) for _ in range(m + 1)]",
    "[0 * (n + 1) for _ in range(m + 1)]",
    "[1 * (n + 1) for _ in range(m + 1)]",
    "[len([]) * (n + 1) for _ in range(m + 1)]",
    "[sum([]) * (n + 1) for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[[True] * (n + 1) for _ in range(m + 1)]",
    "[[[]] * (n + 1) for _ in range(m + 1)]",
    "[[set()] * (n + 1) for _ in range(m + 1)]",
    "[[{}] * (n + 1) for _ in range(m + 1)]",
    "[[\"\"] * (n + 1) for _ in range(m + 1)]",
    "[[0.0] * (n + 1) for _ in range(m + 1)]",
    "[['a'] * (n + 1) for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1) for _ in range(m + 1)]",
    "[[False] * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[[] * (n + 1) for _ in range(m + 1)]",
    "[[{}] * (n + 1) for _ in range(m + 1)]",
    "[[() * (n + 1) for _ in range(m + 1)]",
    "[[set()] * (n + 1) for _ in range(m + 1)]",
    "[[dict()] * (n + 1) for _ in range(m + 1)]",
    "[[object()] * (n + 1) for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[] * (n + 1) for _ in range(m + 1)]",
    "[{} * (n + 1) for _ in range(m + 1)]",
    "[0 * (n + 1) for _ in range(m + 1)]",
    "['' * (n + 1) for _ in range(m + 1)]",
    "[1.0 * (n + 1) for _ in range(m + 1)]",
    "[True * (n + 1) for _ in range(m + 1)]",
    "[() * (n + 1) for _ in range(m + 1)]",
    "[['__'] * (n + 1) for _ in range(m + 1)]",
    "[{__} * (n + 1) for _ in range(m + 1)]",
    "[[] * (n + 1) for _ in range(m + 1)]",
    "[(1,) * (n + 1) for _ in range(m + 1)]",
    "[None * (n + 1) for _ in range(m + 1)]",
    "[[]] * (n + 1) for _ in range(m + 1)",
    "[[0] * (n + 1)] * (m + 1)",
    "[array() * (n + 1) for _ in range(m + 1)]",
    "[[[None]] * (n + 1) for _ in range(m + 1)]",
    "[[] * (n + 1),] * (m + 1)",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[{}] * (n + 1) for _ in range(m + 1)",
    "# Variant 1\n[[None] * (n + 1) for _ in range(m + 1)]",
    "# Variant 2\n[[0] * (n + 1) for _ in range(m + 1)]",
    "# Variant 3\n[[True] * (n + 1) for _ in range(m + 1)]",
    "# Variant 4\n[[''] * (n + 1) for _ in range(m + 1)]",
    "# Variant 5\n[[[]] * (n + 1) for _ in range(m + 1)]",
    "# Variant 6\n[[{}] * (n + 1) for _ in range(m + 1)]",
    "# Variant 7\n[['placeholder'] * (n + 1) for _ in range(m + 1)]",
    "# Variant 8\n[[0.0] * (n + 1) for _ in range(m + 1)]",
    "# Variant 9\n[['__'] * (n + 1) for _ in range(m + 1)]",
    "# Variant 10\n[[] * (n + 1) for _ in range(m + 1)]",
    "[[a] * (n + 1) for _ in range(m + 1)]",
    "[[b] * (n + 1) for _ in range(m + 1)]",
    "[[c] * (n + 1) for _ in range(m + 1)]",
    "[[d] * (n + 1) for _ in range(m + 1)]",
    "[[e] * (n + 1) for _ in range(m + 1)]",
    "[[f] * (n + 1) for _ in range(m + 1)]",
    "[[g] * (n + 1) for _ in range(m + 1)]",
    "[[h] * (n + 1) for _ in range(m + 1)]",
    "[[i] * (n + 1) for _ in range(m + 1)]",
    "[[j] * (n + 1) for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1) for _ in range(m + 1)]",
    "[[[]] * (n + 1) for _ in range(m + 1)]",
    "[[True] * (n + 1) for _ in range(m + 1)]",
    "[[str()] * (n + 1) for _ in range(m + 1)]",
    "[[{} for _ in range(n + 1)] for _ in range(m + 1)]",
    "[[(i+j)%2 for j in range(n+1)] for i in range(m+1)]",
    "[[0.0] * (n + 1) for _ in range(m + 1)]",
    "[[set()] * (n + 1) for _ in range(m + 1)]",
    "[[\"\"] * (n + 1) for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1) for _ in range(m + 1)]",
    "[[] * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[{}] * (n + 1) for _ in range(m + 1)]",
    "[()] * (n + 1) for _ in range(m + 1)]",
    "[['x'] * (n + 1) for _ in range(m + 1)]",
    "[[True] * (n + 1) for _ in range(m + 1)]",
    "[[1.0] * (n + 1) for _ in range(m + 1)]",
    "[set() * (n + 1) for _ in range(m + 1)]",
    "[['placeholder'] * (n + 1) for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[[] * (n + 1) for _ in range(m + 1)]",
    "['' * (n + 1) for _ in range(m + 1)]",
    "[{} * (n + 1) for _ in range(m + 1)]",
    "['placeholder' * (n + 1) for _ in range(m + 1)]",
    "[[[]] * (n + 1) for _ in range(m + 1)]",
    "[[i] * (n + 1) for i in range(m + 1)]",
    "[[*range(n + 1)] for _ in range(m + 1)]\n\n[[None] * (n + 1) for _ in range(m + 1)]\n\n[[True] * (n + 1) for _ in range(m + 1)]\n\n[[False] * (n + 1) for _ in range(m + 1)]\n\n[[''] * (n + 1) for _ in range(m + 1)]\n\n[[[]] * (n + 1) for _ in range(m + 1)]\n\n[{} for _ in range(m + 1)]\n\n[[dict()] * (n + 1) for _ in range(m + 1)]\n\n[set() for _ in range(m + 1)]\n\n[['placeholder'] * (n + 1) for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1) for _ in range(m + 1)]",
    "[[True] * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[[[]] * (n + 1) for _ in range(m + 1)]",
    "[[{}] * (n + 1) for _ in range(m + 1)]",
    "[[set()] * (n + 1) for _ in range(m + 1)]",
    "[[()]* (n + 1) for _ in range(m + 1)]",
    "[[float('inf')] * (n + 1) for _ in range(m + 1)]",
    "[['hello'] * (n + 1) for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1) for _ in range(m + 1)]",
    "[[] * (n + 1) for _ in range(m + 1)]",
    "[{} * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[() * (n + 1) for _ in range(m + 1)]",
    "[[True] * (n + 1) for _ in range(m + 1)]",
    "[[False] * (n + 1) for _ in range(m + 1)]",
    "[[42] * (n + 1) for _ in range(m + 1)]",
    "[[1.23] * (n + 1) for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[[False] * (n + 1) for _ in range(m + 1)]",
    "[[[]] * (n + 1) for _ in range(m + 1)]",
    "[[{}] * (n + 1) for _ in range(m + 1)]",
    "[['a'] * (n + 1) for _ in range(m + 1)]",
    "[[1.0] * (n + 1) for _ in range(m + 1)]",
    "[[()]* (n + 1) for _ in range(m + 1)]",
    "[['apple']* (n + 1) for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1) for _ in range(m + 1)]",
    "[[1] * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[[[]] * (n + 1) for _ in range(m + 1)]",
    "[[{}] * (n + 1) for _ in range(m + 1)]",
    "[[True] * (n + 1) for _ in range(m + 1)]",
    "[[False] * (n + 1) for _ in range(m + 1)]",
    "[[0.0] * (n + 1) for _ in range(m + 1)]",
    "[['__'] * (n + 1) for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1) for _ in range(m + 1)]",
    "[['0'] * (n + 1) for _ in range(m + 1)]",
    "[[' ' * (n + 1)] for _ in range(m + 1)]",
    "[[True] * (n + 1) for _ in range(m + 1)]",
    "[[False] * (n + 1) for _ in range(m + 1)]",
    "[[''] * 10 for _ in range(5)]",
    "[[1, 2] * (n + 1) for _ in range(m + 1)]",
    "[[[], []] * (n + 1) for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[[True] * (n + 1) for _ in range(m + 1)]",
    "[[False] * (n + 1) for _ in range(m + 1)]",
    "[[] * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n * 2) for _ in range(m * 2)]",
    "[[None] * (n * 3) for _ in range(m * 3)]",
    "[[1] * (n - 5) for _ in range(m * 10)]",
    "[[object()] * (n + 1) for _ in range(m + 1)]",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "[None] * (n + 1)",
    "[]",
    "list()",
    "[0] * (n + 1)",
    "[''] * (n + 1)",
    "[True] * (n + 1)",
    "[False] * (n + 1)",
    "[[]] * (n + 1)",
    "[[0]] * (n + 1)",
    "[{}] * (n + 1)",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1) for _ in range(m + 1)]",
    "[[] * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[{} * (n + 1) for _ in range(m + 1)]",
    "[() * (n + 1) for _ in range(m + 1)]",
    "[\"\" * (n + 1) for _ in range(m + 1)]",
    "[\"placeholder\" * (n + 1) for _ in range(m + 1)]",
    "[0.0 * (n + 1) for _ in range(m + 1)]",
    "[True * (n + 1) for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[[False] * (n + 1) for _ in range(m + 1)]",
    "[['a'] * (n + 1) for _ in range(m + 1)]",
    "[[{}] * (n + 1) for _ in range(m + 1)]",
    "[[[]] * (n + 1) for _ in range(m + 1)]",
    "[[object()] * (n + 1) for _ in range(m + 1)]",
    "[[float('nan')] * (n + 1) for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1) for _ in range(m + 1)]",
    "[[[]] * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[{} * (n + 1) for _ in range(m + 1)]",
    "[['abc'] * (n + 1) for _ in range(m + 1)]",
    "[['default'] * (n + 1) for _ in range(m + 1)]",
    "[()] * (n + 1) for _ in range(m + 1)]",
    "[True * (n + 1) for _ in range(m + 1)]",
    "[False] * (n + 1) for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1) for _ in range(m + 1)]",
    "[[True] * (n + 1) for _ in range(m + 1)]",
    "[[[]] * (n + 1) for _ in range(m + 1)]",
    "[[{}] * (n + 1) for _ in range(m + 1)]",
    "[[(str(x), y) for x in range(n + 1)] for y in range(m + 1)]",
    "[[float('inf')] * (n + 1) for _ in range(m + 1)]",
    "[['' for _ in range(n + 1)] for _ in range(m + 1)]",
    "[[x for x in range(n + 1)] for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1) for _ in range(m + 1)]",
    "[[] * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[[True] * (n + 1) for _ in range(m + 1)]",
    "[{} * (n + 1) for _ in range(m + 1)]",
    "[0.0 * (n + 1) for _ in range(m + 1)]",
    "[float('nan')] * (n + 1) for _ in range(m + 1)]",
    "[[() * (n + 1)] * (m + 1)]",
    "[['unknown']] * (n + 1) for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[[] * (n + 1) for _ in range(m + 1)]",
    "[[True] * (n + 1) for _ in range(m + 1)]",
    "[[False] * (n + 1) for _ in range(m + 1)]",
    "[['a'] * (n + 1) for _ in range(m + 1)]",
    "[{} * (n + 1) for _ in range(m + 1)]",
    "[()] * (n + 1) for _ in range(m + 1)]",
    "[[object()] * (n + 1) for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[[] * (n + 1) for _ in range(m + 1)]",
    "[{} * (n + 1) for _ in range(m + 1)]",
    "[['__'] * (n + 1) for _ in range(m + 1)]",
    "[set() * (n + 1) for _ in range(m + 1)]",
    "[int('1') * (n + 1) for _ in range(m + 1)]",
    "[True * (n + 1) for _ in range(m + 1)]",
    "[float('3.14') * (n + 1) for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[[[]] * (n + 1) for _ in range(m + 1)]",
    "[[{}] * (n + 1) for _ in range(m + 1)]",
    "[[True] * (n + 1) for _ in range(m + 1)]",
    "[[False] * (n + 1) for _ in range(m + 1)]",
    "[['a'] * (n + 1) for _ in range(m + 1)]",
    "[[1] * (n + 1) for _ in range(m + 1)]",
    "[[1.0] * (n + 1) for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[[[]] * (n + 1) for _ in range(m + 1)]",
    "[[False] * (n + 1) for _ in range(m + 1)]",
    "[['placeholder'] * (n + 1) for _ in range(m + 1)]",
    "[[0.0] * (n + 1) for _ in range(m + 1)]",
    "[[dict()] * (n + 1) for _ in range(m + 1)]",
    "[['unknown'] * (n + 1) for _ in range(m + 1)]",
    "[[set()] * (n + 1) for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[[] * (n + 1) for _ in range(m + 1)]",
    "[{__} * (n + 1) for _ in range(m + 1)]",
    "[{__: None} * (n + 1) for _ in range(m + 1)]",
    "[[{} for _ in range(n + 1)] for _ in range(m + 1)]",
    "[[[] for _ in range(n + 1)] for _ in range(m + 1)]",
    "[{} for _ in range(m + 1)]",
    "[() for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[[[]] * (n + 1) for _ in range(m + 1)]",
    "[[{}] * (n + 1) for _ in range(m + 1)]",
    "[['Undefined'] * (n + 1) for _ in range(m + 1)]",
    "[[3.14] * (n + 1) for _ in range(m + 1)]",
    "[['None'] * (n + 1) for _ in range(m + 1)]",
    "[['Fill me'] * (n + 1) for _ in range(m + 1)]",
    "[['Token'] * (n + 1) for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1) for _ in range(m + 1)]",
    "[['placeholder'] * (n + 1) for _ in range(m + 1)]",
    "[[True] * (n + 1) for _ in range(m + 1)]",
    "[[[]] * (n + 1) for _ in range(m + 1)]",
    "[[dict()] * (n + 1) for _ in range(m + 1)]",
    "[[set()] * (n + 1) for _ in range(m + 1)]",
    "[[()] * (n + 1) for _ in range(m + 1)]",
    "[['a', 'b', 'c'] * (n + 1) for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1) for _ in range(m + 1)]",
    "[[] * (n + 1) for _ in range(m + 1)]",
    "['' * (n + 1) for _ in range(m + 1)]",
    "[1.0 * (n + 1) for _ in range(m + 1)]",
    "[True * (n + 1) for _ in range(m + 1)]",
    "['some_string' * (n + 1) for _ in range(m + 1)]",
    "[{} * (n + 1) for _ in range(m + 1)]",
    "[{1, 2, 3} * (n + 1) for _ in range(m + 1)]",
    "[(i + 1) * (n + 1) for i in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[[] * (n + 1) for _ in range(m + 1)]",
    "[{} * (n + 1) for _ in range(m + 1)]",
    "[() * (n + 1) for _ in range(m + 1)]",
    "[True * (n + 1) for _ in range(m + 1)]",
    "[False * (n + 1) for _ in range(m + 1)]",
    "[1 * (n + 1) for _ in range(m + 1)]",
    "[0 * (n + 1) for _ in range(m + 1)]",
    "[1.0 * (n + 1) for _ in range(m + 1)]",
    "[None] * (n + 1) for _ in range(m + 1)",
    "[\"\"] * (n + 1) for _ in range(m + 1)",
    "[0] * (n + 1) for _ in range(m + 1)",
    "[True] * (n + 1) for _ in range(m + 1)",
    "[False] * (n + 1) for _ in range(m + 1)",
    "[] * (n + 1) for _ in range(m + 1)",
    "() * (n + 1) for _ in range(m + 1)",
    "{} * (n + 1) for _ in range(m + 1)",
    "[[[]]] * (n + 1) for _ in range(m + 1)",
    "[{}] * (n + 1) for _ in range(m + 1)",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[x] * (n + 1) for _ in range(m + 1)]",
    "[[y] * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1) for _ in range(m + 1)]",
    "[[\"\"] * (n + 1) for _ in range(m + 1)]",
    "[[] * (n + 1) for _ in range(m + 1)]",
    "[[True] * (n + 1) for _ in range(m + 1)]",
    "[[False] * (n + 1) for _ in range(m + 1)]",
    "[[1.0] * (n + 1) for _ in range(m + 1)]",
    "[[[]] * (n + 1) for _ in range(m + 1)]",
    "[[]] * (n + 1) for _ in range(m + 1)]",
    "[[None]] * (n + 1) for _ in range(m + 1)]",
    "[0] * (n + 1) for _ in range(m + 1)]",
    "[string] * (n + 1) for _ in range(m + 1)]",
    "[True] * (n + 1) for _ in range(m + 1)]",
    "[] * (n + 1) for _ in range(m + 1)]",
    "[()] * (n + 1) for _ in range(m + 1)]",
    "[{}] * (n + 1) for _ in range(m + 1)]",
    "[((2+2) % 3)] * (n + 1) for _ in range(m + 1)]",
    "[['word']] * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1) for _ in range(m + 1)]",
    "[[] * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[True] * (n + 1) for _ in range(m + 1)]",
    "[[False] * (n + 1) for _ in range(m + 1)]",
    "[{} * (n + 1) for _ in range(m + 1)]",
    "[[()] * (n + 1) for _ in range(m + 1)]",
    "[[set()] * (n + 1) for _ in range(m + 1)]",
    "[[dict()] * (n + 1) for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1) for _ in range(m + 1)]",
    "[[] * (n + 1) for _ in range(m + 1)]",
    "[[[]] * (n + 1) for _ in range(m + 1)]",
    "[{} * (n + 1) for _ in range(m + 1)]",
    "[{} for _ in range(m + 1)]",
    "['__' for _ in range(m + 1)]",
    "['_'] * (n + 1) for _ in range(m + 1)]",
    "[(n + 1) for _ in range(m + 1)]",
    "[True] * (n + 1) for _ in range(m + 1)]",
    "# Variant 1\n[[None] * (n + 1) for _ in range(m + 1)]\n\n# Variant 2\n[[0] * (n + 1) for _ in range(m + 1)]\n\n# Variant 3\n[[''] * (n + 1) for _ in range(m + 1)]\n\n# Variant 4\n[[] * (n + 1) for _ in range(m + 1)]\n\n# Variant 5\n[[{}] * (n + 1) for _ in range(m + 1)]\n\n# Variant 6\n[set() * (n + 1) for _ in range(m + 1)]\n\n# Variant 7\n[[0.0] * (n + 1) for _ in range(m + 1)]\n\n# Variant 8\n[[False] * (n + 1) for _ in range(m + 1)]\n\n# Variant 9\n[[True] * (n + 1) for _ in range(m + 1)]\n\n# Variant 10\n[[''] * (n + 1) for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[] * (n + 1) for _ in range(m + 1)]",
    "[{} * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[0 * (n + 1) for _ in range(m + 1)]",
    "[True * (n + 1) for _ in range(m + 1)]",
    "[() * (n + 1) for _ in range(m + 1)]",
    "[1.0 * (n + 1) for _ in range(m + 1)]",
    "[set() * (n + 1) for _ in range(m + 1)]",
    "[dict() * (n + 1) for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1) for _ in range(m + 1)]",
    "[[[]] * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[['placeholder'] * (n + 1) for _ in range(m + 1)]",
    "[{} * (n + 1) for _ in range(m + 1)]",
    "[dict() * (n + 1) for _ in range(m + 1)]",
    "[set() * (n + 1) for _ in range(m + 1)]",
    "['string'] * (n + 1) for _ in range(m + 1)]",
    "[True] * (n + 1) for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1) for _ in range(m + 1)]",
    "[[] * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "['' * (n + 1) for _ in range(m + 1)]",
    "[{} * (n + 1) for _ in range(m + 1)]",
    "[dict() * (n + 1) for _ in range(m + 1)]",
    "[(i*i) * (n + 1) for i in range(m + 1)]",
    "[lambda:None * (n + 1) for _ in range(m + 1)]",
    "[(object()) * (n + 1) for _ in range(m + 1)]",
    "[None] * (n + 1) for _ in range(m + 1)",
    "'' * (n + 1) for _ in range(m + 1)",
    "[] * (n + 1) for _ in range(m + 1)",
    "dict() * (n + 1) for _ in range(m + 1)",
    "set() * (n + 1) for _ in range(m + 1)",
    "tuple() * (n + 1) for _ in range(m + 1)",
    "{} * (n + 1) for _ in range(m + 1)",
    "frozenset() * (n + 1) for _ in range(m + 1)",
    "float('inf') * (n + 1) for _ in range(m + 1)",
    "callable('xyz') * (n + 1) for _ in range(m + 1)",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1) for _ in range(m + 1)]",
    "[[] * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[[{}] * (n + 1) for _ in range(m + 1)]",
    "[['__'] * (n + 1) for _ in range(m + 1)]",
    "[[True] * (n + 1) for _ in range(m + 1)]",
    "[[1.0] * (n + 1) for _ in range(m + 1)]",
    "[[set()] * (n + 1) for _ in range(m + 1)]",
    "[[object()] * (n + 1) for _ in range(m + 1)]",
    "[None * (n + 1) for _ in range(m + 1)]",
    "[print * (n + 1) for _ in range(m + 1)]",
    "[True * (n + 1) for _ in range(m + 1)]",
    "[42 * (n + 1) for _ in range(m + 1)]",
    "[\"placeholder\" * (n + 1) for _ in range(m + 1)]",
    "[[] * (n + 1) for _ in range(m + 1)]",
    "[set() * (n + 1) for _ in range(m + 1)]",
    "[{1: 'one'} * (n + 1) for _ in range(m + 1)]",
    "[(x + 1) * (n + 1) for _ in range(m + 1)]",
    "^[!@#$%] * (n + 1) for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1) for _ in range(m + 1)]",
    "[[] * (n + 1) for _ in range(m + 1)]",
    "[{} * (n + 1) for _ in range(m + 1)]",
    "[() * (n + 1) for _ in range(m + 1)]",
    "[set() * (n + 1) for _ in range(m + 1)]",
    "[{} for _ in range(m + 1)] * (n + 1)",
    "[(i,j) for j in range(n + 1)] for i in range(m + 1)]",
    "[[i+j for j in range(n + 1)] for i in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1) for _ in range(m + 1)]",
    "[['uninitialized'] * (n + 1) for _ in range(m + 1)]",
    "[[] * (n + 1) for _ in range(m + 1)]",
    "[['placeholder'] * (n + 1) for _ in range(m + 1)]",
    "[[False] * (n + 1) for _ in range(m + 1)]",
    "[[[]] * (n + 1) for _ in range(m + 1)]",
    "[['undefined'] * (n + 1) for _ in range(m + 1)]",
    "[[{}] * (n + 1) for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1) for _ in range(m + 1)]",
    "[[] for _ in range(m + 1)]",
    "[[] * (n + 1) for _ in range(m + 1)]",
    "[[0.0] * (n + 1) for _ in range(m + 1)]",
    "[{}] * (n + 1) for _ in range(m + 1)]",
    "[[True] * (n + 1) for _ in range(m + 1)]",
    "[\"\"] * (n + 1) for _ in range(m + 1)]",
    "[set()] * (n + 1) for _ in range(m + 1)]",
    "[dict()] * (n + 1) for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[[] * (n + 1) for _ in range(m + 1)]",
    "[list() * (n + 1) for _ in range(m + 1)]",
    "[{} * (n + 1) for _ in range(m + 1)]",
    "[set() * (n + 1) for _ in range(m + 1)]",
    "[{()} * (n + 1) for _ in range(m + 1)]",
    "[(0, ) * (n + 1) for _ in range(m + 1)]",
    "[['a', 'b'] * (n + 1) for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[] * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[['value'] * (n + 1) for _ in range(m + 1)]",
    "[['placeholder'] * (n + 1) for _ in range(m + 1)]",
    "[[True] * (n + 1) for _ in range(m + 1)]",
    "[[False] * (n + 1) for _ in range(m + 1)]",
    "[['a', 'b', 'c'] * (n + 1) for _ in range(m + 1)]",
    "[[1, 2, 3] * (n + 1) for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[[] * (n + 1) for _ in range(m + 1)]",
    "[[False] * (n + 1) for _ in range(m + 1)]",
    "[[{}] * (n + 1) for _ in range(m + 1)]",
    "[[set()] * (n + 1) for _ in range(m + 1)]",
    "[['placeholder'] * (n + 1) for _ in range(m + 1)]",
    "[[0.0] * (n + 1) for _ in range(m + 1)]",
    "[[(i+1) * (j+1) for j in range(n + 1)] for i in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[] * (n + 1) for _ in range(m + 1)]",
    "[0 * (n + 1) for _ in range(m + 1)]",
    "[True * (n + 1) for _ in range(m + 1)]",
    "[{} * (n + 1) for _ in range(m + 1)]",
    "[() * (n + 1) for _ in range(m + 1)]",
    "['' * (n + 1) for _ in range(m + 1)]",
    "[(x + y) * (n + 1) for _ in range(m + 1)]",
    "[(len(s) % 2 == 0) * (n + 1) for _ in range(m + 1)]",
    "[1 / x * (n + 1) for _ in range(m + 1)]",
    "[None for _ in range(m + 1)]",
    "[0 for _ in range(m + 1)]",
    "[[] for _ in range(m + 1)]",
    "[\"\" for _ in range(m + 1)]",
    "[True for _ in range(m + 1)]",
    "[False for _ in range(m + 1)]",
    "[\"value\" for _ in range(m + 1)]",
    "[0.0 for _ in range(m + 1)]",
    "[[None] for _ in range(m + 1)]",
    "[{}] for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1) for _ in range(m + 1)]",
    "[[] * (n + 1) for _ in range(m + 1)]",
    "[False * (n + 1) for _ in range(m + 1)]",
    "[\"\" * (n + 1) for _ in range(m + 1)]",
    "[{} * (n + 1) for _ in range(m + 1)]",
    "[() * (n + 1) for _ in range(m + 1)]",
    "[[{}] * (n + 1) for _ in range(m + 1)]",
    "[[()] * (n + 1) for _ in range(m + 1)]",
    "[set() * (n + 1) for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1) for _ in range(m + 1)]",
    "[[] * (n + 1) for _ in range(m + 1)]",
    "[{} * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[[True] * (n + 1) for _ in range(m + 1)]",
    "[[False] * (n + 1) for _ in range(m + 1)]",
    "[['abc'] * (n + 1) for _ in range(m + 1)]",
    "[[1.5] * (n + 1) for _ in range(m + 1)]",
    "[['a', 'b', 'c'] * (n + 1) for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1) for _ in range(m + 1)]",
    "[[True] * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[[] * (n + 1) for _ in range(m + 1)]",
    "[[[]] * (n + 1) for _ in range(m + 1)]",
    "[[{}] * (n + 1) for _ in range(m + 1)]",
    "['' * (n + 1) for _ in range(m + 1)]",
    "['hello' * (n + 1) for _ in range(m + 1)]",
    "[() * (n + 1) for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[[True] * (n + 1) for _ in range(m + 1)]",
    "[[[]] * (n + 1) for _ in range(m + 1)]",
    "[[{}] * (n + 1) for _ in range(m + 1)]",
    "[['']*4 + [None]*6, [False]*10, [0]*10, ['hello']*10]",
    "[[i for i in range(n + 1)] for _ in range(m + 1)]",
    "[[str(i) for i in range(n + 1)] for _ in range(m + 1)]",
    "[['__']*5 + [i for i in range(6, n + 1)] for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1) for _ in range(m + 1)]",
    "[[] * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[[{}] * (n + 1) for _ in range(m + 1)]",
    "[[()]* (n + 1) for _ in range(m + 1)]",
    "[[0.0] * (n + 1) for _ in range(m + 1)]",
    "[[False] * (n + 1) for _ in range(m + 1)]",
    "[[[]] * (n + 1) for _ in range(m + 1)]",
    "[['unknown'] * (n + 1) for _ in range(m + 1)]",
    "[['X'] * (n + 1) for _ in range(m + 1)]",
    "[['Y'] * (n + 1) for _ in range(m + 1)]",
    "[[1] * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1) for _ in range(m + 1)]",
    "[[True] * (n + 1) for _ in range(m + 1)]",
    "[[False] * (n + 1) for _ in range(m + 1)]",
    "[['A', 'B'] * (n + 1) for _ in range(m + 1)]",
    "[[] * (n + 1) for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[(i+1)*(j+1)] * (n + 1) for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1) for _ in range(m + 1)]",
    "[[[]] * (n + 1) for _ in range(m + 1)]",
    "[[{}] * (n + 1) for _ in range(m + 1)]",
    "[[True] * (n + 1) for _ in range(m + 1)]",
    "[[False] * (n + 1) for _ in range(m + 1)]",
    "[[\"\"] * (n + 1) for _ in range(m + 1)]",
    "[[0.0] * (n + 1) for _ in range(m + 1)]",
    "[[()] * (n + 1) for _ in range(m + 1)]",
    "[[set()] * (n + 1) for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[{} * (n + 1) for _ in range(m + 1)]",
    "[[] * (n + 1) for _ in range(m + 1)]",
    "[()] * (n + 1) for _ in range(m + 1)]",
    "[True * (n + 1) for _ in range(m + 1)]",
    "['abc' * (n + 1) for _ in range(m + 1)]",
    "[set() * (n + 1) for _ in range(m + 1)]",
    "[{1, 2, 3} * (n + 1) for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[[] * (n + 1) for _ in range(m + 1)]",
    "[[[]] * (n + 1) for _ in range(m + 1)]",
    "[{} * (n + 1) for _ in range(m + 1)]",
    "[[True] * (n + 1) for _ in range(m + 1)]",
    "[['value'] * (n + 1) for _ in range(m + 1)]",
    "[[0.0] * (n + 1) for _ in range(m + 1)]",
    "[[False] * (n + 1) for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[[] * (n + 1) for _ in range(m + 1)]",
    "[[[]] * (n + 1) for _ in range(m + 1)]",
    "[{} * (n + 1) for _ in range(m + 1)]",
    "[set() * (n + 1) for _ in range(m + 1)]",
    "[(i, j) * (n + 1) for i in range(m + 1) for j in range(m + 1)]",
    "[dict() * (n + 1) for _ in range(m + 1)]",
    "[str() * (n + 1) for _ in range(m + 1)]",
    "[[i] * (n + 1) for i in range(m + 1)]",
    "[[j] * (n + 1) for j in range(m + 1)]",
    "[[_] * (n + 1) for _ in range(m + 1)]",
    "[[x] * (n + 1) for x in range(m + 1)]",
    "[[element] * (n + 1) for element in range(m + 1)]",
    "[[value] * (n + 1) for value in range(m + 1)]",
    "[['_'] * (n + 1) for _ in range(m + 1)]",
    "[['placeholder'] * (n + 1) for _ in range(m + 1)]",
    "[['element'] * (n + 1) for element in range(m + 1)]",
    "[['value'] * (n + 1) for value in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1) for _ in range(m + 1)]",
    "[[] * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[[False] * (n + 1) for _ in range(m + 1)]",
    "[[True] * (n + 1) for _ in range(m + 1)]",
    "[[[]] * (n + 1) for _ in range(m + 1)]",
    "[[{}] * (n + 1) for _ in range(m + 1)]",
    "[[0.0] * (n + 1) for _ in range(m + 1)]",
    "[[lambda: None] * (n + 1) for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[[] * (n + 1) for _ in range(m + 1)]",
    "[{} * (n + 1) for _ in range(m + 1)]",
    "[(0,) * (n + 1) for _ in range(m + 1)]",
    "[False * (n + 1) for _ in range(m + 1)]",
    "[[[]] * (n + 1) for _ in range(m + 1)]",
    "[[0.0] * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[[] * (n + 1) for _ in range(m + 1)]",
    "[True * (n + 1) for _ in range(m + 1)]",
    "[{} * (n + 1) for _ in range(m + 1)]",
    "[[[] for _ in range(n + 1)] for _ in range(m + 1)]",
    "[[() for _ in range(n + 1)] for _ in range(m + 1)]",
    "[{__} * (n + 1) for _ in range(m + 1)]",
    "[[__ + 1] * (n + 1) for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[[] * (n + 1) for _ in range(m + 1)]",
    "[{} * (n + 1) for _ in range(m + 1)]",
    "[set() * (n + 1) for _ in range(m + 1)]",
    "[float(0)] * (n + 1) for _ in range(m + 1)]",
    "[len([])] * (n + 1) for _ in range(m + 1)]",
    "[''.join([])] * (n + 1) for _ in range(m + 1)]",
    "[frozenset()] * (n + 1) for _ in range(m + 1)]",
    "[None] * (n + 1) for _ in range(m + 1)",
    "0 for _ in range(m + 1)",
    "[] for _ in range(m + 1)",
    "'' for _ in range(m + 1)",
    "True for _ in range(m + 1)",
    "(1, 2, 3) for _ in range(m + 1)",
    "{} for _ in range(m + 1)",
    "x for _ in range(m + 1)",
    "[1, 2, 3] for _ in range(m + 1)",
    "\"hello\" for _ in range(m + 1)",
    "[None] * (n + 1)",
    "[\"\"] * (n + 1)",
    "[int] * (n + 1)",
    "[1.0] * (n + 1)",
    "[True] * (n + 1)",
    "[{'a': 1}] * (n + 1)",
    "[\"hello\"] * (n + 1)",
    "[1, 2, 3] * (n + 1)",
    "[attr] * (n + 1)",
    "[()] * (n + 1)",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[] * (n + 1) for _ in range(m + 1)]",
    "[(1 + 2) * (n + 1) for _ in range(m + 1)]",
    "[range(n + 1) for _ in range(m + 1)]",
    "[\"\" * (n + 1) for _ in range(m + 1)]",
    "[True * (n + 1) for _ in range(m + 1)]",
    "[1.0 * (n + 1) for _ in range(m + 1)]",
    "[{1: 'one'} * (n + 1) for _ in range(m + 1)]",
    "[[[1]] * (n + 1) for _ in range(m + 1)]",
    "[[x] * (n + 1) for x in range(m + 1)]"
  ],
  "num_code_blocks": 1741
}
