{
  "template": "if s == target:\n    ans.append(t[__])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
  "lang": "py",
  "temperature": 1.1,
  "code_blocks": [
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[len(t) - 1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[999])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[99])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[u])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[i])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[10])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[7])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[6])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[u])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[len(t)-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[s-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[i])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[i+1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[6])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[7])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[8])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[6])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[7])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[8])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[i])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[s])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[u])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[target])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[10])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "index = 0\nif s == target:\n    ans.append(t[index])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()\n    index += 1",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[len(t) - 1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[len(t) - 1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i + 1, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i + 1, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i + 1, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s < target:\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "if s == target:\n    ans.append(t[len(t) - 1])\n    return\nif s < target:\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "if s == target:\n    ans.append(t[len(t) - 1])\n    return\nif s < target:\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i + 1, t)\n        t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s < target:\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i + 1, t)\n        t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s < target:\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i + 1, t)\n        t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[len(t) - 1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[len(t) - 2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[None])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[10])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[\"foo\"])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1:])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[t])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\nif s > target:\n    ans.append(t[-2])\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()\nreturn ans",
    "if s == target:\n    ans.append(t[2])\nif s > target:\n    ans.append(t[1])\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()\nreturn",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()\nreturn ans",
    "if s == target:\n    ans.append(t[5])\n    return ans\nif s > target:\n    return ans\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()\nreturn",
    "if s == target:\n    ans.append(t[6])\n    return ans\nif s > target:\n    return ans\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()\nreturn ans",
    "if s == target:\n    ans.append(t[8])\nif s > target:\n    ans.append(t[9])\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()\nreturn ans",
    "if s == target:\n    ans.append(t[7])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()\nreturn ans",
    "if s == target:\n    ans.append(t[-2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()\nreturn ans",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[u])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[len(t) - 1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[len(t)-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1:])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1:])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[len(t)-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1:])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1:])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t.pop())\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t.pop(-1))\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[:])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[::-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t + [c])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t * 2)\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[9])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[7])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[8])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[6])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[random_index])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[len(t) - 1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[math.pi])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor __ in range(u, len(candidates)):\n    c = candidates[__]\n    t.append(c)\n    dfs(s + c, __, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor __ in range(u, len(candidates)):\n    c = candidates[__]\n    t.append(c)\n    dfs(s + c, __, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor __ in range(u, len(candidates)):\n    c = candidates[__]\n    t.append(c)\n    dfs(s + c, __, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor __ in range(u, len(candidates)):\n    c = candidates[__]\n    t.append(c)\n    dfs(s + c, __, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor __ in range(u, len(candidates)):\n    c = candidates[__]\n    t.append(c)\n    dfs(s + c, __, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor __ in range(u, len(candidates)):\n    c = candidates[__]\n    t.append(c)\n    dfs(s + c, __, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[6])\n    return\nif s > target:\n    return\nfor __ in range(u, len(candidates)):\n    c = candidates[__]\n    t.append(c)\n    dfs(s + c, __, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[7])\n    return\nif s > target:\n    return\nfor __ in range(u, len(candidates)):\n    c = candidates[__]\n    t.append(c)\n    dfs(s + c, __, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[8])\n    return\nif s > target:\n    return\nfor __ in range(u, len(candidates)):\n    c = candidates[__]\n    t.append(c)\n    dfs(s + c, __, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[9])\n    return\nif s > target:\n    return\nfor __ in range(u, len(candidates)):\n    c = candidates[__]\n    t.append(c)\n    dfs(s + c, __, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[len(t)-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[50])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[len(t) // 2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[10])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(target - s, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t + [c])\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t.append(c))\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[10])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-10])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[6])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[7])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[8])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[7])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[6])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[8])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[9])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[u])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[s])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t)\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(target)\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(candidates[i])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[6])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[7])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[8])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[9])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[6])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[7])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[8])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[6])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[7])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[8])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[i])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[i])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, __)\n    t.pop()",
    "if s == target:\n    ans.append(t[i])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = __[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[i])\n    return\nif s > target:\n    return\nfor i in range(u, __):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[i])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[__]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(__[i])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[i])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + __, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[i])\n    return\nif s > __:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[i])\n    return\nif s > target:\n    return\nfor i in range(u, len(__)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == __:\n    ans.append(t[i])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[6])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[len(t)-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[6])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[7])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[8])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[9])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[len(t) - 1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[length - 1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[len(t) - u])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-u])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1 - u])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[len(t) - u - 1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-u - 1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[u])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[u - 1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t)\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[len(t)-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[len(t)-2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[::-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0:2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[random.randint(0, len(t)-1)])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[u])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[len(t) - 1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[6])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[7])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[i])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[idx])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[cnt])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[value])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[elem])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[num])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[output])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[entry])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[find])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[result])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[10])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[u])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[s])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[len(candidates)-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[len(t)-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[len(t)//2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[6])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[7])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[8])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[len(t)-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[6])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "# Variant 1\nif s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()\n\n# Variant 2\nif s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()\n\n# Variant 3\nif s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()\n\n# Variant 4\nif s == target:\n    ans.append(t[u])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()\n\n# Variant 5\nif s == target:\n    ans.append(t[-2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()\n\n# Variant 6\nif s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()\n\n# Variant 7\nif s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()\n\n# Variant 8\nif s == target:\n    ans.append(t[u + 1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()\n\n# Variant 9\nif s == target:\n    ans.append(t[len(t) - 1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()\n\n# Variant 10\nif s == target:\n    ans.append(t[len(t) - 2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[len(t) - 1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[t.index(c)])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[t.__len__() - 1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[u])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[u])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[len(t) - 1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[6])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[7])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[8])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[i])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[s])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[len(t)-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[u])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[len(candidates)-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[s - u])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[target])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[u + 1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[6])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[7])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[8])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[len(t)-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[len(t)-2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[6])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[7])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[8])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[7])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[9])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[6])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[8])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "t.append(undefined_token)",
    "undefined_token = candidates[i]\nt.append(undefined_token)",
    "t.append(candidates[undefined_token])",
    "undefined_token = u + i\nt.append(candidates[undefined_token])",
    "undefined_token = c\nt.append(undefined_token)",
    "undefined_token = i\nt.append(candidates[i])",
    "undefined_token = s + c\nt.append(candidates[i])",
    "undefined_token = i + u\nt.append(candidates[undefined_token])",
    "undefined_token = c + i\nt.append(candidates[undefined_token])",
    "undefined_token = s\nt.append(candidates[i])",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t)\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0][0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1][0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0][1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1][1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1][1][0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2][1][0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[6])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[7])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[8])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[9])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[6])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[7])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[len(t) - 1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[6])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[7])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[8])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[:])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[::-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[:2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2:])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[:1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[6])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[7])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[8])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[9])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[i])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[s])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[7])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[u])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[len(t)-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[u+1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[6])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[7])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[8])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[u])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[s])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[i])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[target])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[len(t)-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[s - target])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[target - s])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[9])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[7])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[7])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[6])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[7])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[8])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[9])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[6])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[7])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[8])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[6])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[8])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[9])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[7])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[42])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[999])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-42])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[17])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[99])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[22])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[7])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[10])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[7])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[6])\n    return\nif s > target2:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[u])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[7])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[6])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[9])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[8])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[6])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[7])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[8])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[9])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return \nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return \nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return \nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return \nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return \nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[len(t)-1])\n    return\nif s > target:\n    return \nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return \nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[u])\n    return\nif s > target:\n    return \nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[u-1])\n    return\nif s > target:\n    return \nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[i])\n    return\nif s > target:\n    return \nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[6])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[7])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[8])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[u])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[len(t)-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[9])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[7])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t.pop())\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[7])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[9])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[6])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[7])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[6])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[7])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[8])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[6])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[6])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[7])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[8])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[len(t) - 1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[u + 1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1] if len(t) > 1 else t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-2] if len(t) > 1 else t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[u - 1] if u > 0 else t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[u + 2] if u < len(t) - 1 else t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[u])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[i])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[7])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[6])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[7])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[8])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[9])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "t.append(__)",
    "ans.append(__)",
    "__ = u",
    "__ = s + c",
    "__ = i + u",
    "t[__] = c",
    "__ = s",
    "__ = i",
    "__ = len(candidates) - i",
    "__ = target",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[u])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[i])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[7])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[9])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[6])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[7])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[8])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[9])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[u])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u+1, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u+1, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-2])\n    return\nif s > target:\n    return\nfor i in range(u+1, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[6])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[7])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[8])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[6])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[7])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[8])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[9])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[len(t) - 1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[len(t) - 2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[len(t)//2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[u])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[len(t)-2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[i])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-i])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[__])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[__])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[__]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[__])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = __\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans[__].append(t)\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[__])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    t.append(candidates[i])\n    dfs(s + candidates[i], i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[__])\n    return\nif s > target:\n    return\nfor i in range(u, __):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[__])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t[__].append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[__])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append([__[j] for j in range(len(__))])\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[__])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = int(__)\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    for j in range(len(__)):\n        ans.append(t[j])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[len(t)-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[u])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[len(t) // 2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[i])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[len(t)-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[6])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[7])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[8])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[9])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[42])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[None])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[\"hello\"])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[my_var])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[getattr(module, \"attr\")])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[function_call(arg1, \"string\")])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[str(index)])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0xDEADBEEF])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[len(t)-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[10])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[8])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[u])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[i])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[s])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[len(t)-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[target])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[s-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[c])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[__+1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[__ - 1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[__ * 2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-__])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-__ - 1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[s])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[i])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[i+1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[i-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[u])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[6])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[len(t)-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[u])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[6])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[7])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[8])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[len(t)-2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[u])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[u+1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[123])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[\"xyz\"])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[None])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[True])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[False])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1.23])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0xFF])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t['string'])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[u])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[10])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[u])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[7])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[6])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[7])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[8])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[6])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[7])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[8])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return",
    "if s == target:\n    ans.append(t[0])\n    return",
    "if s == target:\n    ans.append(t[len(t) // 2])\n    return",
    "if s == target:\n    ans.append(t[1])\n    return",
    "if s == target:\n    ans.append(t[-2])\n    return",
    "if s == target:\n    ans.append(t[-3])\n    return",
    "if s == target:\n    ans.append(t[-4])\n    return",
    "if s == target:\n    ans.append(t[2])\n    return",
    "if s == target:\n    ans.append(t[3])\n    return",
    "if s == target:\n    ans.append(t[len(t) - 2])\n    return",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[6])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[7])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[8])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[6])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[7])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[8])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[10])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[7])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[12])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[9])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[len(t) - 1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[c])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[len(t)])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[i])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[s])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[u])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[7])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[6])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[6])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[7])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[8])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[9])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[6])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[7])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[8])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[7])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[9])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[8])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[u])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[u + 1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[len(t)-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[len(t)-2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[42])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[999])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[len(candidates)-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[i])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[len(t) - 1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[6])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[7])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[8])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[6])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[7])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[8])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()"
  ],
  "num_code_blocks": 1490
}
