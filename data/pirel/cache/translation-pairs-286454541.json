{
  "source_lang": "py",
  "target_lang": "js",
  "template": "return [__ ^ (__ >> 1) for __ in range(1 << n)]",
  "template_origin": "return [i ^ (i >> 1) for i in range(1 << n)]",
  "templatized_node_ids": [
    4,
    7,
    10
  ],
  "translation_pairs": [
    [
      {
        "source": "return [i ^ (i >> 1) for i in range(1 << n)]",
        "target": "function f_gold(n) {\n    const result = [];\n    for (let i = 0; i < (1 << n); i++) {\n        result.push(i ^ (i >> 1));\n    }\n    return result;\n}"
      },
      {
        "source": "return [j ^ (j >> 1) for j in range(1 << n)]",
        "target": "function f_gold(n) {\n    const result = [];\n    for(let j=0; j<(1 << n); j++) {\n        result.push(j ^ (j >> 1));\n    }\n    return result;\n}"
      }
    ],
    [
      {
        "source": "return [k ^ (k >> 1) for k in range(1 << n)]",
        "target": "function f_gold(n) {\n    let result = [];\n    for (let k = 0; k < (1 << n); k++) {\n        result.push(k ^ (k >> 1));\n    }\n    return result;\n}"
      },
      {
        "source": "return [x ^ (x >> 1) for x in range(1 << n)]",
        "target": "function gold(n) {\n    let result = [];\n    for (let x = 0; x < (1 << n); x++) {\n        result.push(x ^ (x >> 1));\n    }\n    return result;\n}"
      }
    ]
  ]
}
