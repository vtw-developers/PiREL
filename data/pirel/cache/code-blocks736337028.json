{
  "template": "strs = [chars[int(d) - 2] for d in __]",
  "lang": "py",
  "temperature": 0.8,
  "code_blocks": [
    "strs = [chars[int(d) - 2] for d in range(10)]",
    "strs = [chars[int(d) - 2] for d in [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]]",
    "strs = [chars[int(d) - 2] for d in \"1234567890\"]",
    "strs = [chars[int(d) - 2] for d in (str(i) for i in range(10))]",
    "strs = [chars[int(d) - 2] for d in {1, 2, 3, 4, 5, 6, 7, 8, 9, 10}]",
    "strs = [chars[int(d) - 2] for d in [str(i) for i in range(10)]]",
    "strs = [chars[int(d) - 2] for d in range(1, 11)]",
    "strs = [chars[int(d) - 2] for d in list(range(10))]",
    "strs = [chars[int(d) - 2] for d in tuple(range(10))]",
    "strs = [chars[int(d) - 2] for d in \"abcdefghij\"]",
    "strs = [chars[int(d) - 2] for d in range(10)]",
    "strs = [chars[int(d) - 2] for d in '0123456789']",
    "strs = [chars[int(d) - 2] for d in [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]]",
    "strs = [chars[int(d) - 2] for d in (0, 1, 2, 3, 4, 5, 6, 7, 8, 9)]",
    "strs = [chars[int(d) - 2] for d in {0, 1, 2, 3, 4, 5, 6, 7, 8, 9}]",
    "strs = [chars[int(d) - 2] for d in '9876543210']",
    "strs = [chars[int(d) - 2] for d in range(9, -1, -1)]",
    "strs = [chars[int(d) - 2] for d in reversed(range(10))]",
    "strs = [chars[int(d) - 2] for d in ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9']]",
    "strs = [chars[int(d) - 2] for d in (str(i) for i in range(10))]",
    "strs = [chars[int(d) - 2] for d in range(10)]",
    "strs = [chars[int(d) - 2] for d in [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]]",
    "strs = [chars[int(d) - 2] for d in \"0123456789\"]",
    "strs = [chars[int(d) - 2] for d in (0, 1, 2, 3, 4, 5, 6, 7, 8, 9)]",
    "strs = [chars[int(d) - 2] for d in {\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\"}]",
    "strs = [chars[int(d) - 2] for d in range(1, 11)]",
    "strs = [chars[int(d) - 2] for d in range(2, 12)]",
    "strs = [chars[int(d) - 2] for d in range(0, 20, 2)]",
    "strs = [chars[int(d) - 2] for d in [str(i) for i in range(10)]]",
    "strs = [chars[int(d) - 2] for d in list(range(10))]",
    "strs = [chars[int(d) - 2] for d in range(len(chars))]",
    "strs = [chars[int(d) - 2] for d in range(len(chars) - 2)]",
    "strs = [chars[int(d) - 2] for d in range(2, len(chars))]",
    "strs = [chars[int(d) - 2] for d in range(0, len(chars), 2)]",
    "strs = [chars[int(d) - 2] for d in range(1, len(chars), 2)]",
    "strs = [chars[int(d) - 2] for d in range(0, len(chars), 3)]",
    "strs = [chars[int(d) - 2] for d in range(len(chars) - 1, -1, -1)]",
    "strs = [chars[int(d) - 2] for d in reversed(range(len(chars)))]",
    "strs = [chars[int(d) - 2] for d in [0, 1, 2, 3, 4]]",
    "strs = [chars[int(d) - 2] for d in [4, 3, 2, 1, 0]]",
    "# Variant 1\nstrs = [chars[int(d) - 2] for d in data]\n\n# Variant 2\nstrs = [chars[int(d) - 2] for d in range(len(data))]\n\n# Variant 3\nstrs = [chars[int(d) - 2] for d in range(10)]\n\n# Variant 4\nstrs = [chars[int(d) - 2] for d in range(1, 11)]\n\n# Variant 5\nstrs = [chars[int(d) - 2] for d in range(0, len(data), 2)]\n\n# Variant 6\nstrs = [chars[int(d) - 2] for d in range(len(data) - 1, -1, -1)]\n\n# Variant 7\nstrs = [chars[int(d) - 2] for d in reversed(data)]\n\n# Variant 8\nstrs = [chars[int(d) - 2] for d in sorted(data)]\n\n# Variant 9\nstrs = [chars[int(d) - 2] for d in set(data)]\n\n# Variant 10\nstrs = [chars[int(d) - 2] for d in zip(data)]",
    "strs = [chars[int(d) - 2] for d in range(10)]",
    "strs = [chars[int(d) - 2] for d in \"0123456789\"]",
    "strs = [chars[int(d) - 2] for d in (str(i) for i in range(10))]",
    "strs = [chars[int(d) - 2] for d in [str(i) for i in range(10)]]",
    "strs = [chars[int(d) - 2] for d in (\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\")]",
    "strs = [chars[int(d) - 2] for d in \"9876543210\"]",
    "strs = [chars[int(d) - 2] for d in reversed(range(10))]",
    "strs = [chars[int(d) - 2] for d in reversed(\"0123456789\")]",
    "strs = [chars[int(d) - 2] for d in reversed((str(i) for i in range(10)))]",
    "strs = [chars[int(d) - 2] for d in reversed([str(i) for i in range(10)])]",
    "# Variant 1\ndigits = [0, 1, 2, 3, 4]\nstrs = [chars[int(d) - 2] for d in digits]\n\n# Variant 2\nnums = [5, 6, 7, 8, 9]\nstrs = [chars[int(d) - 2] for d in nums]\n\n# Variant 3\nindices = [1, 3, 5, 7, 9]\nstrs = [chars[int(d) - 2] for d in indices]\n\n# Variant 4\nkeys = ['2', '3', '4', '5', '6']\nstrs = [chars[int(d) - 2] for d in keys]\n\n# Variant 5\nvalues = [2, 3, 4, 5, 6]\nstrs = [chars[int(d) - 2] for d in values]\n\n# Variant 6\ncodes = ['4', '6', '8', '10', '12']\nstrs = [chars[int(d) - 2] for d in codes]\n\n# Variant 7\npositions = [0, 2, 4, 6, 8]\nstrs = [chars[int(d) - 2] for d in positions]\n\n# Variant 8\nindexes = [2, 4, 6, 8, 10]\nstrs = [chars[int(d) - 2] for d in indexes]\n\n# Variant 9\nvalues = [1, 2, 3, 4, 5]\nstrs = [chars[int(d) - 2] for d in values]\n\n# Variant 10\nelements = [10, 20, 30, 40, 50]\nstrs = [chars[int(d) - 2] for d in elements]",
    "strs = [chars[int(d) - 2] for d in range(len(chars))]",
    "strs = [chars[int(d) - 2] for d in range(10)]",
    "strs = [chars[int(d) - 2] for d in [1, 3, 5, 7, 9]]",
    "strs = [chars[int(d) - 2] for d in \"24680\"]",
    "strs = [chars[int(d) - 2] for d in list(range(1, 6, 2))]",
    "strs = [chars[int(d) - 2] for d in (str(x) for x in range(1, 6, 2))]",
    "strs = [chars[int(d) - 2] for d in {0, 1, 2, 3, 4}]",
    "strs = [chars[int(d) - 2] for d in tuple(range(5))]",
    "strs = [chars[int(d) - 2] for d in sorted(range(5), reverse=True)]",
    "strs = [chars[int(d) - 2] for d in reversed(range(5))]",
    "strs = [chars[int(d) - 2] for d in range(10)]",
    "strs = [chars[int(d) - 2] for d in range(1, 11)]",
    "strs = [chars[int(d) - 2] for d in \"0123456789\"]",
    "strs = [chars[int(d) - 2] for d in [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]]",
    "strs = [chars[int(d) - 2] for d in (0, 1, 2, 3, 4, 5, 6, 7, 8, 9)]",
    "strs = [chars[int(d) - 2] for d in {0, 1, 2, 3, 4, 5, 6, 7, 8, 9}]",
    "strs = [chars[int(d) - 2] for d in range(len(chars))]",
    "strs = [chars[int(d) - 2] for d in range(2, len(chars) + 2)]",
    "strs = [chars[int(d) - 2] for d in range(2, 12)]",
    "strs = [chars[int(d) - 2] for d in range(len(chars) - 2, len(chars) + 8)]",
    "strs = [chars[int(d) - 2] for d in range(10)]",
    "strs = [chars[int(d) - 2] for d in \"0123456789\"]",
    "strs = [chars[int(d) - 2] for d in [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]]",
    "strs = [chars[int(d) - 2] for d in (0, 1, 2, 3, 4, 5, 6, 7, 8, 9)]",
    "strs = [chars[int(d) - 2] for d in {0, 1, 2, 3, 4, 5, 6, 7, 8, 9}]",
    "strs = [chars[int(d) - 2] for d in range(1, 11)]",
    "strs = [chars[int(d) - 2] for d in \"1234567890\"]",
    "strs = [chars[int(d) - 2] for d in [1, 2, 3, 4, 5, 6, 7, 8, 9, 0]]",
    "strs = [chars[int(d) - 2] for d in (1, 2, 3, 4, 5, 6, 7, 8, 9, 0)]",
    "strs = [chars[int(d) - 2] for d in {1, 2, 3, 4, 5, 6, 7, 8, 9, 0}]",
    "strs = [chars[int(d) - 2] for d in range(10)]",
    "strs = [chars[int(d) - 2] for d in \"0123456789\"]",
    "strs = [chars[int(d) - 2] for d in [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]]",
    "strs = [chars[int(d) - 2] for d in (0, 1, 2, 3, 4, 5, 6, 7, 8, 9)]",
    "strs = [chars[int(d) - 2] for d in {0, 1, 2, 3, 4, 5, 6, 7, 8, 9}]",
    "strs = [chars[int(d) - 2] for d in range(1, 11)]",
    "strs = [chars[int(d) - 2] for d in \"1234567890\"]",
    "strs = [chars[int(d) - 2] for d in [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]]",
    "strs = [chars[int(d) - 2] for d in (1, 2, 3, 4, 5, 6, 7, 8, 9, 10)]",
    "strs = [chars[int(d) - 2] for d in {1, 2, 3, 4, 5, 6, 7, 8, 9, 10}]",
    "strs = [chars[int(d) - 2] for d in range(len(chars))]",
    "strs = [chars[int(d) - 2] for d in range(10)]",
    "strs = [chars[int(d) - 2] for d in '0123456789']",
    "strs = [chars[int(d) - 2] for d in [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]]",
    "strs = [chars[int(d) - 2] for d in reversed(range(10))]",
    "strs = [chars[int(d) - 2] for d in sorted(range(10), reverse=True)]",
    "strs = [chars[int(d) - 2] for d in sorted('9876543210')]",
    "strs = [chars[int(d) - 2] for d in sorted([9, 8, 7, 6, 5, 4, 3, 2, 1, 0])]",
    "strs = [chars[int(d) - 2] for d in ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9']]",
    "strs = [chars[int(d) - 2] for d in ('0', '1', '2', '3', '4', '5', '6', '7', '8', '9')]",
    "# Variant 1\nstrs = [chars[int(d) - 2] for d in range(10)]\n\n# Variant 2\nstrs = [chars[int(d) - 2] for d in range(1, 11)]\n\n# Variant 3\nstrs = [chars[int(d) - 2] for d in [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]]\n\n# Variant 4\nstrs = [chars[int(d) - 2] for d in \"1234567890\"]\n\n# Variant 5\nstrs = [chars[int(d) - 2] for d in (\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\")]\n\n# Variant 6\nstrs = [chars[int(d) - 2] for d in {1, 2, 3, 4, 5, 6, 7, 8, 9, 10}]\n\n# Variant 7\nstrs = [chars[int(d) - 2] for d in {str(i): i for i in range(1, 11)}]\n\n# Variant 8\nstrs = [chars[int(d) - 2] for d in range(len(chars))]\n\n# Variant 9\nnumbers = [1, 3, 5, 7, 9, 11, 13, 15, 17, 19]\nstrs = [chars[int(d) - 2] for d in numbers]\n\n# Variant 10\nstrs = [chars[int(d) - 2] for d in reversed(range(1, 11))]",
    "strs = [chars[int(d) - 2] for d in range(10)]",
    "strs = [chars[int(d) - 2] for d in [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]]",
    "strs = [chars[int(d) - 2] for d in '0123456789']",
    "strs = [chars[int(d) - 2] for d in (str(i) for i in range(10))]",
    "strs = [chars[int(d) - 2] for d in list(range(10))]",
    "strs = [chars[int(d) - 2] for d in tuple(range(10))]",
    "strs = [chars[int(d) - 2] for d in set(range(10))]",
    "strs = [chars[int(d) - 2] for d in {'0', '1', '2', '3', '4', '5', '6', '7', '8', '9'}]",
    "strs = [chars[int(d) - 2] for d in {'0': 0, '1': 1, '2': 2, '3': 3, '4': 4, '5': 5, '6': 6, '7': 7, '8': 8, '9': 9}]",
    "strs = [chars[int(d) - 2] for d in range(len(chars) + 2)]",
    "strs = [chars[int(d) - 2] for d in digits]",
    "strs = [chars[int(d) - 2] for d in range(len(chars))]",
    "strs = [chars[int(d) - 2] for d in range(len(strs))]",
    "strs = [chars[int(d) - 2] for d in range(len(nums))]",
    "strs = [chars[int(d) - 2] for d in range(len(lst))]",
    "strs = [chars[int(d) - 2] for d in range(len(items))]",
    "strs = [chars[int(d) - 2] for d in range(len(data))]",
    "strs = [chars[int(d) - 2] for d in range(len(sequence))]",
    "strs = [chars[int(d) - 2] for d in range(len(elements))]",
    "strs = [chars[int(d) - 2] for d in range(len(indices))]",
    "# Variant 1\nstrs = [chars[int(d) - 2] for d in range(10)]\n\n# Variant 2\nstrs = [chars[int(d) - 2] for d in '0123456789']\n\n# Variant 3\nstrs = [chars[int(d) - 2] for d in ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9']]\n\n# Variant 4\nstrs = [chars[int(d) - 2] for d in ('0', '1', '2', '3', '4', '5', '6', '7', '8', '9')]\n\n# Variant 5\nstrs = [chars[int(d) - 2] for d in {'0', '1', '2', '3', '4', '5', '6', '7', '8', '9'}]\n\n# Variant 6\nstrs = [chars[int(d) - 2] for d in {'0': 0, '1': 1, '2': 2, '3': 3, '4': 4, '5': 5, '6': 6, '7': 7, '8': 8, '9': 9}]\n\n# Variant 7\nstrs = [chars[int(d) - 2] for d in range(2, 12)]\n\n# Variant 8\nstrs = [chars[int(d) - 2] for d in (2, 3, 4, 5, 6, 7, 8, 9, 10, 11)]\n\n# Variant 9\nstrs = [chars[int(d) - 2] for d in {2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]\n\n# Variant 10\nstrs = [chars[int(d) - 2] for d in {2: 0, 3: 1, 4: 2, 5: 3, 6: 4, 7: 5, 8: 6, 9: 7, 10: 8, 11: 9}]",
    "strs = [chars[int(d) - 2] for d in range(10)]",
    "strs = [chars[int(d) - 2] for d in \"0123456789\"]",
    "strs = [chars[int(d) - 2] for d in [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]]",
    "strs = [chars[int(d) - 2] for d in {0, 1, 2, 3, 4, 5, 6, 7, 8, 9}]",
    "strs = [chars[int(d) - 2] for d in (0, 1, 2, 3, 4, 5, 6, 7, 8, 9)]",
    "strs = [chars[int(d) - 2] for d in range(1, 11)]",
    "strs = [chars[int(d) - 2] for d in \"1234567890\"]",
    "strs = [chars[int(d) - 2] for d in [1, 2, 3, 4, 5, 6, 7, 8, 9, 0]]",
    "strs = [chars[int(d) - 2] for d in {1, 2, 3, 4, 5, 6, 7, 8, 9, 0}]",
    "strs = [chars[int(d) - 2] for d in (1, 2, 3, 4, 5, 6, 7, 8, 9, 0)]",
    "# Variant 1\nstrs = [chars[int(d) - 2] for d in range(len(chars))]\n\n# Variant 2\nstrs = [chars[int(d) - 2] for d in range(len(digits))]\n\n# Variant 3\nstrs = [chars[int(d) - 2] for d in digits]\n\n# Variant 4\nstrs = [chars[int(d) - 2] for d in range(10)]\n\n# Variant 5\nstrs = [chars[int(d) - 2] for d in '0123456789']\n\n# Variant 6\nstrs = [chars[int(d) - 2] for d in [str(i) for i in range(10)]]\n\n# Variant 7\nstrs = [chars[int(d) - 2] for d in [str(i) for i in range(2, 12)]]\n\n# Variant 8\nstrs = [chars[int(d) - 2] for d in [str(i) for i in range(1, 11)]]\n\n# Variant 9\nstrs = [chars[int(d) - 2] for d in [str(i) for i in range(-8, 2)]]\n\n# Variant 10\nstrs = [chars[int(d) - 2] for d in [str(i) for i in range(9, -1, -1)]]",
    "# Variant 1\nstrs = [chars[int(d) - 2] for d in range(10)]\n\n# Variant 2\nstrs = [chars[int(d) - 2] for d in range(1, 11)]\n\n# Variant 3\nstrs = [chars[int(d) - 2] for d in \"0123456789\"]\n\n# Variant 4\nstrs = [chars[int(d) - 2] for d in [str(i) for i in range(10)]]\n\n# Variant 5\nstrs = [chars[int(d) - 2] for d in (str(i) for i in range(10))]\n\n# Variant 6\nstrs = [chars[int(d) - 2] for d in {str(i) for i in range(10)}]\n\n# Variant 7\nstrs = [chars[int(d) - 2] for d in {\"0\": 0, \"1\": 1, \"2\": 2, \"3\": 3, \"4\": 4, \"5\": 5, \"6\": 6, \"7\": 7, \"8\": 8, \"9\": 9}]\n\n# Variant 8\nstrs = [chars[int(d) - 2] for d in (\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\")]\n\n# Variant 9\nstrs = [chars[int(d) - 2] for d in list(\"0123456789\")]\n\n# Variant 10\nimport itertools\nstrs = [chars[int(d) - 2] for d in itertools.permutations(\"0123456789\", 1)]",
    "# Variant 1\nstrs = [chars[int(d) - 2] for d in range(10)]\n\n# Variant 2\nstrs = [chars[int(d) - 2] for d in [1, 3, 5, 7, 9]]\n\n# Variant 3\nstrs = [chars[int(d) - 2] for d in \"2468\"]\n\n# Variant 4\nstrs = [chars[int(d) - 2] for d in range(1, 11, 2)]\n\n# Variant 5\nstrs = [chars[int(d) - 2] for d in [2, 4, 6, 8]]\n\n# Variant 6\nstrs = [chars[int(d) - 2] for d in \"13579\"]\n\n# Variant 7\nstrs = [chars[int(d) - 2] for d in range(2, 12, 2)]\n\n# Variant 8\nstrs = [chars[int(d) - 2] for d in [3, 5, 7, 9, 11]]\n\n# Variant 9\nstrs = [chars[int(d) - 2] for d in \"02468\"]\n\n# Variant 10\nstrs = [chars[int(d) - 2] for d in range(1, 10, 2)]",
    "strs = [chars[int(d) - 2] for d in range(len(chars))]",
    "strs = [chars[int(d) - 2] for d in chars]",
    "strs = [chars[int(d) - 2] for d in \"1234567890\"]",
    "strs = [chars[int(d) - 2] for d in range(10)]",
    "strs = [chars[int(d) - 2] for d in [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]]",
    "strs = [chars[int(d) - 2] for d in [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\"]]",
    "strs = [chars[int(d) - 2] for d in (str(d) for d in range(10))]",
    "strs = [chars[int(d) - 2] for d in reversed(range(1, 11))]",
    "strs = [chars[int(d) - 2] for d in sorted(chars)]",
    "strs = [chars[int(d) - 2] for d in [str(d) for d in range(1, 11)]]",
    "strs = [chars[int(d) - 2] for d in range(len(chars))]",
    "strs = [chars[int(d) - 2] for d in range(len(digits))]",
    "strs = [chars[int(d) - 2] for d in digits]",
    "strs = [chars[int(d) - 2] for d in range(len(numbers))]",
    "strs = [chars[int(d) - 2] for d in numbers]",
    "strs = [chars[int(d) - 2] for d in range(len(values))]",
    "strs = [chars[int(d) - 2] for d in values]",
    "strs = [chars[int(d) - 2] for d in range(len(indices))]",
    "strs = [chars[int(d) - 2] for d in indices]",
    "strs = [chars[int(d) - 2] for d in range(len(data))]",
    "strs = [chars[int(d) - 2] for d in range(10)]",
    "strs = [chars[int(d) - 2] for d in \"0123456789\"]",
    "strs = [chars[int(d) - 2] for d in [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]]",
    "strs = [chars[int(d) - 2] for d in (0, 1, 2, 3, 4, 5, 6, 7, 8, 9)]",
    "strs = [chars[int(d) - 2] for d in {0, 1, 2, 3, 4, 5, 6, 7, 8, 9}]",
    "strs = [chars[int(d) - 2] for d in range(1, 11)]",
    "strs = [chars[int(d) - 2] for d in \"1234567890\"]",
    "strs = [chars[int(d) - 2] for d in [1, 2, 3, 4, 5, 6, 7, 8, 9, 0]]",
    "strs = [chars[int(d) - 2] for d in (1, 2, 3, 4, 5, 6, 7, 8, 9, 0)]",
    "strs = [chars[int(d) - 2] for d in {1, 2, 3, 4, 5, 6, 7, 8, 9, 0}]",
    "strs = [chars[int(d) - 2] for d in range(10)]",
    "strs = [chars[int(d) - 2] for d in \"0123456789\"]",
    "strs = [chars[int(d) - 2] for d in [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]]",
    "strs = [chars[int(d) - 2] for d in (0, 1, 2, 3, 4, 5, 6, 7, 8, 9)]",
    "strs = [chars[int(d) - 2] for d in {0, 1, 2, 3, 4, 5, 6, 7, 8, 9}]",
    "strs = [chars[int(d) - 2] for d in range(1, 11)]",
    "strs = [chars[int(d) - 2] for d in \"1234567890\"]",
    "strs = [chars[int(d) - 2] for d in [1, 2, 3, 4, 5, 6, 7, 8, 9, 0]]",
    "strs = [chars[int(d) - 2] for d in (1, 2, 3, 4, 5, 6, 7, 8, 9, 0)]",
    "strs = [chars[int(d) - 2] for d in {1, 2, 3, 4, 5, 6, 7, 8, 9, 0}]",
    "strs = [chars[int(d) - 2] for d in range(10)]",
    "strs = [chars[int(d) - 2] for d in range(1, 11)]",
    "strs = [chars[int(d) - 2] for d in '0123456789']",
    "strs = [chars[int(d) - 2] for d in '9876543210']",
    "strs = [chars[int(d) - 2] for d in [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]]",
    "strs = [chars[int(d) - 2] for d in (0, 1, 2, 3, 4, 5, 6, 7, 8, 9)]",
    "strs = [chars[int(d) - 2] for d in {0, 1, 2, 3, 4, 5, 6, 7, 8, 9}]",
    "strs = [chars[int(d) - 2] for d in ('0', '1', '2', '3', '4', '5', '6', '7', '8', '9')]",
    "strs = [chars[int(d) - 2] for d in ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9']]",
    "strs = [chars[int(d) - 2] for d in ['9', '8', '7', '6', '5', '4', '3', '2', '1', '0']]",
    "strs = [chars[int(d) - 2] for d in range(10)]",
    "strs = [chars[int(d) - 2] for d in \"0123456789\"]",
    "strs = [chars[int(d) - 2] for d in [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]]",
    "strs = [chars[int(d) - 2] for d in (0, 1, 2, 3, 4, 5, 6, 7, 8, 9)]",
    "strs = [chars[int(d) - 2] for d in {0, 1, 2, 3, 4, 5, 6, 7, 8, 9}]",
    "strs = [chars[int(d) - 2] for d in ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9']]",
    "strs = [chars[int(d) - 2] for d in ('0', '1', '2', '3', '4', '5', '6', '7', '8', '9')]",
    "strs = [chars[int(d) - 2] for d in {'0', '1', '2', '3', '4', '5', '6', '7', '8', '9'}]",
    "strs = [chars[int(d) - 2] for d in ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9'][::-1]]",
    "strs = [chars[int(d) - 2] for d in reversed(['0', '1', '2', '3', '4', '5', '6', '7', '8', '9'])]",
    "strs = [chars[int(d) - 2] for d in digits]",
    "strs = [chars[int(d) - 2] for d in range(len(chars))]",
    "strs = [chars[int(d) - 2] for d in range(2, 7)]",
    "strs = [chars[int(d) - 2] for d in [0, 1, 2, 3, 4]]",
    "strs = [chars[int(d) - 2] for d in \"12345\"]",
    "strs = [chars[int(d) - 2] for d in (str(i) for i in range(1, 6))]",
    "strs = [chars[int(d) - 2] for d in (str(i) for i in [1, 2, 3, 4, 5])]",
    "strs = [chars[int(d) - 2] for d in (str(i) for i in range(5, 0, -1))]",
    "strs = [chars[int(d) - 2] for d in (str(i) for i in reversed(range(1, 6)))]",
    "strs = [chars[int(d) - 2] for d in (str(i) for i in reversed([5, 4, 3, 2, 1]))]",
    "strs = [chars[int(d) - 2] for d in range(len(chars))]",
    "strs = [chars[int(d) - 2] for d in range(len(strs))]",
    "strs = [chars[int(d) - 2] for d in range(len(d))]",
    "strs = [chars[int(d) - 2] for d in range(len(strs) + 1)]",
    "strs = [chars[int(d) - 2] for d in range(len(chars) - 1)]",
    "strs = [chars[int(d) - 2] for d in range(len(chars) * 2)]",
    "strs = [chars[int(d) - 2] for d in range(len(chars) // 2)]",
    "strs = [chars[int(d) - 2] for d in range(len(chars) % 3)]",
    "strs = [chars[int(d) - 2] for d in range(len(chars) ** 2)]",
    "strs = [chars[int(d) - 2] for d in range(len(chars) & 1)]",
    "strs = [chars[int(d) - 2] for d in range(len(chars))]",
    "strs = [chars[int(d) - 2] for d in range(10)]",
    "strs = [chars[int(d) - 2] for d in [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]]",
    "strs = [chars[int(d) - 2] for d in \"0123456789\"]",
    "strs = [chars[int(d) - 2] for d in (0, 1, 2, 3, 4, 5, 6, 7, 8, 9)]",
    "strs = [chars[int(d) - 2] for d in {0, 1, 2, 3, 4, 5, 6, 7, 8, 9}]",
    "strs = [chars[int(d) - 2] for d in {str(i) for i in range(10)}]",
    "strs = [chars[int(d) - 2] for d in {str(i) for i in range(2, 12)}]",
    "strs = [chars[int(d) - 2] for d in (str(i) for i in range(10))]",
    "strs = [chars[int(d) - 2] for d in (str(i) for i in range(2, 12))]",
    "strs = [chars[int(d) - 2] for d in range(10)]",
    "strs = [chars[int(d) - 2] for d in \"0123456789\"]",
    "strs = [chars[int(d) - 2] for d in (0, 1, 2, 3, 4, 5, 6, 7, 8, 9)]",
    "strs = [chars[int(d) - 2] for d in {-2, -1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9}]",
    "strs = [chars[int(d) - 2] for d in [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]]",
    "strs = [chars[int(d) - 2] for d in {'0', '1', '2', '3', '4', '5', '6', '7', '8', '9'}]",
    "strs = [chars[int(d) - 2] for d in {0, 1, 2, 3, 4, 5, 6, 7, 8, 9}]",
    "strs = [chars[int(d) - 2] for d in [str(num) for num in range(10)]]",
    "strs = [chars[int(d) - 2] for d in ('0', '1', '2', '3', '4', '5', '6', '7', '8', '9')]",
    "strs = [chars[int(d) - 2] for d in {'zero': 0, 'one': 1, 'two': 2, 'three': 3, 'four': 4, 'five': 5, 'six': 6, 'seven': 7, 'eight': 8, 'nine': 9}]"
  ],
  "num_code_blocks": 237
}
