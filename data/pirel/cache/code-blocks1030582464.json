{
  "template": "-__ if a * b < 0 else __",
  "lang": "py",
  "temperature": 0.7,
  "code_blocks": [
    "-1 if a * b < 0 else 1",
    "0 if a * b < 0 else 0",
    "True if a * b < 0 else False",
    "'Negative' if a * b < 0 else 'Positive'",
    "None if a * b < 0 else None",
    "[] if a * b < 0 else []",
    "{} if a * b < 0 else {}",
    "() if a * b < 0 else ()",
    "1.0 if a * b < 0 else 1.0",
    "object() if a * b < 0 else object()",
    "-1 if a * b < 0 else None",
    "-1 if a * b < 0 else False",
    "-1 if a * b < 0 else ''",
    "-1 if a * b < 0 else []",
    "-1 if a * b < 0 else {}",
    "-1 if a * b < 0 else 0",
    "-1 if a * b < 0 else 0.0",
    "-1 if a * b < 0 else ()",
    "-1 if a * b < 0 else set()",
    "-1 if a * b < 0 else frozenset()",
    "-1 if a * b < 0 else 1",
    "-0 if a * b < 0 else 0",
    "-100 if a * b < 0 else 100",
    "-999 if a * b < 0 else 999",
    "-42 if a * b < 0 else 42",
    "-1000 if a * b < 0 else 1000",
    "-99 if a * b < 0 else 99",
    "-50 if a * b < 0 else 50",
    "-10 if a * b < 0 else 10",
    "-5 if a * b < 0 else 5",
    "-1 if a * b < 0 else 1",
    "0 if a * b < 0 else 0",
    "False if a * b < 0 else True",
    "None if a * b < 0 else None",
    "\"Negative\" if a * b < 0 else \"Positive\"",
    "[1, 2, 3] if a * b < 0 else [4, 5, 6]",
    "{\"apple\": 1, \"banana\": 2} if a * b < 0 else {\"orange\": 3, \"mango\": 4}",
    "(1, 2, 3) if a * b < 0 else (4, 5, 6)",
    "lambda x: x + 1 if a * b < 0 else lambda x: x - 1",
    "1.23 if a * b < 0 else 4.56",
    "-1 if a * b < 0 else 1",
    "-0 if a * b < 0 else 0",
    "-100 if a * b < 0 else 100",
    "-42 if a * b < 0 else 42",
    "-999 if a * b < 0 else 999",
    "-7 if a * b < 0 else 7",
    "-5 if a * b < 0 else 5",
    "-1000 if a * b < 0 else 1000",
    "-17 if a * b < 0 else 17",
    "-9999 if a * b < 0 else 9999",
    "-1 if a * b < 0 else 1",
    "abs(a * b) if a * b < 0 else a * b",
    "0 if a * b < 0 else a * b",
    "abs(a * b) if a * b < 0 else 0",
    "1 if a * b < 0 else abs(a * b)",
    "abs(a * b) if a * b < 0 else -1",
    "a * b if a * b < 0 else -a * b",
    "-a * b if a * b < 0 else a * b",
    "-1 if a * b < 0 else abs(a * b)",
    "abs(a * b) if a * b < 0 else -1",
    "-1 if a * b < 0 else 1",
    "0 if a * b < 0 else 0",
    "None if a * b < 0 else None",
    "False if a * b < 0 else True",
    "'foo' if a * b < 0 else 'bar'",
    "[] if a * b < 0 else []",
    "{} if a * b < 0 else {}",
    "(1, 2) if a * b < 0 else (3, 4)",
    "lambda x: x**2 if a * b < 0 else lambda x: x**3",
    "sorted([1, 2, 3]) if a * b < 0 else sorted([3, 2, 1])",
    "-1 if a * b < 0 else 1",
    "-0.5 if a * b < 0 else 0.5",
    "-100 if a * b < 0 else 100",
    "-99999 if a * b < 0 else 99999",
    "-\"negative\" if a * b < 0 else \"positive\"",
    "-True if a * b < 0 else False",
    "-None if a * b < 0 else None",
    "-[1, 2, 3] if a * b < 0 else [4, 5, 6]",
    "-{\"x\": 1, \"y\": 2} if a * b < 0 else {\"x\": 3, \"y\": 4}",
    "-(\"apple\", \"banana\") if a * b < 0 else (\"carrot\", \"durian\")",
    "-a if a * b < 0 else b",
    "a if a * b < 0 else -b",
    "a if a * b < 0 else b",
    "b if a * b < 0 else -a",
    "b if a * b < 0 else a",
    "a if a * b < 0 else b",
    "-b if a * b < 0 else a",
    "a if a * b < 0 else b",
    "b if a * b < 0 else -a",
    "-b if a * b < 0 else a",
    "-1 if a * b < 0 else 1",
    "None if a * b < 0 else None",
    "True if a * b < 0 else False",
    "\"Negative\" if a * b < 0 else \"Positive\"",
    "0 if a * b < 0 else 0",
    "[] if a * b < 0 else []",
    "{} if a * b < 0 else {}",
    "float('inf') if a * b < 0 else float('-inf')",
    "(object(),) if a * b < 0 else (object(),)",
    "lambda: None if a * b < 0 else lambda: None",
    "-1 if a * b < 0 else 1",
    "0 if a * b < 0 else 1",
    "1 if a * b < 0 else 1",
    "-1 if a * b < 0 else 0",
    "0 if a * b < 0 else 0",
    "1 if a * b < 0 else 0",
    "-1 if a * b < 0 else -1",
    "0 if a * b < 0 else -1",
    "1 if a * b < 0 else -1",
    "-1 if a * b < 0 else a * b",
    "-1 if a * b < 0 else 1",
    "0 if a * b < 0 else 0",
    "None if a * b < 0 else None",
    "True if a * b < 0 else True",
    "False if a * b < 0 else False",
    "'a' if a * b < 0 else 'a'",
    "[] if a * b < 0 else []",
    "{} if a * b < 0 else {}",
    "() if a * b < 0 else ()",
    "1.0 if a * b < 0 else 1.0",
    "-1 if a * b < 0 else 1",
    "-0.5 if a * b < 0 else 0.5",
    "\"negative\" if a * b < 0 else \"positive\"",
    "True if a * b < 0 else False",
    "[1, 2, 3] if a * b < 0 else [4, 5, 6]",
    "None if a * b < 0 else \"Not negative\"",
    "(a + b) if a * b < 0 else (a - b)",
    "{1: 'one', 2: 'two'} if a * b < 0 else {3: 'three', 4: 'four'}",
    "0.01 if a * b < 0 else 0.001",
    "chr(65) if a * b < 0 else chr(66)",
    "-1 if a * b < 0 else 1",
    "0 if a * b < 0 else 0",
    "None if a * b < 0 else None",
    "'-' if a * b < 0 else ''",
    "False if a * b < 0 else True",
    "[1] if a * b < 0 else []",
    "() if a * b < 0 else ()",
    "{} if a * b < 0 else {}",
    "1.0 if a * b < 0 else 1.0",
    "object() if a * b < 0 else object()",
    "-1 if a * b < 0 else 1",
    "-42 if a * b < 0 else 42",
    "-100 if a * b < 0 else 100",
    "-999 if a * b < 0 else 999",
    "-0.5 if a * b < 0 else 0.5",
    "-3.14 if a * b < 0 else 3.14",
    "-\"negative\" if a * b < 0 else \"positive\"",
    "-\"left\" if a * b < 0 else \"right\"",
    "-True if a * b < 0 else False",
    "-None if a * b < 0 else None",
    "-a if a * b < 0 else b",
    "a if a * b < 0 else -b",
    "a if a * b < 0 else b * -1",
    "-a if a * b < 0 else b * -1",
    "a if a * b < 0 else -1 * b",
    "-a if a * b < 0 else -1 * b",
    "a if a * b < 0 else -b * 1",
    "-a if a * b < 0 else -b * 1",
    "a * 1 if a * b < 0 else -b",
    "-a * 1 if a * b < 0 else -b",
    "-1 if a * b < 0 else 1",
    "-0 if a * b < 0 else 0",
    "-False if a * b < 0 else False",
    "-None if a * b < 0 else None",
    "-\"\" if a * b < 0 else \"\"",
    "-[] if a * b < 0 else []",
    "-{} if a * b < 0 else {}",
    "-() if a * b < 0 else ()",
    "-0.0 if a * b < 0 else 0.0",
    "-0j if a * b < 0 else 0j",
    "-1 if a * b < 0 else 1",
    "0 if a * b < 0 else 0",
    "False if a * b < 0 else True",
    "'Negative' if a * b < 0 else 'Positive'",
    "None if a * b < 0 else None",
    "[] if a * b < 0 else []",
    "{} if a * b < 0 else {}",
    "() if a * b < 0 else ()",
    "1.0 if a * b < 0 else 1.0",
    "object() if a * b < 0 else object()",
    "-1 if a * b < 0 else 1",
    "None if a * b < 0 else None",
    "0 if a * b < 0 else 0",
    "True if a * b < 0 else True",
    "False if a * b < 0 else False",
    "'' if a * b < 0 else ''",
    "[] if a * b < 0 else []",
    "{} if a * b < 0 else {}",
    "() if a * b < 0 else ()",
    "object() if a * b < 0 else object()",
    "-1 if a * b < 0 else 1",
    "0 if a * b < 0 else 0",
    "None if a * b < 0 else None",
    "True if a * b < 0 else True",
    "False if a * b < 0 else False",
    "'-' if a * b < 0 else '+'",
    "[1] if a * b < 0 else [2]",
    "{'a': 1} if a * b < 0 else {'b': 2}",
    "(1,) if a * b < 0 else (2,)",
    "lambda x: x * -1 if a * b < 0 else lambda x: x * 1",
    "-1 if a * b < 0 else 1",
    "0 if a * b < 0 else 0",
    "True if a * b < 0 else False",
    "None if a * b < 0 else None",
    "'Negative' if a * b < 0 else 'Positive'",
    "[1, 2, 3] if a * b < 0 else []",
    "{'x': 1, 'y': 2} if a * b < 0 else {}",
    "(1, 2) if a * b < 0 else ()",
    "lambda x: x**2 if a * b < 0 else lambda x: x**3",
    "import math; math.sin if a * b < 0 else math.cos",
    "-1 if a * b < 0 else 1",
    "0 if a * b < 0 else 0",
    "None if a * b < 0 else None",
    "False if a * b < 0 else False",
    "'' if a * b < 0 else ''",
    "[] if a * b < 0 else []",
    "{} if a * b < 0 else {}",
    "() if a * b < 0 else ()",
    "1.0 if a * b < 0 else 1.0",
    "True if a * b < 0 else True",
    "-a if a * b < 0 else b",
    "a if a * b < 0 else -b",
    "a if a * b < 0 else b",
    "-a if a * b < 0 else -b",
    "b if a * b < 0 else a",
    "-b if a * b < 0 else a",
    "b if a * b < 0 else -a",
    "-b if a * b < 0 else -a",
    "a if a * b < 0 else a",
    "-b if a * b < 0 else b",
    "-1 if a * b < 0 else 1",
    "-0 if a * b < 0 else 0",
    "-2 if a * b < 0 else 2",
    "-100 if a * b < 0 else 100",
    "-999 if a * b < 0 else 999",
    "-42 if a * b < 0 else 42",
    "-7 if a * b < 0 else 7",
    "-5 if a * b < 0 else 5",
    "-1000 if a * b < 0 else 1000",
    "-10000 if a * b < 0 else 10000",
    "-1 if a * b < 0 else 1",
    "0 if a * b < 0 else 0",
    "None if a * b < 0 else None",
    "True if a * b < 0 else False",
    "\"True\" if a * b < 0 else \"False\"",
    "[1] if a * b < 0 else [2]",
    "(1,) if a * b < 0 else (2,)",
    "{} if a * b < 0 else {}",
    "1.0 if a * b < 0 else 2.0",
    "object() if a * b < 0 else object()",
    "-1 if a * b < 0 else 0",
    "-0 if a * b < 0 else 1",
    "-1 if a * b < 0 else 1",
    "-1 if a * b < 0 else 2",
    "-2 if a * b < 0 else 1",
    "-2 if a * b < 0 else 0",
    "0 if a * b < 0 else 1",
    "0 if a * b < 0 else -1",
    "1 if a * b < 0 else -1",
    "1 if a * b < 0 else 0",
    "-1 if a * b < 0 else 1",
    "0 if a * b < 0 else 0",
    "1 if a * b < 0 else 1",
    "True if a * b < 0 else False",
    "False if a * b < 0 else True",
    "None if a * b < 0 else None",
    "'' if a * b < 0 else ''",
    "[] if a * b < 0 else []",
    "{} if a * b < 0 else {}",
    "() if a * b < 0 else ()",
    "-1 if a * b < 0 else 1",
    "0 if a * b < 0 else 0",
    "True if a * b < 0 else False",
    "None if a * b < 0 else None",
    "\"negative\" if a * b < 0 else \"positive\"",
    "[1] if a * b < 0 else []",
    "{} if a * b < 0 else {}",
    "[1, 2, 3] if a * b < 0 else [4, 5, 6]",
    "(1, 2, 3) if a * b < 0 else (4, 5, 6)",
    "lambda x: x + 1 if a * b < 0 else lambda x: x - 1",
    "-1 if a * b < 0 else 1",
    "0 if a * b < 0 else 0",
    "1 if a * b < 0 else 1",
    "True if a * b < 0 else False",
    "False if a * b < 0 else True",
    "None if a * b < 0 else None",
    "'' if a * b < 0 else ''",
    "[] if a * b < 0 else []",
    "{} if a * b < 0 else {}",
    "() if a * b < 0 else ()",
    "-1 if a * b < 0 else 1",
    "0 if a * b < 0 else 0",
    "True if a * b < 0 else False",
    "'negative' if a * b < 0 else 'positive'",
    "None if a * b < 0 else None",
    "[] if a * b < 0 else []",
    "{1} if a * b < 0 else {1}",
    "1.0 if a * b < 0 else 1.0",
    "object() if a * b < 0 else object()",
    "lambda x: x if a * b < 0 else lambda x: x"
  ],
  "num_code_blocks": 300
}
