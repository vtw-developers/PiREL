{
  "template": "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[__])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
  "lang": "py",
  "temperature": 0.9,
  "code_blocks": [
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[6])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[7])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[8])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[6])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[7])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[8])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[6])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[7])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[8])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[6])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[7])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[8])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[6])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[7])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[8])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[6])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[7])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[8])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[9])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[6])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[7])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[8])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[9])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[6])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[7])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[8])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[6])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[6])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[7])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[8])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[9])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[6])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[7])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[8])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[len(t) - 1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[len(t) - 1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[6])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[7])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[8])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[9])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[6])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[7])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[8])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[9])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[6])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[7])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[8])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[6])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[7])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[8])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[6])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[7])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[8])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[9])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[6])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[7])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[8])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[6])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[7])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[8])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[6])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[7])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[8])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[9])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[len(t) - 1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[6])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[7])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[6])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[7])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[8])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[6])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[7])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[8])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[9])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[6])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[7])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[8])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[6])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[7])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[8])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[len(t) // 2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[::-1][0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[random.randint(0, len(t)-1)])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[random.choice(range(len(t)))])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[min(len(t)-1, 2)])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0] if t else None)\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1] if t else None)\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[random.choice([-1, 0])] if t else None)\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[len(t) - 1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[u])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[s])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[u+1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[i])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[len(candidates) - 1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[6])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[7])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[8])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[9])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[6])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[7])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[8])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[9])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[6])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[7])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[8])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[9])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[6])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[7])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[8])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[9])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[7])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[9])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[u])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[u])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i + 1, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[s])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[u])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, u, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[i])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, u, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[u])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i + 1, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[6])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[7])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[9])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[6])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[7])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[8])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[len(t) // 2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[u])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i+1, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[u-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-u])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i+1, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[6])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[7])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[8])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[9])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[6])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[7])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[8])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[9])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[u])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[s])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[t])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[len(t)-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[u+1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[6])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[7])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[8])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[9])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[6])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[7])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[8])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[6])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[7])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[8])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[9])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[6])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[7])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[8])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[6])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[7])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[8])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[6])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[7])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[8])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[9])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[6])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[7])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[8])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[6])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[7])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[8])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[9])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[len(t) - 1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[6])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[len(t)-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[s])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[u])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[__+1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[__-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[6])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[7])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[8])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[9])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[6])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[7])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[8])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[6])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[6])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[7])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[8])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[9])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[len(t) - 1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1:])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[len(t)-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1:])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[len(t) - 1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1:])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[len(t)-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1:])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[len(t)-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[len(t)-2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[len(t)-3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[6])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[9])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[7])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[len(t) // 2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[u])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[u+1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[s])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[s-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[6])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[7])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[8])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[6])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[7])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[8])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[9])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[u])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[s])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[*])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[u-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[u+1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[6])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[7])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[8])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[6])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[7])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[8])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[6])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[7])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[8])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[6])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[7])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[8])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[6])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[7])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[8])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[9])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[6])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[7])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[8])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[9])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[6])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[7])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[8])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[6])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[7])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[8])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[6])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[7])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[8])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[9])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[6])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[7])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[8])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[6])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[7])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[6])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[7])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[8])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[6])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[7])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[8])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[9])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[6])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[7])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[8])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[6])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[7])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[8])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[len(t)-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[u])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[s])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[6])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[7])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[8])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[9])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[6])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[7])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[8])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[9])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[6])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[7])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[8])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[9])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[6])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[7])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[8])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[6])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[7])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[8])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[6])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[7])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[8])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[6])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[7])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[8])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[6])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[7])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[8])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[9])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[6])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[7])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[8])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[9])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[len(t) - 1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\nans = []\ndfs(0, 0, [])\nreturn ans"
  ],
  "num_code_blocks": 900
}
