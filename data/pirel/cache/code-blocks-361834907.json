{
  "template": "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[__])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
  "lang": "py",
  "temperature": 1.2,
  "code_blocks": [
    "def dfs(s: int, u: int, t: list[str]):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s: int, u: int, t: list):\n    if s == target:\n        ans.append(t[len(t)-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s: int, u: int, t: list):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s: int, u: int, t: list[str]):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s: int, u, t):\n    if s == target:\n        ans.append(t[len(t)-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s: int, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u: int, t: list[str]):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u: int, t: list):\n    if s == target:\n        ans.append(t[len(t)-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u: int, t: list):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t: list[str]):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[u])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[s])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[t])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[len(t)])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "t.append(__)",
    "ans.append(__)",
    "return __",
    "t[__] = c",
    "t.insert(__, c)",
    "s = __",
    "if __ == target:",
    "if s > __:",
    "i = __",
    "range(__, len(candidates))",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[len(t)-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[int(len(t)/2)])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[6])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[7])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[8])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[9])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[len(t) - 1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[::-1][0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[::-1][1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[len(t) - 2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[::-1][-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[len(t) - 1][0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "Variant 1:\n        i\n\nVariant 2:\n        i - u\n\nVariant 3:\n        len(t)\n\nVariant 4:\n        c - c[index]\n\nVariant 5:\n        t[len(candidates)-1] - t.pop()\n\nVariant 6:\n        i + 1\n\nVariant 7:\n        c + t[0]\n\nVariant 8:\n        t.index(c)\n\nVariant 9:\n        i + u\n\nVariant 10:\n        len(candidates) - 1",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[6])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[7])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[8])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[9])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[6])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[7])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[8])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[9])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "dfs(s + c, i + 1, t)",
    "dfs(s - c, i, t)",
    "dfs(s * c, i, t)",
    "dfs(s / c, i, t)",
    "dfs(s % c, i, t)",
    "dfs(s ** c, i, t)",
    "dfs(s // c, i, t)",
    "dfs(s << c, i, t)",
    "dfs(s >> c, i, t)",
    "dfs(s & c, i, t)",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[len(t) - 1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[len(t) // 2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[u])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[6])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[7])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[6])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[7])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[8])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[9])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "# Variant 1\ndef dfs(s, u, t):\n    if s == target:\n        ans.append(t[len(t)-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "# Variant 2\ndef dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "# Variant 3\ndef dfs(s, u, t):\n    if s == target:\n        ans.append(t[u])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "# Variant 4\ndef dfs(s, u, t):\n    if s == target:\n        ans.append(t[i])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "# Variant 5\ndef dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "# Variant 6\ndef dfs(s, u, t):\n    if s == target:\n        ans.append(t[u-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "# Variant 7\ndef dfs(s, u, t):\n    if s == target:\n        ans.append(t[u+1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "# Variant 8\ndef dfs(s, u, t):\n    if s == target:\n        ans.append(t[i-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "# Variant 9\ndef dfs(s, u, t):\n    if s == target:\n        ans.append(t[i+1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "# Variant 10\ndef dfs(s, u, t):\n    if s == target:\n        ans.append(t)\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "t.append(__)",
    "i",
    "c",
    "len(candidates)",
    "u",
    "s",
    "i + 1",
    "candidates[i]",
    "t[-1]",
    "target",
    "t.append(i)",
    "t.append(u)",
    "t.append(s)",
    "t.append(c)",
    "t.append(target)",
    "t.append(s + target)",
    "t.append(candidates)",
    "t.append(len(candidates))",
    "t.append(u + 1)",
    "t.append(len(t))",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[6])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[7])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[8])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[9])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[u])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[len(candidates)-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[s])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[(len(candidates)-1)//2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[u + 1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[6])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[7])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[8])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[9])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "dfs(s + c, i + 1, t)",
    "dfs(s + c, i + 1, t[:])",
    "dfs(s + c, i + 1, [x for x in t])",
    "dfs(s + c, i + 1, list(t))",
    "dfs(s + c, i + 1, t.copy())",
    "dfs(s + c, i + 1, t + [c])",
    "dfs(s + c, i + 1, [*t, c])",
    "t = t + [c]\n        dfs(s + c, i + 1, t)\n        t.pop()",
    "new_t = t + [c]\n        dfs(s + c, i + 1, new_t)",
    "new_t = t[:]\n        new_t.append(c)\n        dfs(s + c, i + 1, new_t)",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[7])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[9])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[6])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[7])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[8])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[6])\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[7])\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[8])\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[9])\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "# Variant 1\ndef dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\n\n# Variant 2\ndef dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\n\n# Variant 3\ndef dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\n\n# Variant 4\ndef dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\n\n# Variant 5\ndef dfs(s, u, t):\n    if s == target:\n        ans.append(t[7])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\n\n# Variant 6\ndef dfs(s, u, t):\n    if s == target:\n        ans.append(t[-2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\n\n# Variant 7\ndef dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\n\n# Variant 8\ndef dfs(s, u, t):\n    if s == target:\n        ans.append(t[9])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\n\n# Variant 9\ndef dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\n\n# Variant 10\ndef dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])  # Variant 1: Fill hole with index 0\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])  # Variant 2: Fill hole with index 1\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])  # Variant 2: Fill hole with index 2\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[6])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[7])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[8])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[9])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[:])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[:])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop(0)",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[::-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t.copy())\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[:])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.extend([c])\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[:])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i + 1, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if t == []:\n        t = []\n        u = 0\n        s = 0\n    if s == target:\n        ans.append(t[:])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i + 1, t)\n        t.pop()\n    return ans",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[:])\n        return\n    if s > target:\n        return\n    if u>=len(candidates):\n        return\n    c = candidates[u]\n    t.append(c)\n    dfs(s + c, u, t)\n    t.pop()\n    dfs(s,u+1,t)",
    "def dfs(s, u, t=[]):\n    if s == target:\n        ans.append(t[:])\n        return\n    if s > target:\n        return\n    if u >= len(candidates):\n        return\n    c = candidates[u]\n    t.append(c)\n    dfs(s + c, u + 1, t)\n    t.pop()\n    dfs(s, u + 1, t)",
    "def dfs(s = 0, u = 0, t = []):\n    if s == target:\n        ans.append(t[:])\n        return\n    if s > target:\n        return\n    if u >= len(candidates):\n        return\n    c = candidates[u]\n    t.append(c)\n    dfs(s + c, u + 1, t)\n    t.pop()\n    dfs(s, u + 1, t)",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[6])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[7])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[8])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[9])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[u])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[i])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[idx])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[_])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[n])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(my_sum, u, t):\n    if my_sum == target:\n        ans.append(t[x])\n        return\n    if my_sum > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(my_sum + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[__index__])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[indx])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[___])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[6])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[7])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[8])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[9])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[i])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[s - target])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[len(t) - 1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[len(ans)])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[len(t)])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[s])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-u])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[i*u])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[i+u])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "t.append(__)",
    "t.extend(__)",
    "t += __",
    "t.insert(__)",
    "t.extend([__])",
    "t.insert(0, __)",
    "t.append([__])",
    "t.extend([__])",
    "t += [__]",
    "t.insert(0, __)",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[len(t) - 1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "ans.append(t[-1])",
    "ans.append(t[0])",
    "ans.append(t[u])",
    "ans.append(t[i])",
    "ans.append(t[-2])",
    "ans.append(t[len(t)-1])",
    "ans.append(t[len(t)//2])",
    "ans.append(t[i - 1])",
    "ans.append(t[i + 1])",
    "ans.append(u)",
    "ans.append(t[-1])",
    "ans.append(t[0])",
    "ans.append(t[len(t) - 1])",
    "ans.append(t[-2])",
    "ans.append(t[1])",
    "ans.append(t[len(t) - 2])",
    "ans.append(t[-3])",
    "ans.append(t[2])",
    "ans.append(t[len(t) - 3])",
    "ans.append(t[-4])",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[6])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[7])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[8])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[9])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[len(t) - 1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[10 % len(t)])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[u])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t)\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3//2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[len(t) - 1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[u])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[s])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[i])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[u])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\n\ndef dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\n\ndef dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\n\ndef dfs(s, u, t):\n    if s == target:\n        ans.append(t[s])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\n\ndef dfs(s, u, t):\n    if s == target:\n        ans.append(t[len(t)-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\n\ndef dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return \n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i + 1, t)\n        t.pop()\n\ndef dfs(s, u, t):\n    if s == target:\n        ans.append(t[u-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\n\ndef dfs(s, u, t):\n    if s == target:\n        ans.append(t[-2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\n\ndef dfs(s, u, t):\n    if s == target:\n        ans.append(t[u])\n        return\n    if s > target:\n        return\n    for i in range(u+1, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\n\ndef dfs(s, u, t):\n    if s == target:\n        ans.append(t[u+1])\n        return\n    if s > target:\n        return\n    for i in range(u+2, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[len(t) - 1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[u])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[s])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[len(t)-1])\n        return\n    if s > target:\n        return\n    for i in range(u+1, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[u])\n        return\n    if s > target:\n        return\n    for i in range(u+1, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u+1, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[s])\n        return\n    if s > target:\n        return\n    for i in range(u+1, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[s+1])\n        return\n    if s > target:\n        return\n    for i in range(u+1, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[s+2])\n        return\n    if s > target:\n        return\n    for i in range(u+1, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[len(t)])\n        return\n    if s > target:\n        return\n    for i in range(u+1, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u+1, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u+1, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[u+1])\n        return\n    if s > target:\n        return\n    for i in range(u+1, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[6])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[7])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[8])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[9])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[u])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[i])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t)\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-u])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[i+1])\n        return\n    if s > target:\n        return\n    for i in range(u+1, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[u-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[u-2])\n        return\n    if s > target:\n        return\n    for i in range(u+1, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[i+2])\n        return\n    if s > target:\n        return\n    for i in range(u+2, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "t.append(__)",
    "__.append(c)",
    "t.append(___)",
    "__ = c",
    "__ += c",
    "__ -= c",
    "__ *= c",
    "__ //= c",
    "__ %= c",
    "__ **= c",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[u])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[len(t)//2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[len(candidates)-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[:u+1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[s])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[6])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[7])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[8])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[9])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[6])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[7])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[8])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[9])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[u])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[s])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[len(t) // 2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[10])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[u+1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[s-2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[u])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[s])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[u+1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[u-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[len(t)-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(cand)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[len(t)-2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[len(t)-3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[len(t)//2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[6])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[7])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[8])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[9])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[6])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[7])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[8])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[9])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[u])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[s])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[t])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[i])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[len(candidates)])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[u + 1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[c])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[ans])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n\n    if s > target:\n        return\n\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n\n    if s > target:\n        return\n\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n\n    if s > target:\n        return\n\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n\n    if s > target:\n        return\n\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n\n    if s > target:\n        return\n\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n\n    if s > target:\n        return\n\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[6])\n        return\n\n    if s > target:\n        return\n\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[7])\n        return\n\n    if s > target:\n        return\n\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[8])\n        return\n\n    if s > target:\n        return\n\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[9])\n        return\n\n    if s > target:\n        return\n\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[u])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[s])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[u+1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[s-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[u-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[i])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[len(t)-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[6])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[7])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[8])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[9])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[i])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[c])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[s])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[target])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[ans])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[len])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[range])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[pop])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[append])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[candidates])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[9])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[::-1][0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[::-1][-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1:2][0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1:2][-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-2:])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0:2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2:])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[:-2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[:2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[6])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[7])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[8])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[9])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "t.append(i)",
    "t.append(u)",
    "t.append(s)",
    "t.append(c)",
    "t.append(len(candidates))",
    "t.append(target)",
    "t.append(ans[-1])",
    "t.append(u + i)",
    "t.append(s-c)s",
    "t.append(i * u)",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[10])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[s])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[u])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[u-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(len(t)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[u])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[i])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[i])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, len(t), t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[u])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, len(t), t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[__])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, len(t), t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[u])\n        return\n    if s > target:\n        return\n    for __ in range(u, len(candidates)):\n        c = candidates[__]\n        t.append(c)\n        dfs(s + c, len(t), t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans[__].append(t[u])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, len(t), t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[__].pop(u))\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, len(t), t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[__])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.insert(u, c)\n        dfs(s + int(c), len(t), t)\n        t.pop(u)",
    "def dfs(s, u, t):\n    if s == target:\n        _.append(t[u])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, len(t), t)\n        t.pop()",
    "# Variant 1\ndef dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "# Variant 2\ndef dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "# Variant 3\ndef dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "# Variant 4\ndef dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "# Variant 5\ndef dfs(s, u, t):\n    if s == target:\n        ans.append(t[-2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "# Variant 6\ndef dfs(s, u, t):\n    if s == target:\n        ans.append(t[-3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "# Variant 7\ndef dfs(s, u, t):\n    if s == target:\n        ans.append(t[u])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "# Variant 8\ndef dfs(s, u, t):\n    if s == target:\n        ans.append(t[u+1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "# Variant 9\ndef dfs(s, u, t):\n    if s == target:\n        ans.append(t[u+2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "# Variant 10\ndef dfs(s, u, t):\n    if s == target:\n        ans.append(t[i])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "t[-1]",
    "t[len(t)-1]",
    "t[len(t) - 1]",
    "t[-1:]",
    "t[-1:]",
    "t[-1:]",
    "t[len(t)-1]",
    "t[::-1][0]",
    "t[:][-1]",
    "t[-1:]",
    "# Variant 1\ndef dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\n\n# Variant 2\ndef dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\n\n# Variant 3\ndef dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\n\n# Variant 4\ndef dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\n\n# Variant 5\ndef dfs(s, u, t):\n    if s == target:\n        ans.append(t[u - 1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\n\n# Variant 6\ndef dfs(s, u, t):\n    if s == target:\n        ans.append(t[u + 1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\n\n# Variant 7\ndef dfs(s, u, t):\n    if s == target:\n        ans.append(t[u])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\n\n# Variant 8\ndef dfs(s, u, t):\n    if s == target:\n        ans.append(t[-2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\n\n# Variant 9\ndef dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\n\n# Variant 10\ndef dfs(s, u, t):\n    if s == target:\n        ans.append(t[-3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[u])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[i])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[len(t)-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[10])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[6])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[7])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[8])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[9])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "ans.append(t[-1])",
    "ans.append(t[0])",
    "ans.append(t[1])",
    "ans.append(t[-2])",
    "ans.append(t[len(t)-1])",
    "ans.append(t[u])",
    "ans.append(t[i])",
    "ans.append(t[u+1])",
    "ans.append(t[i-1])",
    "ans.append(t[u-1])",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[7])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[9])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[6])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[6])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[7])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[8])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[9])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "ans.append(t[-1])",
    "ans.append(t[0])",
    "ans.append(t[1])",
    "ans.append(t[2])",
    "ans.append(t[u])",
    "ans.append(t[len(t)-1])",
    "ans.append(t[len(t)//2])",
    "ans.append(t[u-1])",
    "ans.append(t[u+1])",
    "ans.append(t[-2])",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[len(t)-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[len(t)-2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[u])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[s])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[u])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[s])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-u])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[u-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2*u])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[target])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[len(candidates)-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(t[-1] + c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(s)\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(u)\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t)\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        _[0] = c\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[u])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        _ = candidates[i]\n        t.append(_)\n        dfs(s + _, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[u])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        _ = candidates[i]\n        _ += s\n        dfs(s + _, i, t)\n        t.pop()",
    "def dfs(_, u, t):\n    if s == target:\n        ans.append(t[u])\n        return\n    if s > target:\n        return\n    for i in _:\n        c = candidates[i]\n        t.append(_)\n        dfs(s + _, i, _)\n        t.pop(0)",
    "def dfs(_, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > _:\n        return\n    for i in range(u, len(t)):\n        _[0] = t[i]\n        dfs(s + t[i], i, _[1:])",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "t[__]",
    "t[0]",
    "t[1]",
    "t[-1]",
    "t[len(t)-1]",
    "t[len(t)-2]",
    "t[::-1][0]",
    "t[::-1][1]",
    "t[0:2][0]",
    "t[0:2][1]",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[9])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "# Variant 1\ndef dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\n\n# Variant 2\ndef dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\n\n# Variant 3\ndef dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\n\n# ... and so on up to Variant 10",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[u])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[i])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[len(candidates)-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[u-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[u+1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[10])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[100])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[len(t)-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[u])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[s])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[t])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[c])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[len(t)-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t)\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[i])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[u+1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[6])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[7])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[8])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[9])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[6])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[7])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[8])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[9])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[u])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[s])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[u][s])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[u][s])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i][s]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1][-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0][0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0][u])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0][s])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()"
  ],
  "num_code_blocks": 821
}
