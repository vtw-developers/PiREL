{
  "template": "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[__])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
  "lang": "py",
  "temperature": 0.8,
  "code_blocks": [
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[-1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[len(t) - 1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[9])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[-2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[len(t) // 2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[u])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[6])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[8])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[9])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\n\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[u])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\n\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[u])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\n\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[u])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\n\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[u])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\n\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[u])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\n\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[u])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\n\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[u])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\n\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[u])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\n\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[u])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\n\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[u])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[6])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[8])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[9])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[:])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[:])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, {})\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[:])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, ())\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[:])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, None)\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[:])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, 0)\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[:])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, 1)\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[:])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, \"\")\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[:])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, \"hello\")\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[:])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [1, 2, 3])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[:])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, {1: 'a', 2: 'b'})\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[6])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[8])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[9])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[6])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[8])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[9])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[u])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[-1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[6])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[-2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[u])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[u])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(1, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[len(nums)])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[u])\n        for i in range(0, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[u])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071(i)\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[u])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071(i, t)\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[u])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071(i, nums)\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[u])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071(i, ans)\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[u])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071(i, dfs)\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[-1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[9])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[99])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[-5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[6])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[8])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[9])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[6])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[8])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[9])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[6])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[8])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[9])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[6])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[8])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[9])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[6])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[8])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[9])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t)\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[u])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[i])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[-1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[42])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[999])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[None])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[u])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[6])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[8])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[6])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[8])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[9])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[u])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[u])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(1, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(1, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[u])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [0])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [0])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[u])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(1, [0])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(1, [0])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[u])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [1])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [1])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[6])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[8])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[9])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[6])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[8])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[9])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[6])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[8])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[9])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[6])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[8])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[9])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[6])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[8])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[9])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t + [nums[u]])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t)\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[:])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t)\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t)\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t + [nums[u]])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[:])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t + [nums[u]])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[:])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t)\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import List\n\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import List\n\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import List\n\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import List\n\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import List\n\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import List\n\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import List\n\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[6])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import List\n\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import List\n\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[8])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import List\n\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[9])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[6])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[8])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[9])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[nums[i]])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[nums[u]])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[i])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[u])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[i])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[nums[u]])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[i])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[nums[i]])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[i])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[u])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[6])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[8])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[9])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[6])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[8])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[9])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[6])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[8])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[9])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[6])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[8])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[9])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[-1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[42])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[999])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[-999])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[123456])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[54321])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[6])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[8])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[9])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[-1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[6])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[8])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[6])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[8])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[9])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[6])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[8])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[9])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "# Variant 1\nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "# Variant 2\nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "# Variant 3\nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "# Variant 4\nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "# Variant 5\nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "# Variant 6\nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "# Variant 7\nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[6])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "# Variant 8\nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "# Variant 9\nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[8])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "# Variant 10\nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[9])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[u])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[6])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[8])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[6])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[8])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[9])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[-1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[8])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[10])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[15])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[20])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[25])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[30])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[u])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[len(nums)])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[u + 1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[-1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[len(t) - 1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[u - 1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[len(nums) - 1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[6])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[8])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[9])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[6])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[8])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[9])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[-1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[u])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[-2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[-3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[6])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[8])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[9])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[u])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[6])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[8])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[6])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[8])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[9])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[6])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[8])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[9])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[6])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[8])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[9])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[6])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[8])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[9])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[len(t)-1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[-1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[-2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[-3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[u])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for __ in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[-1])\n        for i in range(__, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[-2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[len(t)-1])\n        for i in range(u, __):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[len(t)-2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, __):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, __):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[6])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[8])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[9])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[len(t)-1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[u])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[-1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[42])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[999])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1000000])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[-999])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[-42])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[6])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[8])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[9])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[u])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[t])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[-1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[100])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[-100])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[-3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[6])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[8])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[9])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[6])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[8])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[9])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[6])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[8])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[9])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[u])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[u])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[u])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[u])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[u])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[u])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[u])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[u])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[u])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[u])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[6])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[8])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[9])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[6])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[8])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[9])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[u])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[-1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[len(t)-1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[-1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[6])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[8])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[9])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import List\ndef subsetsWithDup(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[u])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import List\ndef subsetsWithDup(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[u])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(1, [])\n    return ans",
    "from typing import List\ndef subsetsWithDup(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[u])\n        for i in range(u + 1, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import List\ndef subsetsWithDup(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[u])\n        for i in range(u + 1, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(1, [])\n    return ans",
    "from typing import List\ndef subsetsWithDup(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[u])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [0])\n    return ans",
    "from typing import List\ndef subsetsWithDup(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[u])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(1, [0])\n    return ans",
    "from typing import List\ndef subsetsWithDup(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[u])\n        for i in range(u + 1, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [0])\n    return ans",
    "from typing import List\ndef subsetsWithDup(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[u])\n        for i in range(u + 1, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(1, [0])\n    return ans",
    "from typing import List\ndef subsetsWithDup(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[u])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [1])\n    return ans",
    "from typing import List\ndef subsetsWithDup(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[u])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(1, [1])\n    return ans",
    "# Variant 1\n### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "# Variant 2\n### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "# Variant 3\n### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "# Variant 4\n### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "# Variant 5\n### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "# Variant 6\n### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "# Variant 7\n### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[6])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "# Variant 8\n### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "# Variant 9\n### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[8])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "# Variant 10\n### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[9])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[u])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[6])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[8])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[6])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[8])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[9])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[u])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[len(nums)])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[u])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[len(nums)-1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[u])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[len(nums)-1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[u])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[len(nums)])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[u])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[len(nums)-1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[6])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[8])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[9])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[u])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[-1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[6])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[6])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[8])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[9])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[u])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[6])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[8])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[6])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[8])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[9])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[6])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[8])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[9])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[6])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[8])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[9])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[6])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[8])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[9])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[6])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[8])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[9])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import List\n\ndef subsetsWithDup(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[u])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import List\n\ndef subsetsWithDup(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[u])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import List\n\ndef subsetsWithDup(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[u])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import List\n\ndef subsetsWithDup(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[u])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import List\n\ndef subsetsWithDup(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[u])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import List\n\ndef subsetsWithDup(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[u])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import List\n\ndef subsetsWithDup(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[u])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import List\n\ndef subsetsWithDup(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[u])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import List\n\ndef subsetsWithDup(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[u])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import List\n\ndef subsetsWithDup(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[u])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[6])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[8])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[9])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[6])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[8])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[9])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[6])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[8])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[9])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[6])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[8])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[9])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[6])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[8])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[9])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[6])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[8])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[9])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[6])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[8])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[9])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[-1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[10])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[100])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[999])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[9999])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[-2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[-3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[6])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[8])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[9])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[6])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[8])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[9])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[-1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[6])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[8])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[6])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[8])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[9])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[6])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[8])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[9])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[6])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[8])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[9])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[6])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[8])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[9])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[6])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[8])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[9])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[-1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[6])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[8])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[6])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[8])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[9])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[6])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[8])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[9])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[6])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[8])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[9])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[6])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[8])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[9])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[6])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[8])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[9])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[6])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[8])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[9])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[:])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[:])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[:])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[:])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[:])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[:])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[:])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[:])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[:])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[:])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[6])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[8])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[9])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t + [nums[u]])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t + [u])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t + [nums[i]])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t + [nums[u]])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort(reverse=True)\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t + [nums[u]])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [1])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t + [nums[u]])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(1, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t + [nums[u]])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(-1, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t + [nums[u]])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [0])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t + [nums[u]])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, ['a'])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t + [nums[u]])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [None])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[6])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[8])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[9])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[6])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[8])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[9])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[6])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[8])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[9])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[6])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[8])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[9])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[6])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[8])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[9])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[6])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[8])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[9])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[u])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[6])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[8])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[6])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[8])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[9])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[u])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[u])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(1, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(1, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [1])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[u])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [1])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(1, [1])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[u])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(1, [1])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [1, 2])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[u])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [1, 2])\n    return ans",
    "from typing import List\n\n\ndef subsetsWithDup(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[u])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import List\n\n\ndef subsetsWithDup(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import List\n\n\ndef subsetsWithDup(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import List\n\n\ndef subsetsWithDup(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import List\n\n\ndef subsetsWithDup(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[len(nums) - 1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import List\n\n\ndef subsetsWithDup(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[-1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import List\n\n\ndef subsetsWithDup(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort(reverse=True)\n    dfs(0, [])\n    return ans",
    "from typing import List\n\n\ndef subsetsWithDup(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort(reverse=True)\n    dfs(0, [])\n    return ans",
    "from typing import List\n\n\ndef subsetsWithDup(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort(reverse=True)\n    dfs(0, [])\n    return ans",
    "from typing import List\n\n\ndef subsetsWithDup(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[len(nums) - 1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort(reverse=True)\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t + [nums[u]])\n        for i in range(u, len(nums)):\n            dfs(i + 1, t + [nums[u]])\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t + [nums[u]])\n        for i in range(u + 1, len(nums)):\n            dfs(i, t + [nums[u]])\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t + [u])\n        for i in range(u, len(nums)):\n            dfs(i + 1, t + [u])\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t + [u])\n        for i in range(u + 1, len(nums)):\n            dfs(i, t + [u])\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[nums[u]])\n        for i in range(u, len(nums)):\n            dfs(i + 1, t[nums[u]])\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[nums[u]])\n        for i in range(u + 1, len(nums)):\n            dfs(i, t[nums[u]])\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(nums[t])\n        for i in range(u, len(nums)):\n            dfs(i + 1, nums[t])\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(nums[t])\n        for i in range(u + 1, len(nums)):\n            dfs(i, nums[t])\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t)\n        for i in range(u, len(nums)):\n            dfs(i + 1, t)\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t)\n        for i in range(u + 1, len(nums)):\n            dfs(i, t)\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[-1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[6])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[8])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[6])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[8])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[9])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[-1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[42])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[len(t) // 2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[-2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[u])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[u + 1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[u - 1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[u % len(t)])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[6])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[8])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[9])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[6])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[8])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[9])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[6])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[8])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[9])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[nums[i]])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[i])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[u])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t)\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[len(nums)])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[len(t)-1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[-1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1:])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[:-1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[6])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[8])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[9])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[6])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[8])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[9])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[6])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[8])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[9])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[6])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[8])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[9])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[6])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[8])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[9])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[6])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[8])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[9])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[i])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[u])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[n])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[-1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[None])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[True])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[False])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1.23])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[6])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[8])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[9])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[6])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[8])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[9])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[6])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[8])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[9])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[6])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[8])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[9])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\n\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t)\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\n\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[u])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\n\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t)\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, nums)\n    return ans",
    "from typing import *\n\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[u])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, nums)\n    return ans",
    "from typing import *\n\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t)\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, nums[:])\n    return ans",
    "from typing import *\n\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[u])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, nums[:])\n    return ans",
    "from typing import *\n\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t)\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    temp = nums[:]\n    temp.sort()\n    dfs(0, temp)\n    return ans",
    "from typing import *\n\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[u])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    temp = nums[:]\n    temp.sort()\n    dfs(0, temp)\n    return ans",
    "from typing import *\n\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t)\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    temp = nums[:]\n    temp.sort()\n    dfs(0, temp[:])\n    return ans",
    "from typing import *\n\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[u])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    temp = nums[:]\n    temp.sort()\n    dfs(0, temp[:])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[6])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[8])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[9])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[6])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[8])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[9])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\n\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\n\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\n\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\n\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\n\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\n\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\n\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[6])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\n\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\n\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[8])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\n\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[9])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[6])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[8])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[9])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[6])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[8])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[9])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[6])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[8])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[9])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[u])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[6])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[8])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[6])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[8])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[9])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[6])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[8])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[9])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[-1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[-2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[-3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[-4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[-5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[u])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[len(nums)])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[u-1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[len(t)-1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[t[u]])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[t[0]])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[len(nums)-1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[len(t)-u])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[t[len(nums)-1]])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[6])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[8])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[9])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[u])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[6])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[8])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\n\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\n\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\n\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\n\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\n\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\n\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\n\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[6])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\n\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\n\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[8])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\n\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[9])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans"
  ],
  "num_code_blocks": 1500
}
