{
  "template": "if s == target:\n    ans.append(t[__])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
  "lang": "py",
  "temperature": 0.9,
  "code_blocks": [
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[6])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[u])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[10])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[20])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[999])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[6])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[7])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[8])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[len(t) - 1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[6])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[7])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[8])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[9])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[6])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[7])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[8])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[u])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[6])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[7])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[6])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[7])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[8])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[9])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[7])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[9])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[6])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[7])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[7])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[9])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[6])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[8])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[len(t)-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[6])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[7])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[8])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[6])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[7])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[8])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[6])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[7])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[8])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[9])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[6])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[7])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[8])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-6])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[i])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[u])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[s])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[100])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[len(candidates)-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-u])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[6])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[7])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[8])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[6])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[6])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[7])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[8])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[6])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[7])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[8])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[6])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[7])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[8])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[6])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[7])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[8])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[10])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[7])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[8])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[9])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[6])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[7])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[8])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[6])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[7])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[8])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "__ = 0",
    "__ = 1",
    "__ = 2",
    "__ = len(candidates)",
    "__ = u",
    "__ = s",
    "__ = target",
    "__ = c",
    "__ = ans",
    "__ = t",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[6])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[7])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[8])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[6])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[7])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[6])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[7])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[8])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[7])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[::-1][0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2:5][1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0:3][-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4:7][0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5:][0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[:4][-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[6])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[7])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[8])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[u])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[u + 1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[u - 1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[6])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[7])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[8])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[9])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[6])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[10])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[123])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-10])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[100])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[7])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[10])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[13])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[15])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[17])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[10])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[7])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[9])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[8])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[6])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[7])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[8])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[6])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[7])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[8])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[6])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[7])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[8])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[len(t) - 1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i + 1, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u + 1, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[6])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[7])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[6])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[7])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[8])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[6])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[7])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[8])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[6])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[7])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[8])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[6])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[7])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[8])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[6])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[6])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[7])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[8])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[6])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[7])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[8])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[6])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[7])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[8])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[6])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[7])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[8])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[7])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[6])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[7])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[8])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[u])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[6])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[7])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[8])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[6])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[7])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[u])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[s])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[s + 1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[i])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[len(t)-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[i + u])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[__])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[i])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[s])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[c])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[len(t)-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[target])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[6])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[7])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[8])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[10])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[7])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[8])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[u])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[len(t) - 1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i+1, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i+1, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i+1, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i+1, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[7])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[8])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[9])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[6])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[7])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[9])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[6])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[8])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[len(t)-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[6])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()"
  ],
  "num_code_blocks": 899
}
