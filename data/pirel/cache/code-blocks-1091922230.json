{
  "template": "[[__] * (n + 1) for _ in range(m + 1)]",
  "lang": "py",
  "temperature": 1.1,
  "code_blocks": [
    "# Variant 1\n[[None] * (n + 1) for _ in range(m + 1)]\n\n# Variant 2\n[[''] * (n + 1) for _ in range(m + 1)]\n\n# Variant 3\n[[0] * (n + 1) for _ in range(m + 1)]\n\n# Variant 4\n[[] * (n + 1) for _ in range(m + 1)]\n\n# Variant 5\n[{} * (n + 1) for _ in range(m + 1)]\n\n# Variant 6\n[() * (n + 1) for _ in range(m + 1)]\n\n# Variant 7\n[set() * (n + 1) for _ in range(m + 1)]\n\n# Variant 8\n[[False] * (n + 1) for _ in range(m + 1)]\n\n# Variant 9\n[[0.0] * (n + 1) for _ in range(m + 1)]\n\n# Variant 10\n[dict() * (n + 1) for _ in range(m + 1)]",
    "[None] * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[0] * (n + 1) for _ in range(m + 1)]",
    "[True] * (n + 1) for _ in range(m + 1)]",
    "[\"unknown\"] * (n + 1) for _ in range(m + 1)]",
    "[{}] * (n + 1) for _ in range(m + 1)]",
    "[set()] * (n + 1) for _ in range(m + 1)]",
    "[[[]] * (n + 1) for _ in range(m + 1)]",
    "[(lambda: None)] * (n + 1) for _ in range(m + 1)]",
    "[object()] * (n + 1) for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1) for _ in range(m + 1)]",
    "[[[]] * (n + 1) for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[[{}] * (n + 1) for _ in range(m + 1)]",
    "[[True] * (n + 1) for _ in range(m + 1)]",
    "[[0.0] * (n + 1) for _ in range(m + 1)]",
    "[[[]] * (n + 1) for _ in range(m + 1)]",
    "[[()]* (n + 1) for _ in range(m + 1)]",
    "[[-1] * (n + 1) for _ in range(m + 1)]",
    "[[False] * (n + 1) for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1) for _ in range(m + 1)]",
    "[[[]] * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[[\"\"] * (n + 1) for _ in range(m + 1)]",
    "[{} * (n + 1) for _ in range(m + 1)]",
    "[{}] * (n + 1) for _ in range(m + 1)",
    "[0.0 * (n + 1) for _ in range(m + 1)]",
    "[True * (n + 1) for _ in range(m + 1)]",
    "[()] * (n + 1) for _ in range(m + 1)",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[] * (n + 1) for _ in range(m + 1)]",
    "[0 * (n + 1) for _ in range(m + 1)]",
    "['' * (n + 1) for _ in range(m + 1)]",
    "[False * (n + 1) for _ in range(m + 1)]",
    "[True * (n + 1) for _ in range(m + 1)]",
    "['foo' * (n + 1) for _ in range(m + 1)]",
    "[str() * (n + 1) for _ in range(m + 1)]",
    "[n * (n + 1) for _ in range(m + 1)]",
    "[object() * (n + 1) for _ in range(m + 1)]",
    "[[] * (n + 1) for _ in range(m + 1)]",
    "[[] for _ in range(m + 1)]",
    "[[] * n for _ in range(m + 1)]",
    "[[] * (n + 1) for _ in range(m)]",
    "[[] * (n + 1) for _ in range(m)]",
    "[[] for _ in range(m)]",
    "[[] * n for _ in range(m)]",
    "[[] * (n + 1) for _ in range(m + 1)]",
    "[[] for _ in range(m)]",
    "[[] * n for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[[[]] * (n + 1) for _ in range(m + 1)]",
    "[[True] * (n + 1) for _ in range(m + 1)]",
    "[[False] * (n + 1) for _ in range(m + 1)]",
    "[[{}] * (n + 1) for _ in range(m + 1)]",
    "[[set()] * (n + 1) for _ in range(m + 1)]",
    "[[()] * (n + 1) for _ in range(m + 1)]",
    "[[\"undefined\"] * (n + 1) for _ in range(m + 1)]",
    "[['A'] * (n + 1) for _ in range(m + 1)]",
    "[[1] * (n + 1) for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[['abc'] * (n + 1) for _ in range(m + 1)]",
    "[[(x, y)] * (n + 1) for _ in range(m + 1)]",
    "[[{}] * (n + 1) for _ in range(m + 1)]",
    "[[True] * (n + 1) for _ in range(m + 1)]",
    "[[float('inf')] * (n + 1) for _ in range(m + 1)]",
    "[[f(x)] * (n + 1) for _ in range(m + 1)]",
    "[['x' * (i + j)] * (n + 1) for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[{} * (n + 1) for _ in range(m + 1)]",
    "[[True] * (n + 1) for _ in range(m + 1)]",
    "[[[]] * (n + 1) for _ in range(m + 1)]",
    "[[() * (n + 1)] * (n + 1) for _ in range(m + 1)]",
    "[[set()] * (n + 1) for _ in range(m + 1)]",
    "[[0.0] * (n + 1) for _ in range(m + 1)]",
    "[['placeholder'] * (n + 1) for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1) for _ in range(m + 1)]",
    "[[] * (n + 1) for _ in range(m + 1)]",
    "[{} * (n + 1) for _ in range(m + 1)]",
    "['' * (n + 1) for _ in range(m + 1)]",
    "[() * (n + 1) for _ in range(m + 1)]",
    "[0.0 * (n + 1) for _ in range(m + 1)]",
    "[[True] * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[[[]] * (n + 1) for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1) for _ in range(m + 1)]",
    "[[True] * (n + 1) for _ in range(m + 1)]",
    "[[\"\"] * (n + 1) for _ in range(m + 1)]",
    "[[[]] * (n + 1) for _ in range(m + 1)]",
    "[{}] * (n + 1) for _ in range(m + 1)]",
    "[set()] * (n + 1) for _ in range(m + 1)]",
    "[{None}] * (n + 1) for _ in range(m + 1)]",
    "[(lambda: None)] * (n + 1) for _ in range(m + 1)]",
    "[(lambda i: i * 2)] * (n + 1) for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[[[]] * (n + 1) for _ in range(m + 1)]",
    "[[{}] * (n + 1) for _ in range(m + 1)]",
    "[[set()] * (n + 1) for _ in range(m + 1)]",
    "[[False] * (n + 1) for _ in range(m + 1)]",
    "[[True] * (n + 1) for _ in range(m + 1)]",
    "[[0.0] * (n + 1) for _ in range(m + 1)]",
    "[[()] * (n + 1) for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1) for _ in range(m + 1)]",
    "[[] * (n + 1) for _ in range(m + 1)]",
    "[{} * (n + 1) for _ in range(m + 1)]",
    "[[True] * (n + 1) for _ in range(m + 1)]",
    "[() * (n + 1) for _ in range(m + 1)]",
    "[[{}] * (n + 1) for _ in range(m + 1)]",
    "[13 * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[1.0 * (n + 1) for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1) for _ in range(m + 1)]",
    "[[[]] * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[['Hello'] * (n + 1) for _ in range(m + 1)]",
    "[[True] * (n + 1) for _ in range(m + 1)]",
    "[[False] * (n + 1) for _ in range(m + 1)]",
    "[[0.0] * (n + 1) for _ in range(m + 1)]",
    "[[{}] * (n + 1) for _ in range(m + 1)]",
    "[['a', 'b', 'c'] * (n + 1) for _ in range(m + 1)]",
    "# Variant 1\n[[None] * (n + 1) for _ in range(m + 1)]\n\n# Variant 2\n[[0] * (n + 1) for _ in range(m + 1)]\n\n# Variant 3\n[[[]] * (n + 1) for _ in range(m + 1)]\n\n# Variant 4\n[[''] * (n + 1) for _ in range(m + 1)]\n\n# Variant 5\n[[True] * (n + 1) for _ in range(m + 1)]\n\n# Variant 6\n[[{}] * (n + 1) for _ in range(m + 1)]\n\n# Variant 7\n[[set()] * (n + 1) for _ in range(m + 1)]\n\n# Variant 8\n[[0.0] * (n + 1) for _ in range(m + 1)]\n\n# Variant 9\n[[()] * (n + 1) for _ in range(m + 1)]\n\n# Variant 10\n[[object()] * (n + 1) for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[] * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[{} * (n + 1) for _ in range(m + 1)]",
    "[[False] * (n + 1) for _ in range(m + 1)]",
    "[[0.0] * (n + 1) for _ in range(m + 1)]",
    "[[()] * (n + 1) for _ in range(m + 1)]",
    "[['a'] * (n + 1) for _ in range(m + 1)]",
    "[object() * (n + 1) for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1) for _ in range(m + 1)]",
    "[[] * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[set() * (n + 1) for _ in range(m + 1)]",
    "[{} * (n + 1) for _ in range(m + 1)]",
    "[() * (n + 1) for _ in range(m + 1)]",
    "[dict() * (n + 1) for _ in range(m + 1)]",
    "['placeholder' * (n + 1) for _ in range(m + 1)]",
    "[10/2 * (n + 1) for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1) for _ in range(m + 1)]",
    "[[[]] * (n + 1) for _ in range(m + 1)]",
    "[[{}] * (n + 1) for _ in range(m + 1)]",
    "[[False] * (n + 1) for _ in range(m + 1)]",
    "[[' ' for _ in range(n + 1)] for _ in range(m + 1)]",
    "[[0.0] * (n + 1) for _ in range(m + 1)]",
    "[[True] * (n + 1) for _ in range(m + 1)]",
    "[['Hello World'] * (n + 1) for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1) for _ in range(m + 1)]",
    "[[[]] * (n + 1) for _ in range(m + 1)]",
    "[{} for _ in range(10)]",
    "[set() for _ in range(5)]",
    "[(i, i+1) for i in range(n)]",
    "[[True] * (n + 1) for _ in range(m + 1)]",
    "[[0.0] * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[[f(x) for x in range(10)] for _ in range(5)]",
    "[[] * (n + 1) for _ in range(m + 1)]",
    "[[] for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[['default'] * (n + 1) for _ in range(m + 1)]",
    "[[True] * (n + 1) for _ in range(m + 1)]",
    "[[[]] * (n + 1) for _ in range(m + 1)]",
    "[[''] for _ in range(m + 1)]",
    "[[None] for _ in range(m + 1)]",
    "[None] * (n + 1) for _ in range(m + 1)]",
    "[] * (n + 1) for _ in range(m + 1)]",
    "\"\" * (n + 1) for _ in range(m + 1)]",
    "{} * (n + 1) for _ in range(m + 1)]",
    "1 * (n + 1) for _ in range(m + 1)]",
    "True * (n + 1) for _ in range(m + 1)]",
    "False * (n + 1) for _ in range(m + 1)]",
    "()\" * (n + 1) for _ in range(m + 1)]",
    "lambda: None * (n + 1) for _ in range(m + 1)]",
    "import this * (n + 1) for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[] * (n + 1) for _ in range(m + 1)]",
    "[0 * (n + 1) for _ in range(m + 1)]",
    "['' * (n + 1) for _ in range(m + 1)]",
    "[\"\" * (n + 1) for _ in range(m + 1)]",
    "[{} * (n + 1) for _ in range(m + 1)]",
    "[set() * (n + 1) for _ in range(m + 1)]",
    "[() * (n + 1) for _ in range(m + 1)]",
    "[1 * (n + 1) for _ in range(m + 1)]",
    "[True * (n + 1) for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1) for _ in range(m + 1)]",
    "[[] * (n + 1) for _ in range(m + 1)]",
    "[[False] * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[[{}] * (n + 1) for _ in range(m + 1)]",
    "[[()] * (n + 1) for _ in range(m + 1)]",
    "[[set()] * (n + 1) for _ in range(m + 1)]",
    "[[dict()] * (n + 1) for _ in range(m + 1)]",
    "[[0.0] * (n + 1) for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[] * (n + 1) for _ in range(m + 1)]",
    "[0 * (n + 1) for _ in range(m + 1)]",
    "[\"\" * (n + 1) for _ in range(m + 1)]",
    "[{} * (n + 1) for _ in range(m + 1)]",
    "['' * (n + 1) for _ in range(m + 1)]",
    "[0.0 * (n + 1) for _ in range(m + 1)]",
    "[False * (n + 1) for _ in range(m + 1)]",
    "[[] * (n + 1) for _ in range(m + 1)]",
    "[set() * (n + 1) for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1) for _ in range(m + 1)]",
    "[[True] * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[[] * (n + 1) for _ in range(m + 1)]",
    "[[[]] * (n + 1) for _ in range(m + 1)]",
    "[{()} * (n + 1) for _ in range(m + 1)]",
    "[{} * (n + 1) for _ in range(m + 1)]",
    "[set() * (n + 1) for _ in range(m + 1)]",
    "[dict() * (n + 1) for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1) for _ in range(m + 1)]",
    "[[[]] * (n + 1) for _ in range(m + 1)]",
    "[[True] * (n + 1) for _ in range(m + 1)]",
    "[[\"\"] * (n + 1) for _ in range(m + 1)]",
    "[[\"default value\"] * (n + 1) for _ in range(m + 1)]",
    "[[{} for __ in range(inner_length)] for __ in range(outer_length)]",
    "[[[] for __ in range(inner_length)] for __ in range(outer_length)]",
    "[[None] * inner_length for __ in range(outer_length)]",
    "[[getattr(MyClass, \"__name__\")] * (n + 1) for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[0] * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1) for _ in range(m + 1)]",
    "[[]] * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[n] * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1) for _ in range(m + 1)]",
    "[[]] * (n + 1) for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1) for _ in range(m + 1)]",
    "[[] * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[[[]] * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1)] * (m + 1)",
    "[0 for _ in range(n + 1)] * (m + 1)",
    "[['None'] * (n + 1)] * (m + 1)",
    "[list(range(n + 1))] * (m + 1)",
    "[[True, False] * (n // 2 + 1)] * (m + 1)",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[] * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1) for _ in range(m + 1)]",
    "['' * (n + 1) for _ in range(m + 1)]",
    "[False * (n + 1) for _ in range(m + 1)]",
    "[()] * (n + 1) for _ in range(m + 1)]",
    "[[[]] * (n + 1) for _ in range(m + 1)]",
    "[{} * (n + 1) for _ in range(m + 1)]",
    "[set() * (n + 1) for _ in range(m + 1)]",
    "[0.0 * (n + 1) for _ in range(m + 1)]",
    "# Variant 1\n[[None] * (n + 1) for _ in range(m + 1)]\n\n# Variant 2\n[[] * (n + 1) for _ in range(m + 1)]\n\n# Variant 3\n[[''] * (n + 1) for _ in range(m + 1)]\n\n# Variant 4\n[['__'] * (n + 1) for _ in range(m + 1)]\n\n# Variant 5\n[{} * (n + 1) for _ in range(m + 1)]\n\n# Variant 6\n[{__} * (n + 1) for _ in range(m + 1)]\n\n# Variant 7\n[int()] * (n + 1) for _ in range(m + 1)]\n\n# Variant 8\n['test' * (n + 1) for _ in range(m + 1)]\n\n# Variant 9\n[(1 + 2) * (n + 1) for _ in range(m + 1)]\n\n# Variant 10\n[[True] * (n + 1) for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1) for _ in range(m + 1)]",
    "[['']* (n + 1) for _ in range(m + 1)]",
    "[{} * (n + 1) for _ in range(m + 1)]",
    "[[()] * (n + 1) for _ in range(m + 1)]",
    "[[False] * (n + 1) for _ in range(m + 1)]",
    "[['Hole'] * (n + 1) for _ in range(m + 1)]",
    "[[0.0] * (n + 1) for _ in range(m + 1)]",
    "[dict() * (n + 1) for _ in range(m + 1)]",
    "[['placeholder']* (n + 1) for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[] * (n + 1) for _ in range(m + 1)]",
    "[print(__) * (n + 1) for _ in range(m + 1)]",
    "[1 * (n + 1) for _ in range(m + 1)]",
    "[[] * (2 + 1) for _ in range(3 + 1)]",
    "[(a + b) * (n + 1) for _ in range(m + 1)]",
    "[str() * (n + 1) for _ in range(m + 1)]",
    "[() * (n + 1) for _ in range(m + 1)]",
    "[:print(__) * (n + 1) for _ in range(m + 1)]",
    "[[42] * (n + 1) for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[[] * (n + 1) for _ in range(m + 1)]",
    "[0 * (n + 1) for _ in range(m + 1)]",
    "['__' * (n + 1) for _ in range(m + 1)]",
    "[True * (n + 1) for _ in range(m + 1)]",
    "[1 * (n + 1) for _ in range(m + 1)]",
    "['undefined' * (n + 1) for _ in range(m + 1)]",
    "[dict() * (n + 1) for _ in range(m + 1)]",
    "[() * (n + 1) for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[[] * (n + 1) for _ in range(m + 1)]",
    "[dict() * (n + 1) for _ in range(m + 1)]",
    "[frozenset() * (n + 1) for _ in range(m + 1)]",
    "[set() * (n + 1) for _ in range(m + 1)]",
    "[() * (n + 1) for _ in range(m + 1)]",
    "[object() * (n + 1) for _ in range(m + 1)]",
    "[None] * (n + 1) for _ in range(m + 1)",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[[] * (n + 1) for _ in range(m + 1)]",
    "[[False] * (n + 1) for _ in range(m + 1)]",
    "[[{}] * (n + 1) for _ in range(m + 1)]",
    "[['hello'] * (n + 1) for _ in range(m + 1)]",
    "[[(1, 2, 3)] * (n + 1) for _ in range(m + 1)]",
    "[[float('inf')] * (n + 1) for _ in range(m + 1)]",
    "[[[i, j] for i in range(n+1)] for j in range(m+1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[True] * (n + 1) for _ in range(m + 1)]",
    "[[False] * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1) for _ in range(m + 1)]",
    "[[1] * (n + 1) for _ in range(m + 1)]",
    "[['a'] * (n + 1) for _ in range(m + 1)]",
    "[[[]] * (n + 1) for _ in range(m + 1)]",
    "[[{}] * (n + 1) for _ in range(m + 1)]",
    "[[set()] * (n + 1) for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[] * (n + 1) for _ in range(m + 1)]",
    "[1 * (n + 1) for _ in range(m + 1)]",
    "[0 * (n + 1) for _ in range(m + 1)]",
    "['' * (n + 1) for _ in range(m + 1)]",
    "[True * (n + 1) for _ in range(m + 1)]",
    "[False * (n + 1) for _ in range(m + 1)]",
    "[(lambda: None)() * (n + 1) for _ in range(m + 1)]",
    "[(yield) * (n + 1) for _ in range(m + 1)]",
    "[(globals()) * (n + 1) for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[[] * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1) for _ in range(m + 1)]",
    "[[True] * (n + 1) for _ in range(m + 1)]",
    "[[[]] * (n + 1) for _ in range(m + 1)]",
    "[['__'] * (n + 1) for _ in range(m + 1)]",
    "[[1] * (n + 1) for _ in range(m + 1)]",
    "[[[None]] * (n + 1) for _ in range(m + 1)]",
    "[[[0]] * (n + 1) for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[[] * (n + 1) for _ in range(m + 1)]",
    "[{} * (n + 1) for _ in range(m + 1)]",
    "[['item'] * (n + 1) for _ in range(m + 1)]",
    "[True * (n + 1) for _ in range(m + 1)]",
    "['value' * (n + 1) for _ in range(m + 1)]",
    "[0.0 * (n + 1) for _ in range(m + 1)]",
    "[() * (n + 1) for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1) for _ in range(m + 1)]",
    "[[] * (n + 1) for _ in range(m + 1)]",
    "['' * (n + 1) for _ in range(m + 1)]",
    "[{} * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[[0.0] * (n + 1) for _ in range(m + 1)]",
    "[['abc'] * (n + 1) for _ in range(m + 1)]",
    "[[True] * (n + 1) for _ in range(m + 1)]",
    "[[False] * (n + 1) for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[[[]] * (n + 1) for _ in range(m + 1)]",
    "[['__'] * (n + 1) for _ in range(m + 1)]",
    "[[True] * (n + 1) for _ in range(m + 1)]",
    "[[1.5] * (n + 1) for _ in range(m + 1)]",
    "[[{}] * (n + 1) for _ in range(m + 1)]",
    "[[object()] * (n + 1) for _ in range(m + 1)]",
    "[[f'item{i}'] * (n + 1) for i in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1) for _ in range(m + 1)]",
    "[[] * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[{} * (n + 1) for _ in range(m + 1)]",
    "[set() * (n + 1) for _ in range(m + 1)]",
    "[{()} * (n + 1) for _ in range(m + 1)]",
    "[{__} * (n + 1) for _ in range(m + 1)]",
    "[() * (n + 1) for _ in range(m + 1)]",
    "[int] * (n + 1) for _ in range(m + 1)]",
    "[['x'] * (n + 1) for _ in range(m + 1)]",
    "[[1] * (n + 1) for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[['hello'] * (n + 1) for _ in range(m + 1)]",
    "[[True] * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[[[]] * (n + 1) for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[[] * (n + 1) for _ in range(m + 1)]",
    "[{} * (n + 1) for _ in range(m + 1)]",
    "['placeholder' * (n + 1) for _ in range(m + 1)]",
    "[float('nan')] * (n + 1) for _ in range(m + 1)]",
    "[0] * (n + 1) for _ in range(m + 1)]",
    "['undefined'] * (n + 1) for _ in range(m + 1)]",
    "[True] * (n + 1) for _ in range(m + 1)]",
    "[bytes()] * (n + 1) for _ in range(m + 1)]",
    "# Variant 1\n[[None] * (n + 1) for _ in range(m + 1)]\n\n# Variant 2\n[[0] * (n + 1) for _ in range(m + 1)]\n\n# Variant 3\n[[''] * (n + 1) for _ in range(m + 1)]\n\n# Variant 4\n[[True] * (n + 1) for _ in range(m + 1)]\n\n# Variant 5\n[[[]] * (n + 1) for _ in range(m + 1)]\n\n# Variant 6\n[[{}]* (n + 1) for _ in range(m + 1)]\n\n# Variant 7\n[[()] * (n + 1) for _ in range(m + 1)]\n\n# Variant 8\n[['placeholder'] * (n + 1) for _ in range(m + 1)]\n\n# Variant 9\n[[0.0] * (n + 1) for _ in range(m + 1)]\n\n# Variant 10\n[[object()] * (n + 1) for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1) for _ in range(m + 1)]",
    "[[] for _ in range(m + 1)]",
    "[[[]] * (n + 1) for _ in range(m + 1)]",
    "[[True] * (n + 1) for _ in range(m + 1)]",
    "[0] * (n + 1) for _ in range(m + 1)]",
    "[''] * (n + 1) for _ in range(m + 1)]",
    "[{} for _ in range(m + 1)]",
    "[0.0] * (n + 1) for _ in range(m + 1)]",
    "['placeholder'] * (n + 1) for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[] * (n + 1) for _ in range(m + 1)]",
    "[0 * (n + 1) for _ in range(m + 1)]",
    "['']* (n + 1) for _ in range(m + 1)]",
    "[{__} for _ in range(m + 1)]",
    "[[] for _ in range(m + 1)]",
    "['']* (n + 1) for _ in range(m + 1)]",
    "[0 for _ in range(m + 1)]",
    "[{} for _ in range(m + 1)]",
    "[set() for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[] * (n + 1) for _ in range(m + 1)]",
    "[{} * (n + 1) for _ in range(m + 1)]",
    "[\"\" * (n + 1) for _ in range(m + 1)]",
    "[0 * (n + 1) for _ in range(m + 1)]",
    "[True * (n + 1) for _ in range(m + 1)]",
    "[False * (n + 1) for _ in range(m + 1)]",
    "[1 * (n + 1) for _ in range(m + 1)]",
    "[() * (n + 1) for _ in range(m + 1)]",
    "[set() * (n + 1) for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[[[]] * (n + 1) for _ in range(m + 1)]",
    "[[True] * (n + 1) for _ in range(m + 1)]",
    "[['placeholder'] * (n + 1) for _ in range(m + 1)]",
    "[[0.0] * (n + 1) for _ in range(m + 1)]",
    "[[(lambda: None)()] * (n + 1) for _ in range(m + 1)]",
    "[[{}](n + 1) for _ in range(m + 1)]",
    "[[object()] * (n + 1) for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[{} * (n + 1) for _ in range(m + 1)]",
    "[() * (n + 1) for _ in range(m + 1)]",
    "[set() * (n + 1) for _ in range(m + 1)]",
    "[True * (n + 1) for _ in range(m + 1)]",
    "[False * (n + 1) for _ in range(m + 1)]",
    "[0 * (n + 1) for _ in range(m + 1)]",
    "[1 * (n + 1) for _ in range(m + 1)]",
    "['placeholder' * (n + 1) for _ in range(m + 1)]",
    "[[_] * (n + 1) for _ in range(m + 1)]",
    "[[] * (n + 1) for _ in range(m + 1)]",
    "[None * (n + 1) for _ in range(m + 1)]",
    "[0 * (n + 1) for _ in range(m + 1)]",
    "['' * (n + 1) for _ in range(m + 1)]",
    "[{} * (n + 1) for _ in range(m + 1)]",
    "[() * (n + 1) for _ in range(m + 1)]",
    "[set() * (n + 1) for _ in range(m + 1)]",
    "[dict() * (n + 1) for _ in range(m + 1)]",
    "[object() * (n + 1) for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[[] * (n + 1) for _ in range(m + 1)]",
    "[{} * (n + 1) for _ in range(m + 1)]",
    "[True * (n + 1) for _ in range(m + 1)]",
    "[0 * (n + 1) for _ in range(m + 1)]",
    "[(n + 1) * (n + 1) for _ in range(m + 1)]",
    "[float('inf') * (n + 1) for _ in range(m + 1)]",
    "[arg] * (n + 1) for _ in range(m + 1)]",
    "[lambda x: x * (n + 1)] for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[[True] * (n + 1) for _ in range(m + 1)]",
    "[[[]] * (n + 1) for _ in range(m + 1)]",
    "[[{}] * (n + 1) for _ in range(m + 1)]",
    "[[\"__\"] * (n + 1) for _ in range(m + 1)]",
    "[[1.0] * (n + 1) for _ in range(m + 1)]",
    "[[object()] * (n + 1) for _ in range(m + 1)]",
    "[['Unnamed'] * (n + 1) for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[{} for _ in range(m + 1)]",
    "[[[]] * (n + 1) for _ in range(m + 1)]",
    "[[0.0] * (n + 1) for _ in range(m + 1)]",
    "[['placeholder'] * (n + 1) for _ in range(m + 1)]",
    "[[False] * (n + 1) for _ in range(m + 1)]",
    "[()] * (n + 1) for _ in range(m + 1)]",
    "[[set()] * (n + 1) for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[] * (n + 1) for _ in range(m + 1)]",
    "[() * (n + 1) for _ in range(m + 1)]",
    "[{} * (n + 1) for _ in range(m + 1)]",
    "[0 * (n + 1) for _ in range(m + 1)]",
    "['' * (n + 1) for _ in range(m + 1)]",
    "[True * (n + 1) for _ in range(m + 1)]",
    "[False * (n + 1) for _ in range(m + 1)]",
    "[0.0 * (n + 1) for _ in range(m + 1)]",
    "[np.nan * (n + 1) for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1) for _ in range(m + 1)]",
    "[[] * (n + 1) for _ in range(m + 1)]",
    "[{} * (n + 1) for _ in range(m + 1)]",
    "[[False] * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[[0.0] * (n + 1) for _ in range(m + 1)]",
    "[[()] * (n + 1) for _ in range(m + 1)]",
    "[object() * (n + 1) for _ in range(m + 1)]",
    "[[[] for _ in range(n + 1)] for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[[{}] * (n + 1) for _ in range(m + 1)]",
    "[[] * (n + 1) for _ in range(m + 1)]",
    "[['__'] * (n + 1) for _ in range(m + 1)]",
    "[[False] * (n + 1) for _ in range(m + 1)]",
    "[[()'__' ] * (n + 1) for _ in range(m + 1)]",
    "[[1.5] * (n + 1) for _ in range(m + 1)]",
    "[[0x0] * (n + 1) for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[] * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[0 * (n + 1) for _ in range(m + 1)]",
    "[False * (n + 1) for _ in range(m + 1)]",
    "[{} * (n + 1) for _ in range(m + 1)]",
    "[() * (n + 1) for _ in range(m + 1)]",
    "[0.0 * (n + 1) for _ in range(m + 1)]",
    "['__' * (n + 1) for _ in range(m + 1)]",
    "[(0, 0) * (n + 1) for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[[] * (n + 1) for _ in range(m + 1)]",
    "['*' * (n + 1) for _ in range(m + 1)]",
    "[[False] * (n + 1) for _ in range(m + 1)]",
    "[[12.34] * (n + 1) for _ in range(m + 1)]",
    "['placeholder' * (n + 1) for _ in range(m + 1)]",
    "[{'key': 'value'} * (n + 1) for _ in range(m + 1)]",
    "[[()] * (n + 1) for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1) for _ in range(m + 1)]",
    "[[] * (n + 1) for _ in range(m + 1)]",
    "[[False] * (n + 1) for _ in range(m + 1)]",
    "[['__'] * (n + 1) for _ in range(m + 1)]",
    "[{} * (n + 1) for _ in range(m + 1)]",
    "[[()] * (n + 1) for _ in range(m + 1)]",
    "[[...] * (n + 1) for _ in range(m + 1)]",
    "[[' ' * 2] * (n + 1) for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[False] * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[['placeholder'] * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1) for _ in range(m + 1)]",
    "[[] * (n + 1) for _ in range(m + 1)]",
    "[[{}] * (n + 1) for _ in range(m + 1)]",
    "[[())] * (n + 1) for _ in range(m + 1)]",
    "[['fill me' for _ in range(n + 1)] for _ in range(m + 1)]",
    "[[i for i in range(n + 1)] for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1) for _ in range(m + 1)]",
    "[['__'] * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[[False] * (n + 1) for _ in range(m + 1)]",
    "[[[]] * (n + 1) for _ in range(m + 1)]",
    "[[{} for _ in range(n + 1)] for _ in range(m + 1)]",
    "[[set() for _ in range(n + 1)] for _ in range(m + 1)]",
    "[[() for _ in range(n + 1)] for _ in range(m + 1)]",
    "[[tuple() for _ in range(n + 1)] for _ in range(m + 1)]",
    "[[] * (n + 1) for _ in range(m + 1)]",
    "[[] for _ in range(m + 1)]",
    "[[] * (n + 1) for _ in range(m)]",
    "[[] for _ in range(m)]",
    "[] * (n + 1)",
    "[]",
    "[[]] * (n + 1)",
    "[[]] * n",
    "[[]] * m",
    "[[]] * (m + 1)",
    "# Variant 1\n[[None] * (n + 1) for _ in range(m + 1)]\n\n# Variant 2\n[[] * (n + 1) for _ in range(m + 1)]\n\n# Variant 3\n[0 * (n + 1) for _ in range(m + 1)]\n\n# Variant 4\n[\"\" * (n + 1) for _ in range(m + 1)]\n\n# Variant 5\n[{} * (n + 1) for _ in range(m + 1)]\n\n# Variant 6\n[() * (n + 1) for _ in range(m + 1)]\n\n# Variant 7\n[True * (n + 1) for _ in range(m + 1)]\n\n# Variant 8\n[float('nan') * (n + 1) for _ in range(m + 1)]\n\n# Variant 9\n['undefined_token' * (n + 1) for _ in range(m + 1)]\n\n# Variant 10\n[b'undefined_token' * (n + 1) for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1) for _ in range(m + 1)]",
    "[[] * (n + 1) for _ in range(m + 1)]",
    "[0 * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[['__'] * (n + 1) for _ in range(m + 1)]",
    "[[[], []] * (n + 1) for _ in range(m + 1)]",
    "[[{}] * (n + 1) for _ in range(m + 1)]",
    "[[False] * (n + 1) for _ in range(m + 1)]",
    "[[[None]] * (n + 1) for _ in range(m + 1)]",
    "1. [[None] * (n + 1) for _ in range(m + 1)]\n\n2. [[0] * (n + 1) for _ in range(m + 1)]\n\n3. [[''] * (n + 1) for _ in range(m + 1)]\n\n4. [[[]] * (n + 1) for _ in range(m + 1)]\n\n5. [[{}] * (n + 1) for _ in range(m + 1)]\n\n6. [[True] * (n + 1) for _ in range(m + 1)]\n\n7. [[False] * (n + 1) for _ in range(m + 1)]\n\n8. [[0.0] * (n + 1) for _ in range(m + 1)]\n\n9. [['placeholder'] * (n + 1) for _ in range(m + 1)]\n\n10. [[None] for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[] * (n + 1) for _ in range(m + 1)]",
    "[0 * (n + 1) for _ in range(m + 1)]",
    "[set() * (n + 1) for _ in range(m + 1)]",
    "[dict() * (n + 1) for _ in range(m + 1)]",
    "[True * (n + 1) for _ in range(m + 1)]",
    "[False * (n + 1) for _ in range(m + 1)]",
    "[\"\" * (n + 1) for _ in range(m + 1)]",
    "[() * (n + 1) for _ in range(m + 1)]",
    "[[] for _ in range(m + 1)]",
    "[None] * (n + 1) for _ in range(m + 1)]",
    "[1] * (n + 1) for _ in range(m + 1)]",
    "[[]] * (n + 1) for _ in range(m + 1)]",
    "[{}] * (n + 1) for _ in range(m + 1)]",
    "[set()] * (n + 1) for _ in range(m + 1)]",
    "[0.0] * (n + 1) for _ in range(m + 1)]",
    "[np.inf] * (n + 1) for _ in range(m + 1)]",
    "[''] * (n + 1) for _ in range(m + 1)]",
    "[str()] * (n + 1) for _ in range(m + 1)]",
    "[bool()] * (n + 1) for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[{} for _ in range(m + 1)]",
    "[True for _ in range(m + 1)]",
    "[False for _ in range(m + 1)]",
    "[list() for _ in range(m + 1)]",
    "[() for _ in range(m + 1)]",
    "[set() for _ in range(m + 1)]",
    "['Hello' for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[[False] * (n + 1) for _ in range(m + 1)]",
    "[[' ']* (n + 1) for _ in range(m + 1)]",
    "[[]]* (n + 1) for _ in range(m + 1)]",
    "[['']* (n + 1) for _ in range(m + 1)]",
    "[[0.0]* (n + 1) for _ in range(m + 1)]",
    "[[{}] * (n + 1) for _ in range(m + 1)]",
    "[Unknown]* (n + 1) for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[[[]] * (n + 1) for _ in range(m + 1)]",
    "[[()] * (n + 1) for _ in range(m + 1)]",
    "[[{}] * (n + 1) for _ in range(m + 1)]",
    "[[True] * (n + 1) for _ in range(m + 1)]",
    "[[False] * (n + 1) for _ in range(m + 1)]",
    "[[0.0] * (n + 1) for _ in range(m + 1)]",
    "[[set()] * (n + 1) for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[] * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1) for _ in range(m + 1)]",
    "[[False] * (n + 1) for _ in range(m + 1)]",
    "[[{}] * (n + 1) for _ in range(m + 1)]",
    "[[set()] * (n + 1) for _ in range(m + 1)]",
    "[[()] * (n + 1) for _ in range(m + 1)]",
    "[[{} for _ in range(k)] * (n + 1) for _ in range(m + 1)]",
    "[[i for i in names] * (n + 1) for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[[] * (n + 1) for _ in range(m + 1)]",
    "[[{}] * (n + 1) for _ in range(m + 1)]",
    "[[True] * (n + 1) for _ in range(m + 1)]",
    "[[1.0] * (n + 1) for _ in range(m + 1)]",
    "[['Hello'] * (n + 1) for _ in range(m + 1)]",
    "[[len(a_list)] * (n + 1) for _ in range(m + 1)]",
    "[[i] * (n + 1) for i in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[[] * (n + 1) for _ in range(m + 1)]",
    "[{} * (n + 1) for _ in range(m + 1)]",
    "[set() * (n + 1) for _ in range(m + 1)]",
    "[int()] * (n + 1) for _ in range(m + 1)]",
    "[str()] * (n + 1) for _ in range(m + 1)]",
    "[float()] * (n + 1) for _ in range(m + 1)]",
    "[bool()] * (n + 1) for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1) for _ in range(m + 1)]",
    "[[False] * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[[[]] * (n + 1) for _ in range(m + 1)]",
    "[[{}] * (n + 1) for _ in range(m + 1)]",
    "[[(i, j) for j in range(n + 1)] for i in range(m + 1)]",
    "[[chr(ord('A') + i) for _ in range(n + 1)] for i in range(m + 1)]",
    "[[len(s) for s in strings] * (n + 1) for _ in range(m + 1)]",
    "[[abs(x) for x in range(n + 1)] * (n + 1) for _ in range(m + 1)]",
    "[None] * (n + 1)",
    "[0] * (n + 1)",
    "[''] * (n + 1)",
    "[True] * (n + 1)",
    "[False] * (n + 1)",
    "[[]] * (n + 1)",
    "[{}] * (n + 1)",
    "[1] * (n + 1)",
    "['hello'] * (n + 1)",
    "[object()] * (n + 1)",
    "[None] * (n + 1) for _ in range(m + 1)]",
    "'placeholder' * (n + 1) for _ in range(m + 1)]",
    "[0] * (n + 1) for _ in range(m + 1)]",
    "[] * (n + 1) for _ in range(m + 1)]",
    "[1] * (n + 1) for _ in range(m + 1)]",
    "[True] * (n + 1) for _ in range(m + 1)]",
    "[False] * (n + 1) for _ in range(m + 1)]",
    "[[]] * (n + 1) for _ in range(m + 1)]",
    "['some_string'] * (n + 1) for _ in range(m + 1)]",
    "[()] * (n + 1) for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[['unfilled'] * (n + 1) for _ in range(m + 1)]",
    "[[[]] * (n + 1) for _ in range(m + 1)]",
    "[[{}] * (n + 1) for _ in range(m + 1)]",
    "[[False] * (n + 1) for _ in range(m + 1)]",
    "[[0.0] * (n + 1) for _ in range(m + 1)]",
    "[[set()] * (n + 1) for _ in range(m + 1)]",
    "[[str()] * (n + 1) for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1) for _ in range(m + 1)]",
    "[[] * (n + 1) for _ in range(m + 1)]",
    "[{} * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[[False] * (n + 1) for _ in range(m + 1)]",
    "[[0.0] * (n + 1) for _ in range(m + 1)]",
    "[[()] * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1), []] * (m + 1)]",
    "[[[None]] * (n + 1) for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1) for _ in range(m + 1)]",
    "[[[]] * (n + 1) for _ in range(m + 1)]",
    "[[{}] * (n + 1) for _ in range(m + 1)]",
    "[[()] * (n + 1) for _ in range(m + 1)]",
    "[[set()] * (n + 1) for _ in range(m + 1)]",
    "[[\"\"] * (n + 1) for _ in range(m + 1)]",
    "[[True] * (n + 1) for _ in range(m + 1)]",
    "[[False] * (n + 1) for _ in range(m + 1)]",
    "[[0.0] * (n + 1) for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1) for _ in range(m + 1)]",
    "[['value'] * (n + 1) for _ in range(m + 1)]",
    "[{} * (n + 1) for _ in range(m + 1)]",
    "[[] * (n + 1) for _ in range(m + 1)]",
    "['' * (n + 1) for _ in range(m + 1)]",
    "[1 * (n + 1) for _ in range(m + 1)]",
    "[True * (n + 1) for _ in range(m + 1)]",
    "[{'key': 'value'} * (n + 1) for _ in range(m + 1)]",
    "[object() * (n + 1) for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1) for _ in range(m + 1)]",
    "[[False] * (n + 1) for _ in range(m + 1)]",
    "[['__'] * (n + 1) for _ in range(m + 1)]",
    "[[[]] * (n + 1) for _ in range(m + 1)]",
    "[['undefined'] * (n + 1) for _ in range(m + 1)]",
    "[[{'?': None}] * (n + 1) for _ in range(m + 1)]",
    "[[set()] * (n + 1) for _ in range(m + 1)]",
    "[[dict()] * (n + 1) for _ in range(m + 1)]",
    "[[1] * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[[] * (n + 1) for _ in range(m + 1)]",
    "[{} * (n + 1) for _ in range(m + 1)]",
    "[()] * (n + 1) for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[['unknown'] * (n + 1) for _ in range(m + 1)]",
    "[[True] * (n + 1) for _ in range(m + 1)]",
    "[[1.0] * (n + 1) for _ in range(m + 1)]",
    "[[object()] * (n + 1) for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for __ in range(m + 1)]",
    "[[[]] * (n + 1) for _ in range(m + 1)]",
    "[[[]] * (n + 1) for __ in range(m + 1)]",
    "[() * (n + 1) for _ in range(m + 1)]",
    "[() * (n + 1) for __ in range(m + 1)]",
    "[{} * (n + 1) for _ in range(m + 1)]",
    "[{} * (n + 1) for __ in range(m + 1)]",
    "[None] * (n + 1) for _ in range(m + 1)]",
    "[\"\"] * (n + 1) for _ in range(m + 1)]",
    "[0] * (n + 1) for _ in range(m + 1)]",
    "[True] * (n + 1) for _ in range(m + 1)]",
    "[[]] * (n + 1) for _ in range(m + 1)]",
    "[()] * (n + 1) for _ in range(m + 1)]",
    "[{}] * (n + 1) for _ in range(m + 1)]",
    "[\"placeholder\"] * (n + 1) for _ in range(m + 1)]",
    "[1.0] * (n + 1) for _ in range(m + 1)]",
    "[set()] * (n + 1) for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[[[]] * (n + 1) for _ in range(m + 1)]",
    "[[{}] * (n + 1) for _ in range(m + 1)]",
    "[[True] * (n + 1) for _ in range(m + 1)]",
    "[[False] * (n + 1) for _ in range(m + 1)]",
    "[[0.0] * (n + 1) for _ in range(m + 1)]",
    "[[()] * (n + 1) for _ in range(m + 1)]",
    "[['placeholder'] * (n + 1) for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[[] * (n + 1) for _ in range(m + 1)]",
    "[() * (n + 1) for _ in range(m + 1)]",
    "[{} * (n + 1) for _ in range(m + 1)]",
    "[str()] * (n + 1) for _ in range(m + 1)]",
    "[int()] * (n + 1) for _ in range(m + 1)]",
    "[float()] * (n + 1) for _ in range(m + 1)]",
    "[bool()] * (n + 1) for _ in range(m + 1)]",
    "[lambda: None] * (n + 1) for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[['placeholder'] * (n + 1) for _ in range(m + 1)]",
    "[[False] * (n + 1) for _ in range(m + 1)]",
    "[[[]] * (n + 1) for _ in range(m + 1)]",
    "[[{} for _ in range(n + 1)] for _ in range(m + 1)]",
    "[[set() for _ in range(n + 1)] for _ in range(m + 1)]",
    "[[lambda: None for _ in range(n + 1)] for _ in range(m + 1)]",
    "[[object() for _ in range(n + 1)] for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1) for _ in range(m + 1)]",
    "[[True] * (n + 1) for _ in range(m + 1)]",
    "[['placeholder'] * (n + 1) for _ in range(m + 1)]",
    "[[{'value': None}] * (n + 1) for _ in range(m + 1)]",
    "[[object()] * (n + 1) for _ in range(m + 1)]",
    "[[(lambda x: x)('')]* (n + 1) for _ in range(m + 1)]",
    "[['Fill the holes!'] * (n + 1) for _ in range(m + 1)]",
    "[[math.inf] * (n+1) for _ in range(m+1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1) for _ in range(m + 1)]",
    "[[[]] * (n + 1) for _ in range(m + 1)]",
    "[[{}] * (n + 1) for _ in range(m + 1)]",
    "[[set()] * (n + 1) for _ in range(m + 1)]",
    "[[False] * (n + 1) for _ in range(m + 1)]",
    "[[True] * (n + 1) for _ in range(m + 1)]",
    "[[0.0] * (n + 1) for _ in range(m + 1)]",
    "[['', ''] * (n + 1) for _ in range(m + 1)]",
    "[None] * (n + 1) for _ in range(m + 1)",
    "[0] * (n + 1) for _ in range(m + 1)",
    "[\"\"] * (n + 1) for _ in range(m + 1)",
    "[\"default_value\"] * (n + 1) for _ in range(m + 1)",
    "[] * (n + 1) for _ in range(m + 1)",
    "[{} for _ in range(n + 1)] for _ in range(m + 1)",
    "[[] for _ in range(n + 1)] for _ in range(m + 1)",
    "[[None] * (n + 1)] * (m + 1)",
    "[[0] * (n + 1)] * (m + 1)",
    "[[] for _ in range(n + 1)] * (m + 1)",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[] * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1) for _ in range(m + 1)]",
    "[[True] * (n + 1) for _ in range(m + 1)]",
    "[[1.5] * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[[{}] * (n + 1) for _ in range(m + 1)]",
    "[[set()] * (n + 1) for _ in range(m + 1)]",
    "[[object()] * (n + 1) for _ in range(m + 1)]",
    "[[lambda: None] * (n + 1) for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1) for _ in range(m + 1)]",
    "[[True] * (n + 1) for _ in range(m + 1)]",
    "[['placeholder'] * (n + 1) for _ in range(m + 1)]",
    "[[[]] * (n + 1) for _ in range(m + 1)]",
    "[[{}]* (n + 1) for _ in range(m + 1)]",
    "[[set()] * (n + 1) for _ in range(m + 1)]",
    "[[0.0] * (n + 1) for _ in range(m + 1)]",
    "[[False] * (n + 1) for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[] * (n + 1) for _ in range(m + 1)]",
    "[0 * (n + 1) for _ in range(m + 1)]",
    "['' * (n + 1) for _ in range(m + 1)]",
    "[() * (n + 1) for _ in range(m + 1)]",
    "[{} * (n + 1) for _ in range(m + 1)]",
    "[set() * (n + 1) for _ in range(m + 1)]",
    "[dict() * (n + 1) for _ in range(m + 1)]",
    "[False * (n + 1) for _ in range(m + 1)]",
    "[0.0 * (n + 1) for _ in range(m + 1)]",
    "[[1] * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1) for _ in range(m + 1)]",
    "[['x'] * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[True] * (n + 1) for _ in range(m + 1)]",
    "[[False] * (n + 1) for _ in range(m + 1)]",
    "[[1.0] * (n + 1) for _ in range(m + 1)]",
    "[[[1, 2, 3]] * (n + 1) for _ in range(m + 1)]",
    "[[(i + j) for j in range(n + 1)] for i in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1) for _ in range(m + 1)]",
    "[[] * (n + 1) for _ in range(m + 1)]",
    "[{} * (n + 1) for _ in range(m + 1)]",
    "[['foo'] * (n + 1) for _ in range(m + 1)]",
    "[set() * (n + 1) for _ in range(m + 1)]",
    "[float('inf')] * (n + 1) for _ in range(m + 1)]",
    "[((i + 1) * (j + 1)) for i in range(n + 1)] for j in range(m + 1)]",
    "[obj() for _ in range(n + 1)] for _ in range(m + 1)]",
    "# Variant 1\n[[None] * (n + 1) for _ in range(m + 1)]\n\n# Variant 2\n[[0] * (n + 1) for _ in range(m + 1)]\n\n# Variant 3\n[[True] * (n + 1) for _ in range(m + 1)]\n\n# Variant 4\n[[''] * (n + 1) for _ in range(m + 1)]\n\n# Variant 5\n[[[]] * (n + 1) for _ in range(m + 1)]\n\n# Variant 6\n[[{}] * (n + 1) for _ in range(m + 1)]\n\n# Variant 7\n[[()] * (n + 1) for _ in range(m + 1)]\n\n# Variant 8\n[[set()] * (n + 1) for _ in range(m + 1)]\n\n# Variant 9\n[[[None]] * (n + 1) for _ in range(m + 1)]\n\n# Variant 10\n[[dict()] * (n + 1) for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[['A'] * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1) for _ in range(m + 1)]",
    "[[True] * (n + 1) for _ in range(m + 1)]",
    "[[[]] * (n + 1) for _ in range(m + 1)]",
    "[[dict()] * (n + 1) for _ in range(m + 1)]",
    "[[set()] * (n + 1) for _ in range(m + 1)]",
    "[['hello world'] * (n + 1) for _ in range(m + 1)]",
    "[[1, 2, 3] * (n + 1) for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[] * (n + 1) for _ in range(m + 1)]",
    "[0 * (n + 1) for _ in range(m + 1)]",
    "['' * (n + 1) for _ in range(m + 1)]",
    "[{} * (n + 1) for _ in range(m + 1)]",
    "[() * (n + 1) for _ in range(m + 1)]",
    "[True * (n + 1) for _ in range(m + 1)]",
    "[False * (n + 1) for _ in range(m + 1)]",
    "[0.0 * (n + 1) for _ in range(m + 1)]",
    "['__' * (n + 1) for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[[] for _ in range(m + 1)]",
    "[[False] * (n + 1) for _ in range(m + 1)]",
    "[{} for _ in range(m + 1)]",
    "[()] * (n + 1) for _ in range(m + 1)]",
    "[[1.0] * (n + 1) for _ in range(m + 1)]",
    "[['a'] * (n + 1) for _ in range(m + 1)]",
    "[np.nan] * (n + 1) for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[[] * (n + 1) for _ in range(m + 1)]",
    "[{} * (n + 1) for _ in range(m + 1)]",
    "[(lambda:_)() * (n + 1) for _ in range(m + 1)]",
    "[lambda: None * (n + 1) for _ in range(m + 1)]",
    "[True * (n + 1) for _ in range(m + 1)]",
    "[object() * (n + 1) for _ in range(m + 1)]",
    "[eval('') * (n + 1) for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[[] * (n + 1) for _ in range(m + 1)]",
    "[[True] * (n + 1) for _ in range(m + 1)]",
    "[[False] * (n + 1) for _ in range(m + 1)]",
    "[[1.0] * (n + 1) for _ in range(m + 1)]",
    "[[{}] * (n + 1) for _ in range(m + 1)]",
    "[[set()] * (n + 1) for _ in range(m + 1)]",
    "[[(None,)] * (n + 1) for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[[] * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1) for _ in range(m + 1)]",
    "[[False] * (n + 1) for _ in range(m + 1)]",
    "[[object()] * (n + 1) for _ in range(m + 1)]",
    "[[dict()] * (n + 1) for _ in range(m + 1)]",
    "[[str()] * (n + 1) for _ in range(m + 1)]",
    "[[float()] * (n + 1) for _ in range(m + 1)]",
    "[[set()] * (n + 1) for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[] * (n + 1) for _ in range(m + 1)]",
    "['' * (n + 1) for _ in range(m + 1)]",
    "[0 * (n + 1) for _ in range(m + 1)]",
    "[False * (n + 1) for _ in range(m + 1)]",
    "[0.0 * (n + 1) for _ in range(m + 1)]",
    "[{} * (n + 1) for _ in range(m + 1)]",
    "[() * (n + 1) for _ in range(m + 1)]",
    "['None' * (n + 1) for _ in range(m + 1)]",
    "[[] * (n + 1) for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1) for _ in range(m + 1)]",
    "[[] * (n + 1) for _ in range(m + 1)]",
    "[[True] * (n + 1) for _ in range(m + 1)]",
    "[[{}] * (n + 1) for _ in range(m + 1)]",
    "[[set()] * (n + 1) for _ in range(m + 1)]",
    "[[()] * (n + 1) for _ in range(m + 1)]",
    "[[object()] * (n + 1) for _ in range(m + 1)]",
    "[['place_holder'] * (n + 1) for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[{} * (n + 1) for _ in range(m + 1)]",
    "[True * (n + 1) for _ in range(m + 1)]",
    "[0 * (n + 1) for _ in range(m + 1)]",
    "[1.0 * (n + 1) for _ in range(m + 1)]",
    "[['placeholder'] * (n + 1) for _ in range(m + 1)]",
    "[SomeObject() * (n + 1) for _ in range(m + 1)]",
    "[(lambda: None)() * (n + 1) for _ in range(m + 1)]",
    "[range(5) * (n + 1) for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[{} * (n + 1) for _ in range(m + 1)]",
    "[0 * (n + 1) for _ in range(m + 1)]",
    "[False * (n + 1) for _ in range(m + 1)]",
    "[['placeholder'] * (n + 1) for _ in range(m + 1)]",
    "[{'key': 'value'} * (n + 1) for _ in range(m + 1)]",
    "[() * (n + 1) for _ in range(m + 1)]",
    "[[[]] * (n + 1) for _ in range(m + 1)]",
    "[set() * (n + 1) for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[[[]] * (n + 1) for _ in range(m + 1)]",
    "[[{}] * (n + 1) for _ in range(m + 1)]",
    "[[True] * (n + 1) for _ in range(m + 1)]",
    "[[False] * (n + 1) for _ in range(m + 1)]",
    "[[0.0] * (n + 1) for _ in range(m + 1)]",
    "[[()] * (n + 1) for _ in range(m + 1)]",
    "[['hello'] * (n + 1) for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1) for _ in range(m + 1)]",
    "[[] * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[[True] * (n + 1) for _ in range(m + 1)]",
    "[[[]] * (n + 1) for _ in range(m + 1)]",
    "[[{}] * (n + 1) for _ in range(m + 1)]",
    "[['hello'] * (n + 1) for _ in range(m + 1)]",
    "[[1,2,3] * (n + 1) for _ in range(m + 1)]",
    "[[[None]] * (n + 1) for _ in range(m + 1)]",
    "[[<undefined_token>] * (n + 1) for _ in range(m + 1)]",
    "[[<undefined_token>] * (n + 1) for _ in range(m + 1)]",
    "[[<undefined_token>] * (n + 1) for _ in range(m + 1)]",
    "[[<undefined_token>] * (n + 1) for _ in range(m + 1)]",
    "[[<undefined_token>] * (n + 1) for _ in range(m + 1)]",
    "[[<undefined_token>] * (n + 1) for _ in range(m + 1)]",
    "[[<undefined_token>] * (n + 1) for _ in range(m + 1)]",
    "[[<undefined_token>] * (n + 1) for _ in range(m + 1)]",
    "[[<undefined_token>] * (n + 1) for _ in range(m + 1)]",
    "[[<undefined_token>] * (n + 1) for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[{} * (n + 1) for _ in range(m + 1)]",
    "[['value'] * (n + 1) for _ in range(m + 1)]",
    "[num + 1 for num in range(n + 1)] * (m + 1)",
    "[(num + 1,) * (n + 1) for num in range(m + 1)]",
    "[[[]] * (n + 1) for _ in range(m + 1)]",
    "[set() * (n + 1) for _ in range(m + 1)]",
    "[[True] * (n + 1) for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[[]] * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1) for _ in range(m + 1)]",
    "[[True] * (n + 1) for _ in range(m + 1)]",
    "[[{}]* (n + 1) for _ in range(m + 1)]",
    "[['placeholder'] * (n + 1) for _ in range(m + 1)]",
    "[[(lambda: None)()] * (n + 1) for _ in range(m + 1)]",
    "[[len]* (n + 1) for _ in range(m + 1)]",
    "[[object()] * (n + 1) for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1) for _ in range(m + 1)]",
    "[[] for _ in range(m + 1)]",
    "[{} for _ in range(m + 1)]",
    "[set() for _ in range(m + 1)]",
    "[()] * (n + 1) for _ in range(m + 1)]",
    "[[True] * (n + 1) for _ in range(m + 1)]",
    "[[object()] * (n + 1) for _ in range(m + 1)]",
    "[[sys.maxsize] * (n + 1) for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[[[]] * (n + 1) for _ in range(m + 1)]",
    "[[False] * (n + 1) for _ in range(m + 1)]",
    "[[{}] * (n + 1) for _ in range(m + 1)]",
    "[[set()] * (n + 1) for _ in range(m + 1)]",
    "[[{} for _ in range(k)] for k in range(1, n + 2)]",
    "[[getattr(sys.modules[__name__], __)] * (n + 1) for _ in range(m + 1)]",
    "[[SomeClass() for _ in range(k)] for k in range(1, n + 2)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1) for _ in range(m + 1)]",
    "[[] * (n + 1) for _ in range(m + 1)]",
    "[[[]] * (n + 1) for _ in range(m + 1)]",
    "[[False] * (n + 1) for _ in range(m + 1)]",
    "[[True] * (n + 1) for _ in range(m + 1)]",
    "[[\"\"] * (n + 1) for _ in range(m + 1)]",
    "[[{}] * (n + 1) for _ in range(m + 1)]",
    "[[(1)] * (n + 1) for _ in range(m + 1)]",
    "[[(1,), (2,)] * (n + 1) for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[[] * (n + 1) for _ in range(m + 1)]",
    "[{} * (n + 1) for _ in range(m + 1)]",
    "[0 * (n + 1) for _ in range(m + 1)]",
    "[True * (n + 1) for _ in range(m + 1)]",
    "[1.0 * (n + 1) for _ in range(m + 1)]",
    "[object() * (n + 1) for _ in range(m + 1)]",
    "[() * (n + 1) for _ in range(m + 1)]",
    "[set() * (n + 1) for _ in range(m + 1)]",
    "[['placeholder'] * (n + 1) for _ in range(m + 1)]",
    "[None * (n + 1) for _ in range(m + 1)]",
    "[0 * (n + 1) for _ in range(m + 1)]",
    "[['value'] * (n + 1) for _ in range(m + 1)]",
    "[True * (n + 1) for _ in range(m + 1)]",
    "[False * (n + 1) for _ in range(m + 1)]",
    "['' * (n + 1) for _ in range(m + 1)]",
    "[[] * (n + 1) for _ in range(m + 1)]",
    "[{} * (n + 1) for _ in range(m + 1)]",
    "[[()] * (n + 1) for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1) for _ in range(m + 1)]",
    "[[] for _ in range(m + 1)]",
    "[{} for _ in range(m + 1)]",
    "[True for _ in range(m + 1)]",
    "[False for _ in range(m + 1)]",
    "['' for _ in range(m + 1)]",
    "[() for _ in range(m + 1)]",
    "[set() for _ in range(m + 1)]",
    "[dict() for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1) for _ in range(m + 1)]",
    "[[[]] * (n + 1) for _ in range(m + 1)]",
    "[[True] * (n + 1) for _ in range(m + 1)]",
    "[['placeholder'] * (n + 1) for _ in range(m + 1)]",
    "[[{} for _ in range(n + 1)] for _ in range(m + 1)]",
    "[[(i, j) for j in range(n + 1)] for i in range(m + 1)]",
    "[[chr(65 + j) for j in range(n + 1)] for _ in range(m + 1)]",
    "[[float(j) for j in range(n + 1)] for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1) for _ in range(m + 1)]",
    "[[] * (n + 1) for _ in range(m + 1)]",
    "[{} * (n + 1) for _ in range(m + 1)]",
    "[[False] * (n + 1) for _ in range(m + 1)]",
    "[[0.0] * (n + 1) for _ in range(m + 1)]",
    "[['hello'] * (n + 1) for _ in range(m + 1)]",
    "[[0, ''] * (n + 1) for _ in range(m + 1)]",
    "[[2.5, True] * (n + 1) for _ in range(m + 1)]",
    "[None] * (n + 1) for _ in range(m + 1)",
    "1 * (n + 1) for _ in range(m + 1)",
    "[True] * (n + 1) for _ in range(m + 1)",
    "\"hello\" * (n + 1) for _ in range(m + 1)",
    "[1, 2, 3] * (n + 1) for _ in range(m + 1)",
    "(n + 1) for _ in range(m + 1)",
    "list() * (n + 1) for _ in range(m + 1)",
    "{} * (n + 1) for _ in range(m + 1)",
    "[[]] * (n + 1) for _ in range(m + 1)",
    "(n + 1) for _ in range(m + 1)",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[0 * (n + 1) for _ in range(m + 1)]",
    "[[0.0] * (n + 1) for _ in range(m + 1)]",
    "[[[]] * (n + 1) for _ in range(m + 1)]",
    "[[True] * (n + 1) for _ in range(m + 1)]",
    "[[False] * (n + 1) for _ in range(m + 1)]",
    "[[{}] * (n + 1) for _ in range(m + 1)]",
    "[[set()] * (n + 1) for _ in range(m + 1)]",
    "[[object()] * (n + 1) for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[[] * (n + 1) for _ in range(m + 1)]",
    "[[{}] * (n + 1) for _ in range(m + 1)]",
    "[[()] * (n + 1) for _ in range(m + 1)]",
    "[['placeholder'] * (n + 1) for _ in range(m + 1)]",
    "[[True] * (n + 1) for _ in range(m + 1)]",
    "[[0.0] * (n + 1) for _ in range(m + 1)]",
    "[[object()] * (n + 1) for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1) for _ in range(m + 1)]",
    "[[[]] * (n + 1) for _ in range(m + 1)]",
    "[[{}] * (n + 1) for _ in range(m + 1)]",
    "[[() * (n + 1)] * (m + 1)]",
    "[[set()] * (n + 1) for _ in range(m + 1)]",
    "[[float('inf')] * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[[(lambda: None).__class__()] * (n + 1) for _ in range(m + 1)]",
    "[[True] * (n + 1) for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[__name__] * (n + 1) for _ in range(m + 1)]",
    "[[[]] * (n + 1) for _ in range(m + 1)]",
    "[[\"\"] * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1) for _ in range(m + 1)]",
    "[[\"placeholder\"] * (n + 1) for _ in range(m + 1)]",
    "[[False] * (n + 1) for _ in range(m + 1)]",
    "[[{}] * (n + 1) for _ in range(m + 1)]",
    "[[0.0] * (n + 1) for _ in range(m + 1)]",
    "[[()]* (n + 1) for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[] * (n + 1) for _ in range(m + 1)]",
    "[0 * (n + 1) for _ in range(m + 1)]",
    "['' * (n + 1) for _ in range(m + 1)]",
    "[{} * (n + 1) for _ in range(m + 1)]",
    "[[[]] * (n + 1) for _ in range(m + 1)]",
    "[0.0 * (n + 1) for _ in range(m + 1)]",
    "[False * (n + 1) for _ in range(m + 1)]",
    "[() * (n + 1) for _ in range(m + 1)]",
    "[(None,) * (n + 1) for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[[] * (n + 1) for _ in range(m + 1)]",
    "[[False] * (n + 1) for _ in range(m + 1)]",
    "[[{}] * (n + 1) for _ in range(m + 1)]",
    "[[3.14] * (n + 1) for _ in range(m + 1)]",
    "[['hello'] * (n + 1) for _ in range(m + 1)]",
    "[['a', 'b'] * (n + 1) for _ in range(m + 1)]",
    "[[(i+j) for j in range(n + 1)] for i in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[[] * (n + 1) for _ in range(m + 1)]",
    "[{} * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1) for _ in range(m + 1)]",
    "[[False] * (n + 1) for _ in range(m + 1)]",
    "[['a'] * (n + 1) for _ in range(m + 1)]",
    "[[1.0] * (n + 1) for _ in range(m + 1)]",
    "[[() or None] * (n + 1) for _ in range(m + 1)]",
    "[[set()] * (n + 1) for _ in range(m + 1)]",
    "[['x'] * (n + 1) for _ in range(m + 1)]",
    "[range(__)] * (n + 1) for _ in range(m + 1)]",
    "[True] * (n + 1) for _ in range(m + 1)]",
    "[1] * (n + 1) for _ in range(m + 1)]",
    "['hello'] * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1)] * (m + 1)",
    "[((__ % 2) == 0)] * (n + 1) for _ in range(m + 1)]",
    "['a', 'b', 'c'] * (n + 1) for _ in range(m + 1)]",
    "[[i] * (n + 1) for i in range(m + 1)]",
    "[chr(i + ord('a'))] * (n + 1) for _ in range(m + 1)]",
    "# Variant 1\n[[None] * (n + 1) for _ in range(m + 1)]\n\n# Variant 2\n[[0] * (n + 1) for _ in range(m + 1)]\n\n# Variant 3\n[[''] * (n + 1) for _ in range(m + 1)]\n\n# Variant 4\n[[[]] * (n + 1) for _ in range(m + 1)]\n\n# Variant 5\n[[True] * (n + 1) for _ in range(m + 1)]\n\n# Variant 6\n[[False] * (n + 1) for _ in range(m + 1)]\n\n# Variant 7\n[[{}] * (n + 1) for _ in range(m + 1)]\n\n# Variant 8\n[[()] * (n + 1) for _ in range(m + 1)]\n\n# Variant 9\n[[set()] * (n + 1) for _ in range(m + 1)]\n\n# Variant 10\n[['__'] * (n + 1) for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[0 * (n + 1) for _ in range(m + 1)]",
    "[[] * (n + 1) for _ in range(m + 1)]",
    "[(0,) * (n + 1) for _ in range(m + 1)]",
    "[[] for _ in range(m + 1)]",
    "[() for _ in range(m + 1)]",
    "['' for _ in range(m + 1)]",
    "[0 for _ in range(m + 1)]",
    "[None for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1) for _ in range(m + 1)]",
    "[[] * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[{} * (n + 1) for _ in range(m + 1)]",
    "[() * (n + 1) for _ in range(m + 1)]",
    "[set() * (n + 1) for _ in range(m + 1)]",
    "[dict() * (n + 1) for _ in range(m + 1)]",
    "[True * (n + 1) for _ in range(m + 1)]",
    "[Any * (n + 1) for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[[] * (n + 1) for _ in range(m + 1)]",
    "[[False] * (n + 1) for _ in range(m + 1)]",
    "[['*' for _ in range(n + 1)] for _ in range(m + 1)]",
    "[[[] for _ in range(n + 1)] for _ in range(m + 1)]",
    "[[0.0] * (n + 1) for _ in range(m + 1)]",
    "[[{} for _ in range(n + 1)] for _ in range(m + 1)]",
    "[[set() for _ in range(n + 1)] for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[[[]] * (n + 1) for _ in range(m + 1)]",
    "[[{}]* (n + 1) for _ in range(m + 1)]",
    "[[False] * (n + 1) for _ in range(m + 1)]",
    "[[0.0] * (n + 1) for _ in range(m + 1)]",
    "[['Hello'] * (n + 1) for _ in range(m + 1)]",
    "[[()] * (n + 1) for _ in range(m + 1)]",
    "[[object()] * (n + 1) for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1) for _ in range(m + 1)]",
    "[[] * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[[False] * (n + 1) for _ in range(m + 1)]",
    "[{} * (n + 1) for _ in range(m + 1)]",
    "[[()] * (n + 1) for _ in range(m + 1)]",
    "[[set()] * (n + 1) for _ in range(m + 1)]",
    "[[dict()] * (n + 1) for _ in range(m + 1)]",
    "[[object()] * (n + 1) for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[['placeholder'] * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1) for _ in range(m + 1)]",
    "[[False] * (n + 1) for _ in range(m + 1)]",
    "[[[]] * (n + 1) for _ in range(m + 1)]",
    "[[{}] * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[[-1] * (n + 1) for _ in range(m + 1)]",
    "[[0.0] * (n + 1) for _ in range(m + 1)]",
    "[[True] * (n + 1) for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[[] * (n + 1) for _ in range(m + 1)]",
    "[{''} * (n + 1) for _ in range(m + 1)]",
    "[{} * (n + 1) for _ in range(m + 1)]",
    "[set() * (n + 1) for _ in range(m + 1)]",
    "[dict() * (n + 1) for _ in range(m + 1)]",
    "[str() * (n + 1) for _ in range(m + 1)]",
    "[range(0) * (n + 1) for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[] * (n + 1) for _ in range(m + 1)]",
    "[{} * (n + 1) for _ in range(m + 1)]",
    "[set() * (n + 1) for _ in range(m + 1)]",
    "[dict() * (n + 1) for _ in range(m + 1)]",
    "[\"\" * (n + 1) for _ in range(m + 1)]",
    "[0 * (n + 1) for _ in range(m + 1)]",
    "[True * (n + 1) for _ in range(m + 1)]",
    "[1.0 * (n + 1) for _ in range(m + 1)]",
    "[(lambda: x)() * (n + 1) for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[{} * (n + 1) for _ in range(m + 1)]",
    "[['filler'] * (n + 1) for _ in range(m + 1)]",
    "[[False] * (n + 1) for _ in range(m + 1)]",
    "[([0] * (n + 1)) for _ in range(m + 1)]",
    "[(\"\") * (n + 1) for _ in range(m + 1)]",
    "[['placeholder'] * (n + 1) for _ in range(m + 1)]",
    "[[] * (n + 1) for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[{} * (n + 1) for _ in range(m + 1)]",
    "[0 * (n + 1) for _ in range(m + 1)]",
    "['fill_me' * (n + 1) for _ in range(m + 1)]",
    "[[1] * (n + 1) for _ in range(m + 1)]",
    "[True * (n + 1) for _ in range(m + 1)]",
    "[[] * (n + 1) for _ in range(m + 1)]",
    "['undefined_token' * (n + 1) for _ in range(m + 1)]",
    "[object() * (n + 1) for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1) for _ in range(m + 1)]",
    "[[]] * (n + 1) for _ in range(m + 1)]",
    "[{}] * (n + 1) for _ in range(m + 1)]",
    "[[True] * (n + 1) for _ in range(m + 1)]",
    "[['a'] * (n + 1) for _ in range(m + 1)]",
    "[src] * (n + 1) for _ in range(m + 1)]",
    "[[10.5] * (n + 1) for _ in range(m + 1)]",
    "[*range(n)] * (n + 1) for _ in range(m + 1)]",
    "[[[]] * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1) for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[True] * (n + 1) for _ in range(m + 1)]",
    "[['placeholder'] * (n + 1) for _ in range(m + 1)]",
    "[{} for _ in range(m + 1)]",
    "[() for _ in range(m + 1)]",
    "[set() for _ in range(m + 1)]",
    "[dict() for _ in range(m + 1)]",
    "['' for _ in range(m + 1)]",
    "[None] * (n + 1) for _ in range(m + 1)",
    "[True] * (n + 1) for _ in range(m + 1)",
    "[1] * (n + 1) for _ in range(m + 1)",
    "[\"hello\"] * (n + 1) for _ in range(m + 1)",
    "[0.5] * (n + 1) for _ in range(m + 1)",
    "[[]] * (n + 1) for _ in range(m + 1)",
    "[set()] * (n + 1) for _ in range(m + 1)",
    "[{}] * (n + 1) for _ in range(m + 1)",
    "[[None] * (n + 1)] * (m + 1)",
    "[[1] * (n + 1)] * (m + 1)",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[[] * (n + 1) for _ in range(m + 1)]",
    "[{} * (n + 1) for _ in range(m + 1)]",
    "[0 * (n + 1) for _ in range(m + 1)]",
    "[True * (n + 1) for _ in range(m + 1)]",
    "['undefined' * (n + 1) for _ in range(m + 1)]",
    "[() * (n + 1) for _ in range(m + 1)]",
    "['placeholder' * (n + 1) for _ in range(m + 1)]",
    "[1.23 * (n + 1) for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1) for _ in range(m + 1)]",
    "[['unknown'] * (n + 1) for _ in range(m + 1)]",
    "[[False] * (n + 1) for _ in range(m + 1)]",
    "[['placeholder'] * (n + 1) for _ in range(m + 1)]",
    "[['undefined'] * (n + 1) for _ in range(m + 1)]",
    "[[] * (n + 1) for _ in range(m + 1)]",
    "[[0.0] * (n + 1) for _ in range(m + 1)]",
    "[['EMPTY'] * (n + 1) for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1) for _ in range(m + 1)]",
    "[[False] * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[[] * (n + 1) for _ in range(m + 1)]",
    "[{} * (n + 1) for _ in range(m + 1)]",
    "[[()] * (n + 1) for _ in range(m + 1)]",
    "[set() * (n + 1) for _ in range(m + 1)]",
    "[dict() * (n + 1) for _ in range(m + 1)]",
    "[object() * (n + 1) for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[[[]] * (n + 1) for _ in range(m + 1)]",
    "[[{}] * (n + 1) for _ in range(m + 1)]",
    "[[True] * (n + 1) for _ in range(m + 1)]",
    "[[False] * (n + 1) for _ in range(m + 1)]",
    "[[0.0] * (n + 1) for _ in range(m + 1)]",
    "[['placeholder'] * (n + 1) for _ in range(m + 1)]",
    "[[{'key': 'value'}] * (n + 1) for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1) for _ in range(m + 1)]",
    "[['value'] * (n + 1) for _ in range(m + 1)]",
    "[[True] * (n + 1) for _ in range(m + 1)]",
    "[[False] * (n + 1) for _ in range(m + 1)]",
    "[['x'] * (n + 1) for _ in range(m + 1)]",
    "[[1.0] * (n + 1) for _ in range(m + 1)]",
    "[[[]] * (n + 1) for _ in range(m + 1)]",
    "[[(1, 2)] * (n + 1) for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1) for _ in range(m + 1)]",
    "[[] * (n + 1) for _ in range(m + 1)]",
    "[''] * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1)] * (m + 1)",
    "[{} for _ in range(m + 1)]",
    "[set() for _ in range(m + 1)]",
    "[True for _ in range(m + 1)]",
    "[False] * (n + 1) for _ in range(m + 1)",
    "[object() for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[{} for _ in range(m + 1)]",
    "[[] for _ in range(m + 1)]",
    "[set() for _ in range(m + 1)]",
    "[() for _ in range(m + 1)]",
    "[dict() for _ in range(m + 1)]",
    "[object() for _ in range(m + 1)]",
    "[True for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1) for _ in range(m + 1)]",
    "[[[]] * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[[False] * (n + 1) for _ in range(m + 1)]",
    "[[0.0] * (n + 1) for _ in range(m + 1)]",
    "[['placeholder'] * (n + 1) for _ in range(m + 1)]",
    "[{} * (n + 1) for _ in range(m + 1)]",
    "['fill_me' * (n + 1) for _ in range(m + 1)]",
    "[() * (n + 1) for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[[]] * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1) for _ in range(m + 1)]",
    "[[True] * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[{} * (n + 1) for _ in range(m + 1)]",
    "[set() * (n + 1) for _ in range(m + 1)]",
    "['placeholder' * (n + 1) for _ in range(m + 1)]",
    "[() * (n + 1) for _ in range(m + 1)]",
    "['123' * (n + 1) for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[['None'] * (n + 1) for _ in range(m + 1)]",
    "[[False] * (n + 1) for _ in range(m + 1)]",
    "[[[]] * (n + 1) for _ in range(m + 1)]",
    "[[{}] * (n + 1) for _ in range(m + 1)]",
    "[[()] * (n + 1) for _ in range(m + 1)]",
    "[['hello'] * (n + 1) for _ in range(m + 1)]",
    "[[1, 2, 3] * (n + 1) for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[[False] * (n + 1) for _ in range(m + 1)]",
    "[[[]] * (n + 1) for _ in range(m + 1)]",
    "[[{}] * (n + 1) for _ in range(m + 1)]",
    "[[set()] * (n + 1) for _ in range(m + 1)]",
    "[({}.__class__)() * (n + 1) for _ in range(m + 1)]",
    "[('''__''') * (n + 1) for _ in range(m + 1)]",
    "[(__import__('math').inf) * (n + 1) for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1) for _ in range(m + 1)]",
    "[[[]] * (n + 1) for _ in range(m + 1)]",
    "[[{}] * (n + 1) for _ in range(m + 1)]",
    "[set() * (n + 1) for _ in range(m + 1)]",
    "[[False] * (n + 1) for _ in range(m + 1)]",
    "[() * (n + 1) for _ in range(m + 1)]",
    "[[0.0] * (n + 1) for _ in range(m + 1)]",
    "[['placeholder'] * (n + 1) for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1)for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[[] * (n + 1) for _ in range(m + 1)]",
    "[[True] * (n + 1) for _ in range(m + 1)]",
    "[[False] * (n + 1) for _ in range(m + 1)]",
    "[[0.0] * (n + 1) for _ in range(m + 1)]",
    "[['hello'] * (n + 1) for _ in range(m + 1)]",
    "[[{}] * (n + 1) for _ in range(m + 1)]",
    "[[()] * (n + 1) for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[] * (n + 1) for _ in range(m + 1)]",
    "[1 * (n + 1) for _ in range(m + 1)]",
    "[0 * (n + 1) for _ in range(m + 1)]",
    "[\"\" * (n + 1) for _ in range(m + 1)]",
    "[() * (n + 1) for _ in range(m + 1)]",
    "[,] * (n + 1) for _ in range(m + 1)]",
    "[{} * (n + 1) for _ in range(m + 1)]",
    "[set() * (n + 1) for _ in range(m + 1)]",
    "[range(n + 1) for _ in range(m + 1)]",
    "# Variant 1\n[[None] * (n + 1) for _ in range(m + 1)]\n\n# Variant 2\n[[''] * (n + 1) for _ in range(m + 1)]\n\n# Variant 3\n[[0] * (n + 1) for _ in range(m + 1)]\n\n# Variant 4\n[['foo'] * (n + 1) for _ in range(m + 1)]\n\n# Variant 5\n[[True] * (n + 1) for _ in range(m + 1)]\n\n# Variant 6\n[[[]] * (n + 1) for _ in range(m + 1)]\n\n# Variant 7\n[[{}] * (n + 1) for _ in range(m + 1)]\n\n# Variant 8\n[[set()] * (n + 1) for _ in range(m + 1)]\n\n# Variant 9\n[[object()] * (n + 1) for _ in range(m + 1)]\n\n# Variant 10\n[['{0}'.format(i)] * (n + 1) for i in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1) for _ in range(m + 1)]",
    "[[True] * (n + 1) for _ in range(m + 1)]",
    "[[[]] * (n + 1) for _ in range(m + 1)]",
    "[[{}] * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[[0.0] * (n + 1) for _ in range(m + 1)]",
    "[['placeholder'] * (n + 1) for _ in range(m + 1)]",
    "[[()]: * (n + 1) for _ in range(m + 1)]",
    "[[set()] * (n + 1) for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1) for _ in range(m + 1)]",
    "[['__'] * (n + 1) for _ in range(m + 1)]",
    "[[_] * (n + 1) for _ in range(m + 1)]",
    "[[[]] * (n + 1) for _ in range(m + 1)]",
    "[['undefined'] * (n + 1) for _ in range(m + 1)]",
    "[[True] * (n + 1) for _ in range(m + 1)]",
    "[[0.0] * (n + 1) for _ in range(m + 1)]",
    "[[[] for _ in range(n + 1)] for _ in range(m + 1)]",
    "[['token'] * (n + 1) for _ in range(m + 1)]",
    "[['missing'] * (n + 1) for _ in range(m + 1)]",
    "[['empty'] * (n + 1) for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1) for _ in range(m + 1)]",
    "[['placeholder'] * (n + 1) for _ in range(m + 1)]",
    "[[True] * (n + 1) for _ in range(m + 1)]",
    "[['undefined'] * (n + 1) for _ in range(m + 1)]",
    "[['unknown'] * (n + 1) for _ in range(m + 1)]",
    "[[False] * (n + 1) for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[] * (n + 1) for _ in range(m + 1)]",
    "[0 * (n + 1) for _ in range(m + 1)]",
    "['' * (n + 1) for _ in range(m + 1)]",
    "[0.0 * (n + 1) for _ in range(m + 1)]",
    "[{} * (n + 1) for _ in range(m + 1)]",
    "[True * (n + 1) for _ in range(m + 1)]",
    "[() * (n + 1) for _ in range(m + 1)]",
    "[' ' * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[{} * (n + 1) for _ in range(m + 1)]",
    "[() * (n + 1) for _ in range(m + 1)]",
    "[0 * (n + 1) for _ in range(m + 1)]",
    "[1 * (n + 1) for _ in range(m + 1)]",
    "[True * (n + 1) for _ in range(m + 1)]",
    "[False * (n + 1) for _ in range(m + 1)]",
    "['string' * (n + 1) for _ in range(m + 1)]",
    "[{1} * (n + 1) for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[] * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[{} * (n + 1) for _ in range(m + 1)]",
    "[() * (n + 1) for _ in range(m + 1)]",
    "[len([]) * (n + 1) for _ in range(m + 1)]",
    "[True * (n + 1) for _ in range(m + 1)]",
    "[float('nan')] * (n + 1) for _ in range(m + 1)]",
    "[range(n + 1)] * (m + 1)",
    "[None] * (n + 1) for _ in range(m + 1)]",
    "[0] * (n + 1) for _ in range(m + 1)]",
    "[''] * (n + 1) for _ in range(m + 1)]",
    "[[]] * (n + 1) for _ in range(m + 1)]",
    "[True] * (n + 1) for _ in range(m + 1)]",
    "[False] * (n + 1) for _ in range(m + 1)]",
    "[float('inf')] * (n + 1) for _ in range(m + 1)]",
    "[object()] * (n + 1) for _ in range(m + 1)]",
    "[dict()] * (n + 1) for _ in range(m + 1)]",
    "[() * (n + 1) for _ in range(m + 1)]",
    "[[1] * (n + 1) for _ in range(m + 1)]",
    "[['a'] * (n + 1) for _ in range(m + 1)]",
    "[0.5 * (n + 1) for _ in range(m + 1)]",
    "['hello'] * (n + 1) for _ in range(m + 1)]",
    "[None] * (n + 1) for _ in range(m + 1)]",
    "[True] * (n + 1) for _ in range(m + 1)]",
    "[object()] * (n + 1) for _ in range(m + 1)]",
    "[lambda x: x**2] * (n + 1) for _ in range(m + 1)]",
    "[[ 1,2,3 ]] * (n + 1) for _ in range(m + 1)]",
    "[[[x for x in range(n)]] * (n + 1) for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]\n\n[[0] * (n + 1) for _ in range(m + 1)]\n\n[[''] * (n + 1) for _ in range(m + 1)]\n\n[['hello'] * (n + 1) for _ in range(m + 1)]\n\n[{} * (n + 1) for _ in range(m + 1)]\n\n[{1: 'one'} * (n + 1) for _ in range(m + 1)]\n\n[() * (n + 1) for _ in range(m + 1)]\n\n[[] * (n + 1) for _ in range(m + 1)]\n\n[set() * (n + 1) for _ in range(m + 1)]\n\n[[True] * (n + 1) for _ in range(m + 1)]",
    "[[var] * (n + 1) for _ in range(m + 1)]",
    "[[hole] * (n + 1) for _ in range(m + 1)]",
    "[[undefined] * (n + 1) for _ in range(m + 1)]",
    "[[token] * (n + 1) for _ in range(m + 1)]",
    "[[__] * (n + 1) for _ in range(m + 1)]",
    "[[fill] * (n + 1) for _ in range(m + 1)]",
    "[[value] * (n + 1) for _ in range(m + 1)]",
    "[[element] * (n + 1) for _ in range(m + 1)]",
    "[[_] * (n + 1) for _ in range(m + 1)]",
    "[[x] * (n + 1) for _ in range(m + 1)]",
    "[[1] * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1) for _ in range(m + 1)]",
    "[['A'] * (n + 1) for _ in range(m + 1)]",
    "[[] * (n + 1) for _ in range(m + 1)]",
    "[{} * (n + 1) for _ in range(m + 1)]",
    "[['hello'] * (n + 1) for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[True] * (n + 1) for _ in range(m + 1)]",
    "[['apple', 'banana'] * (n + 1) for _ in range(m + 1)]",
    "[[(1, 2)] * (n + 1) for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[[] * (n + 1) for _ in range(m + 1)]",
    "[0 * (n + 1) for _ in range(m + 1)]",
    "[True * (n + 1) for _ in range(m + 1)]",
    "[{} * (n + 1) for _ in range(m + 1)]",
    "[() * (n + 1) for _ in range(m + 1)]",
    "[set() * (n + 1) for _ in range(m + 1)]",
    "[dict() * (n + 1) for _ in range(m + 1)]",
    "['hello' * (n + 1) for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1) for _ in range(m + 1)]",
    "[[[]] * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[[False] * (n + 1) for _ in range(m + 1)]",
    "[[{}] * (n + 1) for _ in range(m + 1)]",
    "[[()] * (n + 1) for _ in range(m + 1)]",
    "[[object()] * (n + 1) for _ in range(m + 1)]",
    "[[set()] * (n + 1) for _ in range(m + 1)]",
    "[[range(5)] * (n + 1) for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[[] * (n + 1) for _ in range(m + 1)]",
    "[{} * (n + 1) for _ in range(m + 1)]",
    "[() * (n + 1) for _ in range(m + 1)]",
    "[True * (n + 1) for _ in range(m + 1)]",
    "[False * (n + 1) for _ in range(m + 1)]",
    "[' ' * (n + 1) for _ in range(m + 1)]",
    "[[1,2,3] * (n + 1) for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[] * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[set() for _ in range(m + 1)]",
    "[['__'] * (n + 1) for _ in range(m + 1)]",
    "[len([]) * (n + 1) for _ in range(m + 1)]",
    "[([0] * (n + 1), ) for _ in range(m + 1)]",
    "[[args] * (n + 1) for _ in range(m + 1)]",
    "[{} for _ in range(m + 1)]",
    "[None] * (n + 1) for _ in range(m + 1)",
    "[True] * (n + 1) for _ in range(m + 1)",
    "[False] * (n + 1) for _ in range(m + 1)",
    "[0] * (n + 1) for _ in range(m + 1)",
    "[1] * (n + 1) for _ in range(m + 1)",
    "[''] * (n + 1) for _ in range(m + 1)",
    "[{}] * (n + 1) for _ in range(m + 1)",
    "[()] * (n + 1) for _ in range(m + 1)",
    "[set()] * (n + 1) for _ in range(m + 1)",
    "[[]] * (n + 1) for _ in range(m + 1)",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[True] * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1) for _ in range(m + 1)]",
    "[[] * (n + 1) for _ in range(m + 1)]",
    "[[{}]* (n + 1) for _ in range(m + 1)]",
    "[[()]* (n + 1) for _ in range(m + 1)]",
    "[[object()]* (n + 1) for _ in range(m + 1)]",
    "[[[] for _ in range(k)]* (n + 1) for _ in range(m + 1)]",
    "[[[x for x in range(10)]*3] * (n + 1) for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[] * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1) for _ in range(m + 1)]",
    "[set() * (n + 1) for _ in range(m + 1)]",
    "[[[]] * (n + 1) for _ in range(m + 1)]",
    "[[[] for _ in range(n + 1)] for _ in range(m + 1)]",
    "[[dict()] * (n + 1) for _ in range(m + 1)]",
    "[[dict() for _ in range(n + 1)] for _ in range(m + 1)]",
    "[[object()] * (n + 1) for _ in range(m + 1)]",
    "[[object() for _ in range(n + 1)] for _ in range(m + 1)]",
    "[[__list__] * (n + 1) for _ in range(m + 1)]",
    "[[__item__] * (n + 1) for _ in range(m + 1)]",
    "[[__matrix__] * (n + 1) for _ in range(m + 1)]",
    "[[__element__] * (n + 1) for _ in range(m + 1)]",
    "[[__row__] * (n + 1) for _ in range(m + 1)]",
    "[[__sublist__] * (n + 1) for _ in range(m + 1)]",
    "[[__val__] * (n + 1) for _ in range(m + 1)]",
    "[[__item_list__] * (n + 1) for _ in range(m + 1)]",
    "[[__cell__] * (n + 1) for _ in range(m + 1)]",
    "[[__entry__] * (n + 1) for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1) for _ in range(m + 1)]",
    "[[True] * (n + 1) for _ in range(m + 1)]",
    "[[''] * (n + 1) for _ in range(m + 1)]",
    "[[[]] * (n + 1) for _ in range(m + 1)]",
    "[[{}] * (n + 1) for _ in range(m + 1)]",
    "[[set()] * (n + 1) for _ in range(m + 1)]",
    "[[(lambda: None)()] * (n + 1) for _ in range(m + 1)]",
    "[(x := 0) * (n + 1) for _ in range(m + 1)]",
    "[[f(x) for x in range(n + 1)] for _ in range(m + 1)]",
    "[[None] * (n + 1) for _ in range(m + 1)]",
    "[[0] * (n + 1) for _ in range(m + 1)]",
    "[[] * (n + 1) for _ in range(m + 1)]",
    "[[[]] * (n + 1) for _ in range(m + 1)]",
    "[{} * (n + 1) for _ in range(m + 1)]",
    "[{None}] * (n + 1) for _ in range(m + 1)]",
    "[{} for _ in range(m + 1)]",
    "[[{} for _ in range(n + 1)] for _ in range(m + 1)]",
    "[() * (n + 1) for _ in range(m + 1)]",
    "[[()] * (n + 1) for _ in range(m + 1)]"
  ],
  "num_code_blocks": 1702
}
