{
  "template": "if s == target:\n    ans.append(t[__])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
  "lang": "py",
  "temperature": 0.7,
  "code_blocks": [
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[6])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[7])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[8])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[9])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[6])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[7])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[8])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[6])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[7])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[8])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[6])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[7])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[8])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[6])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[7])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[8])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[9])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[6])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[7])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[8])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[100])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[42])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[999])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[7])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[6])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[7])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[8])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-6])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[6])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[7])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[8])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[u])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[s])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[len(t)-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[u-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[len(t)-2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[6])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[7])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[8])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[7])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[8])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[6])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[9])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[6])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[7])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[8])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[6])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[7])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[8])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[7])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[6])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[7])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[8])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[9])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[6])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[6])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[7])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[8])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[7])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[6])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[6])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[7])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[8])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[9])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[u])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[6])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[7])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[8])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[len(t)-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[6])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[7])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[8])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[6])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[7])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[8])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[7])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-7])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[6])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[8])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[7])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[6])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[7])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[8])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[9])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[6])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[7])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[8])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[6])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[7])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[8])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[9])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[6])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[7])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[8])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[6])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[7])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[8])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[9])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[6])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[7])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[8])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[6])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[7])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[8])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[6])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[7])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[8])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[6])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[7])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[8])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[6])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[7])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[8])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[6])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[7])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[8])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[6])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[7])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[8])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[6])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[6])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[7])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[8])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[6])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[7])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[8])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[7])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[6])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[6])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[7])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[8])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[6])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[7])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[8])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[len(t)-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[6])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[6])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[7])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[8])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[10])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[42])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[100])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-10])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[6])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[7])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[8])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[6])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[7])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[8])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[6])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[7])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[8])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[6])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[7])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[8])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[6])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[7])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[8])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[6])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[7])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[8])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[6])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[7])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[8])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[6])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[7])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[8])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[6])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[7])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[8])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[6])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[7])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[8])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[len(t)-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[6])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[7])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[8])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[7])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[i])\n    return",
    "if s == target:\n    ans.append(t[0])\n    return",
    "if s == target:\n    ans.append(t[1])\n    return",
    "if s == target:\n    ans.append(t[2])\n    return",
    "if s == target:\n    ans.append(t[3])\n    return",
    "if s == target:\n    ans.append(t[4])\n    return",
    "if s == target:\n    ans.append(t[5])\n    return",
    "if s == target:\n    ans.append(t[6])\n    return",
    "if s == target:\n    ans.append(t[7])\n    return",
    "if s == target:\n    ans.append(t[8])\n    return",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[42])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[999])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[s])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[i])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3.14])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[\"hello\"])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[True])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[None])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[6])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[7])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[8])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[6])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[7])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[8])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[6])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[7])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[8])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[6])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[7])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[8])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[len(t)-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[6])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[7])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[8])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[6])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[7])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[8])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[7])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[6])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[9])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[8])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[6])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[7])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[8])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[-1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[0])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[1])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[2])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[3])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[4])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[5])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[6])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[7])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()",
    "if s == target:\n    ans.append(t[8])\n    return\nif s > target:\n    return\nfor i in range(u, len(candidates)):\n    c = candidates[i]\n    t.append(c)\n    dfs(s + c, i, t)\n    t.pop()"
  ],
  "num_code_blocks": 900
}
