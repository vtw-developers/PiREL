{
  "template": "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[__])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
  "lang": "py",
  "temperature": 0.9,
  "code_blocks": [
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[i])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[a])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[foo])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[h])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[x])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[counter])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[res])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[foo_bar])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[my_var])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[placeholder])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[6])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[8])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[9])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[6])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[8])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[9])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[6])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[8])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[9])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[6])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[8])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[9])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[u])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(x, t):\n        ans.append(t[x])\n        for i in range(x, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[u])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[u])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[u])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[u])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[u])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[u])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[u])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[u])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[-1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[6])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[8])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[u])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[len(nums)-1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[42])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[-1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[999])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[-4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[17])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[6])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[8])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[9])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[6])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[8])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[9])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[6])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[8])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[9])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[6])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[8])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[9])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[u])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[u])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[u])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[u])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[u])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[u])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[u])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[u])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[u])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[u])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[6])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[-1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[-2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[u])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[u])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(1, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[u])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(2, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[u])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(3, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[u])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(4, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[u])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(5, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[u])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(6, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[u])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(7, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[u])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(8, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[u])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(9, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[6])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[8])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[9])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[6])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[8])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[9])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[6])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[8])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[9])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[6])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[8])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[9])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[6])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[8])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[9])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[6])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[8])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[9])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[6])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[8])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[9])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[6])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[8])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[9])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[len(t)])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[-1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[u])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[10])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[100])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[6])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[8])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[9])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[nums[i]])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[nums[i]])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[nums[i]])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[nums[i]])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[nums[i]])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[nums[i]])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[nums[i]])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[nums[i]])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[nums[i]])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[nums[i]])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[6])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[8])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[9])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[6])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[8])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[9])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[u])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[t])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(ans[u])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(ans[t])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(len(t))\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(nums[u])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(nums[t])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(nums[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(nums[t[0]])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(nums[u][0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t + [nums[u]])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t + [u])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t + [nums])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t + [u] + t)\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t + [nums[u], nums[u]])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t + [u, u])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t.append(nums[u]))\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t.append(u))\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t.append(nums))\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t.append(u.append(nums[u])))\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[6])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[8])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[9])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[6])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[8])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[9])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[6])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[8])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[9])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[6])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[8])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[9])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "# Variant 1\n### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "# Variant 2\n### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "# Variant 3\n### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "# Variant 4\n### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "# Variant 5\n### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "# Variant 6\n### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "# Variant 7\n### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[6])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "# Variant 8\n### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "# Variant 9\n### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[8])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "# Variant 10\n### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[9])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[-1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[6])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[8])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[6])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[8])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[9])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[6])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[8])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[9])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[-1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[10])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[100])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[-10])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[9])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[6])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[8])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[9])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[len(t)])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[-1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[__ - 1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[__ + 1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[int(__)])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[abs(__)])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[__ % len(t)])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[len(nums) - __])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0] + __)\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[6])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[8])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[9])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[-1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[6])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[8])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[len(t) - 1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[u])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[u + 1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[u - 1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[-1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[100])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[999])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[u])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[u])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [0])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[u])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(1, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(1, [0])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[u])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [1])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(1, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[u])\n        for i in range(1, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[6])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[8])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[9])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[-1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[6])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "# Variant 1\n### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans\n\n# Variant 2\n### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans\n\n# Variant 3\n### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans\n\n# Variant 4\n### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans\n\n# Variant 5\n### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans\n\n# Variant 6\n### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans\n\n# Variant 7\n### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[6])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans\n\n# Variant 8\n### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans\n\n# Variant 9\n### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[8])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans\n\n# Variant 10\n### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[9])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef subsetsWithDup(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[len(t)-1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef subsetsWithDup(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef subsetsWithDup(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[len(nums)-1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef subsetsWithDup(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(len(t)-1, [])\n    return ans",
    "from typing import *\ndef subsetsWithDup(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[u])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef subsetsWithDup(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(n, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef subsetsWithDup(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[u])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef subsetsWithDup(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[len(t)-1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef subsetsWithDup(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(0, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef subsetsWithDup(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(len(nums)-1, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[nums[i]])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[len(nums)-i])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[u])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[u+1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[u+2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[u-1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[6])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[8])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[9])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[len(t)-1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[-1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[u])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[-2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[-3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[nums[i]])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[u])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[len(nums)-1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[t[u]])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[u+1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[u-1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[t[u]])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[nums[i]])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[len(t)-1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[t[i]])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[u])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[-1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[len(nums)-1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[u-1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[99])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t + [nums[u]])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t + [u])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t + [nums[i]])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t + [i])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t + [nums[__]])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t + [__])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t + [nums[len(t)]])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t + [len(t)])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t + [nums[u + __]])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t + [__])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[len(t)])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[-1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [0])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [1])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [2])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [3])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [4])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [5])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[6])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[8])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[9])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[nums[u]])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[u])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[len(nums)])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[-1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[u+1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[-2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[u-1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[len(t)-1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[u])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[len(nums)-1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[-1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[999])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[10])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[6])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[8])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[9])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[6])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[8])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[9])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[u])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[6])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[8])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[-1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[6])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[8])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[9])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[-1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[6])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[8])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[u])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[u])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t['x'])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t['x'])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[123])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[123])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[i])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[i])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[i])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[i])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[i])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[i])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[i])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[i])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[i])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[i])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[u])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[6])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[8])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[len(t)])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[u])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[-1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[u-1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[-2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[u+1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[u+2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[u*2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[(u+1) * -1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[u])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[len(nums)])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[-1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[-2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[-3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[-len(nums)])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[len(nums)-1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[u])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[42])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[999])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[-1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[-999])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1000000])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[99999999])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[6])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[8])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[9])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[6])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[8])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[9])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[u])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[6])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[8])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[6])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[8])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[9])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[:])     # Fill in the hole with \"[:]\"\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t.copy())     # Fill in the hole with \"copy()\"\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(list(t))     # Fill in the hole with \"list(t)\"\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t.copy())     # Fill in the hole with \"copy()\"\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(list(t))     # Fill in the hole with \"list(t)\"\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[:])     # Fill in the hole with \"[:]\"\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(copy(t))     # Fill in the hole with \"copy(t)\"\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(list(t))     # Fill in the hole with \"list(t)\"\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[:])     # Fill in the hole with \"[:]\"\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(copy(t))     # Fill in the hole with \"copy(t)\"\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[6])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[8])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[9])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[6])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[8])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[9])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[6])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[8])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[9])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[-1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[6])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[8])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[u])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[len(t)-1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[len(t) - 2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[-1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[u-1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[len(t) + u])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[6])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[8])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[9])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[6])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[8])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[9])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[6])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[8])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[9])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[6])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[8])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[9])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[6])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[8])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[9])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[6])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[8])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[9])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[6])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[8])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[9])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[-1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[6])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[8])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[6])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[8])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[9])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[6])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[8])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[9])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans"
  ],
  "num_code_blocks": 891
}
