{
  "template": "[[grid[__][__]] * n for _ in range(m)]",
  "lang": "py",
  "temperature": 0.7,
  "code_blocks": [
    "[[grid[i][j]] * n for i in range(m) for j in range(n)]",
    "[[grid[row][col]] * n for row in range(m) for col in range(n)]",
    "[[grid[i][j]] * n for i, row in enumerate(grid) for j, _ in enumerate(row)]",
    "[[grid[row][col]] * n for row, row_vals in enumerate(grid) for col, _ in enumerate(row_vals)]",
    "[[grid[r][c]] * n for r in range(len(grid)) for c in range(len(grid[0]))]",
    "[[grid[r][c]] * n for r, _ in enumerate(grid) for c, _ in enumerate(grid[0])]",
    "[[grid[i][j]] * n for i in range(len(grid)) for j in range(len(grid[i]))]",
    "[[grid[r][c]] * n for r in range(m) for c in range(n)]",
    "[[grid[i][j]] * n for i in range(len(grid)) for j in range(len(grid[i]))]",
    "[[grid[row][col]] * n for row, _ in enumerate(grid) for col, _ in enumerate(grid[0])]",
    "[[grid[i][j]] * n for i in range(m) for j in range(n)]",
    "[[grid[i][j]] * n for j in range(n) for i in range(m)]",
    "[[grid[i][j]] * n for i in range(len(grid)) for j in range(len(grid[i]))]",
    "[[grid[row][col]] * n for row in range(m) for col in range(n)]",
    "[[grid[row][col]] * n for col in range(n) for row in range(m)]",
    "[[grid[row][col]] * n for row in range(len(grid)) for col in range(len(grid[row]))]",
    "[[grid[__][j]] * n for j in range(n)]",
    "[[grid[i][__]] * n for i in range(m)]",
    "[[grid[row][__]] * n for row in range(m)]",
    "[[grid[__][col]] * n for col in range(n)]",
    "[[grid[i][j]] * n for i in range(m) for j in range(n)]",
    "[[grid[i][j]] * n for j in range(n) for i in range(m)]",
    "[[grid[row][col]] * n for row in range(m) for col in range(n)]",
    "[[grid[row][col]] * n for col in range(n) for row in range(m)]",
    "[[grid[r][c]] * n for r in range(m) for c in range(n)]",
    "[[grid[r][c]] * n for c in range(n) for r in range(m)]",
    "[[grid[__][j]] * n for j in range(n) for _ in range(m)]",
    "[[grid[i][__]] * n for _ in range(m) for i in range(n)]",
    "[[grid[i][j]] * n for __ in range(m) for j in range(n)]",
    "[[grid[i][j]] * n for _ in range(m) for __ in range(n)]",
    "[[grid[i][j]] * n for i in range(m) for j in range(n)]",
    "[[grid[i][j]] * n for i in range(m) for j in range(len(grid[i]))]",
    "[[grid[row][col]] * n for row in range(m) for col in range(n)]",
    "[[grid[row][col]] * n for row in range(len(grid)) for col in range(len(grid[row]))]",
    "[[grid[x][y]] * n for x in range(m) for y in range(n)]",
    "[[grid[x][y]] * n for x in range(m) for y in range(len(grid[x]))]",
    "[[grid[row][col]] * n for row in range(m) for col in range(len(grid[row]))]",
    "[[grid[i][j]] * n for i in range(len(grid)) for j in range(len(grid[i]))]",
    "[[grid[i][j]] * n for i in range(m) for j in range(grid[i].__len__())]",
    "[[grid[row][col]] * n for row in range(m) for col in range(grid[row].__len__())]",
    "[[grid[i][j]] * n for i in range(m) for j in range(n)]",
    "[[grid[i][j]] * n for i in range(m) for j in range(len(grid[i]))]",
    "[[grid[row][col]] * n for row in range(m) for col in range(n)]",
    "[[grid[row][col]] * n for row in range(m) for col in range(len(grid[row]))]",
    "[[grid[row][col]] * n for row in range(len(grid)) for col in range(n)]",
    "[[grid[row][col]] * n for row in range(len(grid)) for col in range(len(grid[row]))]",
    "[[grid[i][j]] * n for i in range(m) for j in range(min(n, len(grid[i])))]",
    "[[grid[i][j]] * n for i in range(m) for j in range(min(n, len(grid[i])))]",
    "[[grid[i][j]] * n for i in range(min(m, len(grid))) for j in range(n)]",
    "[[grid[i][j]] * n for i in range(min(m, len(grid))) for j in range(len(grid[i]))]",
    "[[grid[i][j]] * n for i in range(m) for j in range(n)]",
    "[[grid[i][j]] * j for i in range(m) for j in range(n)]",
    "[[grid[i][j]] * i for i in range(m) for j in range(n)]",
    "[[grid[i][j]] * (i + j) for i in range(m) for j in range(n)]",
    "[[grid[i][j]] * (i * j) for i in range(m) for j in range(n)]",
    "[[grid[i][j]] * (i - j) for i in range(m) for j in range(n)]",
    "[[grid[i][j]] * (i // j) for i in range(m) for j in range(n) if j != 0]",
    "[[grid[i][j]] * (i % j) for i in range(m) for j in range(n) if j != 0]",
    "[[grid[i][j]] * (i ** j) for i in range(m) for j in range(n)]",
    "[[grid[i][j]] * (i + j + 1) for i in range(m) for j in range(n)]",
    "[[grid[i][j]] * n for _ in range(m)]",
    "[[grid[row][col]] * n for row in range(m)]",
    "[[grid[i][j]] * n for i in range(len(grid)) for j in range(len(grid[0]))]",
    "[[grid[row][col]] * n for row in grid for col in row]",
    "[[grid[i][j]] * n for i in range(len(grid)) for j in range(len(grid[i]))]",
    "[[grid[row][col]] * n for row in grid for col in range(len(row))]",
    "[[grid[i][j]] * n for i in range(len(grid)) for j in range(n)]",
    "[[grid[row][col]] * n for row in grid for col in range(n)]",
    "[[grid[i][j]] * n for i in range(m) for j in range(len(grid[i]))]",
    "[[grid[row][col]] * n for row in range(m) for col in range(len(grid[row]))]",
    "[[grid[x][y]] * n for x in range(m) for y in range(n)]",
    "[[grid[i][j]] * n for i in range(m) for j in range(n)]",
    "[[grid[row][col]] * n for row in range(m) for col in range(n)]",
    "[[grid[a][b]] * n for a in range(m) for b in range(n)]",
    "[[grid[row][col]] * n for row, col in itertools.product(range(m), range(n))]",
    "[[grid[i][j]] * n for i, j in itertools.product(range(m), range(n))]",
    "[[grid[x][y]] * n for x, y in itertools.product(range(m), range(n))]",
    "[[grid[__x][__y]] * n for __x in range(m) for __y in range(n)]",
    "[[grid[row][col]] * n for row, col in zip(range(m), range(n))]",
    "[[grid[i][j]] * n for i, j in zip(range(m), range(n))]",
    "[[grid[i][j]] * n for i in range(m) for j in range(n)]",
    "[[grid[row][col]] * n for row in range(m) for col in range(n)]",
    "[[grid[x][y]] * n for x in range(m) for y in range(n)]",
    "[[grid[i][j]] * n for i in range(len(grid)) for j in range(len(grid[0]))]",
    "[[grid[row][col]] * n for row in range(len(grid)) for col in range(len(grid[0]))]",
    "[[grid[x][y]] * n for x in range(len(grid)) for y in range(len(grid[0]))]",
    "[[grid[i][j]] * n for i in range(len(grid)) for j in range(n)]",
    "[[grid[row][col]] * n for row in range(len(grid)) for col in range(n)]",
    "[[grid[x][y]] * n for x in range(len(grid)) for y in range(n)]",
    "[[grid[i][j]] * n for i in range(m) for j in range(len(grid[0]))]",
    "[[grid[i][j]] * n for i in range(m) for j in range(n)]",
    "[[grid[row][col]] * n for row in range(m) for col in range(n)]",
    "[[grid[x][y]] * n for x in range(m) for y in range(n)]",
    "[[grid[a][b]] * n for a in range(m) for b in range(n)]",
    "[[grid[row][col]] * n for row, col in zip(range(m), range(n))]",
    "[[grid[i][j]] * n for i, j in zip(range(m), range(n))]",
    "[[grid[i][j]] * n for i, j in enumerate(range(n)) for _ in range(m)]",
    "[[grid[i][j]] * n for i in range(m) for j, _ in enumerate(range(n))]",
    "[[grid[i][j]] * n for i, _ in enumerate(range(m)) for j in range(n)]",
    "[[grid[i][j]] * n for i, _ in enumerate(range(m)) for j, _ in enumerate(range(n))]",
    "[[grid[i][j]] * n for i in range(m) for j in range(n)]",
    "[[grid[i][j]] * n for j in range(n) for i in range(m)]",
    "[[grid[i][j]] * n for i in range(m) for j in range(len(grid[i]))]",
    "[[grid[i][j]] * n for j in range(len(grid[i])) for i in range(m)]",
    "[[grid[row][col]] * n for row in range(m) for col in range(n)]",
    "[[grid[row][col]] * n for col in range(n) for row in range(m)]",
    "[[grid[row][col]] * n for row in range(m) for col in range(len(grid[row]))]",
    "[[grid[row][col]] * n for col in range(len(grid[row])) for row in range(m)]",
    "[[grid[i][j]] * n for i in range(len(grid)) for j in range(len(grid[i]))]",
    "[[grid[i][j]] * n for j in range(len(grid[i])) for i in range(len(grid))]",
    "[[grid[i][j]] * n for i in range(m) for j in range(n)]",
    "[[grid[i][j]] * n for j in range(n) for i in range(m)]",
    "[[grid[row][col]] * n for row in range(m) for col in range(n)]",
    "[[grid[row][col]] * n for col in range(n) for row in range(m)]",
    "[[grid[i][j]] * n for i in range(m) for j in range(len(grid[i]))]",
    "[[grid[i][j]] * n for j in range(len(grid[i])) for i in range(m)]",
    "[[grid[row][col]] * n for row in range(m) for col in range(len(grid[row]))]",
    "[[grid[row][col]] * n for col in range(len(grid[row])) for row in range(m)]",
    "[[grid[i][j]] * n for i in range(len(grid)) for j in range(len(grid[i]))]",
    "[[grid[i][j]] * n for j in range(len(grid[i])) for i in range(len(grid))]",
    "[[grid[i][j]] * n for i in range(m) for j in range(n)]",
    "[[grid[i][j]] * n for j in range(n) for i in range(m)]",
    "[[grid[row][col]] * n for row in range(m) for col in range(n)]",
    "[[grid[row][col]] * n for col in range(n) for row in range(m)]",
    "[[grid[r][c]] * n for r in range(m) for c in range(n)]",
    "[[grid[r][c]] * n for c in range(n) for r in range(m)]",
    "[[grid[x][y]] * n for x in range(m) for y in range(n)]",
    "[[grid[x][y]] * n for y in range(n) for x in range(m)]",
    "[[grid[a][b]] * n for a in range(m) for b in range(n)]",
    "[[grid[a][b]] * n for b in range(n) for a in range(m)]",
    "[[grid[i][j]] * n for i in range(m) for j in range(n)]",
    "[[grid[i][j]] * n for i in range(m) for j in range(m)]",
    "[[grid[i][j]] * n for i in range(n) for j in range(m)]",
    "[[grid[i][j]] * n for i in range(n) for j in range(n)]",
    "[[grid[i][j]] * m for i in range(m) for j in range(n)]",
    "[[grid[i][j]] * m for i in range(m) for j in range(m)]",
    "[[grid[i][j]] * m for i in range(n) for j in range(m)]",
    "[[grid[i][j]] * m for i in range(n) for j in range(n)]",
    "[[grid[i][j]] * j for i in range(m) for j in range(n)]",
    "[[grid[i][j]] * j for i in range(n) for j in range(m)]",
    "[[grid[i][j]] * n for i in range(m) for j in range(n)]",
    "[[grid[row][col]] * n for row in range(m) for col in range(n)]",
    "[[grid[x][y]] * n for x in range(m) for y in range(n)]",
    "[[grid[a][b]] * n for a in range(m) for b in range(n)]",
    "[[grid[row][__]] * n for row in range(m)]",
    "[[grid[__][col]] * n for col in range(n)]",
    "[[grid[x][__]] * n for x in range(m)]",
    "[[grid[__][y]] * n for y in range(n)]",
    "[[grid[a][__]] * n for a in range(m)]",
    "[[grid[__][__]] * n for _ in range(m)]",
    "[[grid[i][j]] * n for i in range(m) for j in range(n)]",
    "[[grid[i][j]] * n for i in range(m) for j in range(len(grid[i]))]",
    "[[grid[row][col]] * n for row in range(m) for col in range(len(grid[row]))]",
    "[[grid[i][j]] * n for i in range(len(grid)) for j in range(len(grid[i]))]",
    "[[grid[i][j]] * n for i in range(len(grid)) for j in range(n)]",
    "[[grid[row][col]] * n for row in range(len(grid)) for col in range(n)]",
    "[[grid[i][j]] * n for i in range(len(grid)) for j in range(0, n, 2)]",
    "[[grid[i][j]] * n for i in range(0, len(grid), 2) for j in range(n)]",
    "[[grid[i][j]] * n for i in range(0, len(grid), 2) for j in range(0, n, 2)]",
    "[[grid[i][j]] * n for i in range(0, len(grid), 2) for j in range(len(grid[i]))]",
    "[[grid[i][j]] * n for i in range(m) for j in range(n)]",
    "[[grid[x][y]] * n for x in range(m) for y in range(n)]",
    "[[grid[row][col]] * n for row in range(m) for col in range(n)]",
    "[[grid[i][j]] * n for i, row in enumerate(grid) for j, val in enumerate(row)]",
    "[[grid[i][j]] * n for i, _ in enumerate(grid) for j, _ in enumerate(grid[i])]",
    "[[grid[i][j]] * n for i in range(len(grid)) for j in range(len(grid[i]))]",
    "[[grid[i][j]] * n for i in range(len(grid)) for j in range(len(grid[0]))]",
    "[[grid[i][j]] * n for i in range(len(grid)) for j in range(len(grid[i])) if grid[i][j] is not None]",
    "[[grid[i][j]] * n for i in range(len(grid)) for j in range(len(grid[i])) if grid[i][j] != 0]",
    "[[grid[i][j]] * n for i in range(len(grid)) for j in range(len(grid[i])) if grid[i][j] != None]",
    "[[grid[i][j]] * n for i in range(m) for j in range(n)]",
    "[[grid[row][col]] * n for row in range(m) for col in range(n)]",
    "[[grid[x][y]] * n for x in range(m) for y in range(n)]",
    "[[grid[r][c]] * n for r in range(m) for c in range(n)]",
    "[[grid[row_index][col_index]] * n for row_index in range(m) for col_index in range(n)]",
    "[[grid[i][j]] * n for i, _ in enumerate(grid) for j, _ in enumerate(grid[i])]",
    "[[grid[row][col]] * n for row, _ in enumerate(grid) for col, _ in enumerate(grid[row])]",
    "[[grid[x][y]] * n for x, _ in enumerate(grid) for y, _ in enumerate(grid[x])]",
    "[[grid[r][c]] * n for r, _ in enumerate(grid) for c, _ in enumerate(grid[r])]",
    "[[grid[row_index][col_index]] * n for row_index, _ in enumerate(grid) for col_index, _ in enumerate(grid[row_index])]",
    "[[grid[i][j]] * n for i in range(m) for j in range(n)]",
    "[[grid[row][col]] * n for row in range(m) for col in range(n)]",
    "[[grid[row][col]] * n for col in range(n) for row in range(m)]",
    "[[grid[i][j]] * n for j in range(n) for i in range(m)]",
    "[[grid[r][c]] * n for r in range(m) for c in range(n)]",
    "[[grid[r][c]] * n for c in range(n) for r in range(m)]",
    "[[grid[row][col]] * n for row in range(m) for col in range(n)]",
    "[[grid[i][j]] * n for i in range(m) for j in range(n)]",
    "[[grid[i][j]] * n for j in range(n) for i in range(m)]",
    "[[grid[r][c]] * n for r in range(m) for c in range(n)]",
    "[[grid[i][j]] * n for i in range(m) for j in range(n)]",
    "[[grid[i][j]] * j for i in range(m) for j in range(n)]",
    "[[grid[i][j]] * m for i in range(m) for j in range(n)]",
    "[[grid[i][j]] * m for i in range(n) for j in range(m)]",
    "[[grid[i][j]] * i for i in range(m) for j in range(n)]",
    "[[grid[i][j]] * i for i in range(n) for j in range(m)]",
    "[[grid[i][j]] * j for i in range(n) for j in range(m)]",
    "[[grid[i][j]] * j for i in range(m) for j in range(n)]",
    "[[grid[i][j]] * n for i in range(n) for j in range(m)]",
    "[[grid[i][j]] * n for i in range(m) for j in range(n)]",
    "[[grid[i][j]] * n for i in range(m) for j in range(n)]",
    "[[grid[i][j]] * n for j in range(n) for i in range(m)]",
    "[[grid[i][j]] * n for i in range(m) for j in range(k)]",
    "[[grid[i][j]] * n for j in range(k) for i in range(m)]",
    "[[grid[i][j]] * n for i in range(m) for j in range(len(grid[i]))]",
    "[[grid[i][j]] * n for j in range(len(grid[i])) for i in range(m)]",
    "[[grid[i][j]] * n for i in range(len(grid)) for j in range(len(grid[i]))]",
    "[[grid[i][j]] * n for j in range(len(grid[i])) for i in range(len(grid))]",
    "[[grid[i][j]] * n for i in range(len(grid)) for j in range(k)]",
    "[[grid[i][j]] * n for j in range(k) for i in range(len(grid))]",
    "[[grid[i][j]] * n for i in range(m) for j in range(n)]",
    "[[grid[row][col]] * n for row in range(m) for col in range(n)]",
    "[[grid[i][j]] * n for i in range(m) for j in range(len(grid[i]))]",
    "[[grid[row][col]] * n for row in range(len(grid)) for col in range(len(grid[row]))]",
    "[[grid[i][j]] * n for i in range(len(grid)) for j in range(len(grid[i]))]",
    "[[grid[row][col]] * n for row in range(m) for col in range(len(grid[row]))]",
    "[[grid[i][j]] * n for i in range(len(grid)) for j in range(n)]",
    "[[grid[row][col]] * n for row in range(len(grid)) for col in range(n)]",
    "[[grid[i][j]] * n for i in range(m) for j in range(len(grid[0]))]",
    "[[grid[row][col]] * n for row in range(len(grid)) for col in range(len(grid[0]))]",
    "[[grid[i][j]] * n for i in range(m) for j in range(n)]",
    "[[grid[i][j]] * n for j in range(n) for i in range(m)]",
    "[[grid[i][j]] * j for i in range(m) for j in range(n)]",
    "[[grid[j][i]] * n for i in range(n) for j in range(m)]",
    "[[grid[j][i]] * j for i in range(n) for j in range(m)]",
    "[[grid[i][j]] * n for i in range(m) for j in range(i+1)]",
    "[[grid[i][j]] * (i+1) for i in range(m) for j in range(n)]",
    "[[grid[i][j]] * (j+1) for i in range(m) for j in range(n)]",
    "[[grid[i][j]] * (i+j+1) for i in range(m) for j in range(n)]",
    "[[grid[i][j]] * (i*j+1) for i in range(m) for j in range(n)]",
    "[[grid[0][0]] * n for _ in range(m)]",
    "[[grid[0][1]] * n for _ in range(m)]",
    "[[grid[0][2]] * n for _ in range(m)]",
    "[[grid[1][0]] * n for _ in range(m)]",
    "[[grid[1][1]] * n for _ in range(m)]",
    "[[grid[1][2]] * n for _ in range(m)]",
    "[[grid[2][0]] * n for _ in range(m)]",
    "[[grid[2][1]] * n for _ in range(m)]",
    "[[grid[2][2]] * n for _ in range(m)]",
    "[[grid[3][0]] * n for _ in range(m)]",
    "[[grid[i][j]] * n for i in range(m) for j in range(n)]",
    "[[grid[i][j]] * n for j in range(n) for i in range(m)]",
    "[[grid[i][j]] * n for i in range(m) for j in range(len(grid[i]))]",
    "[[grid[i][j]] * n for j in range(len(grid[i])) for i in range(m)]",
    "[[grid[i][j]] * n for i in range(len(grid)) for j in range(m)]",
    "[[grid[i][j]] * n for j in range(m) for i in range(len(grid))]",
    "[[grid[i][j]] * n for i in range(len(grid)) for j in range(len(grid[i]))]",
    "[[grid[i][j]] * n for j in range(len(grid[i])) for i in range(len(grid))]",
    "[[grid[i][j]] * n for i in range(len(grid)) for j in range(n)]",
    "[[grid[i][j]] * n for j in range(n) for i in range(len(grid))]",
    "[[grid[i][j]] * n for i in range(m) for j in range(n)]",
    "[[grid[i][j]] * n for j in range(n) for i in range(m)]",
    "[[grid[row][col]] * n for row in range(m) for col in range(n)]",
    "[[grid[row][col]] * n for col in range(n) for row in range(m)]",
    "[[grid[r][c]] * n for r in range(m) for c in range(n)]",
    "[[grid[r][c]] * n for c in range(n) for r in range(m)]",
    "[[grid[x][y]] * n for x in range(m) for y in range(n)]",
    "[[grid[x][y]] * n for y in range(n) for x in range(m)]",
    "[[grid[i][j]] * n for i in range(m) for j in range(n)]",
    "[[grid[i][j]] * n for j in range(n) for i in range(m)]",
    "[[grid[i][j]] * n for i in range(m) for j in range(n)]",
    "[[grid[i][j]] * n for i in range(m) for j in range(len(grid[i]))]",
    "[[grid[i][j]] * len(grid[i]) for i in range(m) for j in range(len(grid[i]))]",
    "[[grid[i][j]] * len(grid[i]) for i in range(len(grid)) for j in range(len(grid[i]))]",
    "[[grid[i][j]] * n for i in range(len(grid)) for j in range(n)]",
    "[[grid[i][j]] * len(grid[i]) for i in range(len(grid)) for j in range(len(grid[i]))]",
    "[[grid[i][j]] * n for i in range(len(grid)) for j in range(len(grid[i]))]",
    "[[grid[i][j]] * n for i in range(m) for j in range(len(grid[i]))]",
    "[[grid[i][j]] * n for i in range(len(grid)) for j in range(m)]",
    "[[grid[i][j]] * n for i in range(len(grid)) for j in range(len(grid[0]))]",
    "[[grid[i][j]] * n for i in range(m) for j in range(n)]",
    "[[grid[i][j]] * n for j in range(n) for i in range(m)]",
    "[[grid[i][j]] * n for i in range(m) for j in range(len(grid[i]))]",
    "[[grid[i][j]] * n for i in range(len(grid)) for j in range(m)]",
    "[[grid[i][j]] * n for i in range(len(grid)) for j in range(len(grid[i]))]",
    "[[grid[i][j]] * n for j in range(len(grid[i])) for i in range(m)]",
    "[[grid[i][j]] * n for j in range(n) for i in range(len(grid))]",
    "[[grid[i][j]] * n for j in range(len(grid[i])) for i in range(len(grid))]",
    "[[grid[i][j]] * n for i in range(len(grid)) for j in range(n)]",
    "[[grid[i][j]] * n for j in range(m) for i in range(len(grid))]",
    "[[grid[i][j]] * n for i in range(m) for j in range(n)]",
    "[[grid[i][j]] * n for i, _ in enumerate(grid) for j, _ in enumerate(grid[i])]",
    "[[grid[i][j]] * n for i in range(m) for j in range(len(grid[i]))]",
    "[[grid[i][j]] * n for i in range(len(grid)) for j in range(len(grid[i]))]",
    "[[grid[i][j]] * n for i, row in enumerate(grid) for j, _ in enumerate(row)]",
    "[[grid[i][j]] * n for i, row in enumerate(grid) for j in range(len(row))]",
    "[[grid[i][j]] * n for i, row in enumerate(grid) for j in range(len(grid[i]))]",
    "[[grid[i][j]] * n for i, row in enumerate(grid) for j, element in enumerate(row)]",
    "[[grid[i][j]] * n for i, row in enumerate(grid) for j, element in enumerate(grid[i])]",
    "[[grid[i][j]] * n for i, row in enumerate(grid) for j, element in enumerate(grid[i]) if element is not None]",
    "[[grid[i][j]] * n for i in range(m) for j in range(n)]",
    "[[grid[i][j]] * n for j in range(n) for i in range(m)]",
    "[[grid[row][col]] * n for row in range(m) for col in range(n)]",
    "[[grid[row][col]] * n for col in range(n) for row in range(m)]",
    "[[grid[i][j]] * n for i in range(m) for j in range(len(grid[i]))]",
    "[[grid[i][j]] * n for j in range(len(grid[i])) for i in range(m)]",
    "[[grid[row][col]] * n for row in range(m) for col in range(len(grid[row]))]",
    "[[grid[row][col]] * n for col in range(len(grid[row])) for row in range(m)]",
    "[[grid[__][j]] * n for j in range(len(grid[__])) for __ in range(m)]",
    "[[grid[i][__]] * n for __ in range(len(grid[i])) for i in range(m)]"
  ],
  "num_code_blocks": 300
}
