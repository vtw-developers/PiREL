{
  "template": "strs = [__[int(d) - 2] for d in digits]",
  "lang": "py",
  "temperature": 0.7,
  "code_blocks": [
    "strs = [str(int(d) - 2) for d in digits]",
    "strs = [chr(int(d) - 2) for d in digits]",
    "strs = [chr(ord(d) - 2) for d in digits]",
    "strs = [chr(ord(d) + 2) for d in digits]",
    "strs = [chr(ord(d) * 2) for d in digits]",
    "strs = [chr(ord(d) // 2) for d in digits]",
    "strs = [str(int(d) + 2) for d in digits]",
    "strs = [str(int(d) * 2) for d in digits]",
    "strs = [str(int(d) // 2) for d in digits]",
    "strs = [chr(int(d) + 2) for d in digits]",
    "strs = [str(int(d) - 2) for d in digits]",
    "strs = [chr(int(d) - 2) for d in digits]",
    "strs = [chr(ord(d) - 2) for d in digits]",
    "strs = [chr(ord(d) + 2) for d in digits]",
    "strs = [str(int(d) + 2) for d in digits]",
    "strs = [str(ord(d) - 2) for d in digits]",
    "strs = [str(ord(d) + 2) for d in digits]",
    "strs = [chr(int(d) + 2) for d in digits]",
    "strs = [chr(ord(d) - 1) for d in digits]",
    "strs = [chr(ord(d) + 1) for d in digits]",
    "strs = [str(int(d) - 2) for d in digits]",
    "strs = [chr(int(d) - 2) for d in digits]",
    "strs = [chr(ord(d) - 2) for d in digits]",
    "strs = [chr(ord(d) + 2) for d in digits]",
    "strs = [chr(ord(d) * 2) for d in digits]",
    "strs = [chr(ord(d) / 2) for d in digits]",
    "strs = [chr(ord(d) % 2) for d in digits]",
    "strs = [chr(ord(d) ** 2) for d in digits]",
    "strs = [str(ord(d) - 2) for d in digits]",
    "strs = [str(ord(d) + 2) for d in digits]",
    "strs = [chr(int(d) - 2) for d in digits]",
    "strs = [str(int(d) - 2) for d in digits]",
    "strs = [digits[int(d) - 2] for d in digits]",
    "strs = [strs[int(d) - 2] for d in digits]",
    "strs = [digits[int(d) + 2] for d in digits]",
    "strs = [chr(int(d) + 2) for d in digits]",
    "strs = [str(int(d) + 2) for d in digits]",
    "strs = [digits[int(d) + 2] for d in digits]",
    "strs = [strs[int(d) + 2] for d in digits]",
    "strs = [chr(int(d) * 2) for d in digits]",
    "strs = [str(int(d) - 2) for d in digits]",
    "strs = [chr(int(d) - 2) for d in digits]",
    "strs = [ord(d) - 2 for d in digits]",
    "strs = [digits[int(d) - 2] for d in digits]",
    "strs = [strs[int(d) - 2] for d in digits]",
    "strs = [chr(digits[int(d)] - 2) for d in digits]",
    "strs = [chr(int(digits[d]) - 2) for d in digits]",
    "strs = [strs[int(d)] for d in digits]",
    "strs = [digits[d] for d in digits]",
    "strs = [chr(int(d)) for d in digits]",
    "strs = [str(int(d) - 2) for d in digits]",
    "strs = [chr(int(d) - 2) for d in digits]",
    "strs = [ord(d) - 2 for d in digits]",
    "strs = [str(ord(d) - 2) for d in digits]",
    "strs = [chr(ord(d) - 2) for d in digits]",
    "strs = [str(int(d) + 2) for d in digits]",
    "strs = [chr(int(d) + 2) for d in digits]",
    "strs = [ord(d) + 2 for d in digits]",
    "strs = [str(ord(d) + 2) for d in digits]",
    "strs = [chr(ord(d) + 2) for d in digits]",
    "strs = [str(int(d) - 2) for d in digits]",
    "strs = [strs[int(d) - 2] for d in digits]",
    "strs = [strs[int(d) - 2] for d in __]",
    "strs = [strs[int(d) - 2] for d in __ if d in digits]",
    "strs = [strs[int(d) - 2] for __ in digits]",
    "strs = [strs[int(d) - 2] for __ in digits if __ in strs]",
    "strs = [strs[int(d) - 2] for __ in digits if __ - 2 < len(strs)]",
    "strs = [strs[int(d) - 2] for __ in digits if __ - 2 < len(strs) and __ >= 2]",
    "strs = [strs[int(d) - 2] for __ in digits if __ - 2 < len(strs) and __ >= 2 and type(__) == int]",
    "strs = [strs[int(d) - 2] for __ in digits if __ - 2 < len(strs) and __ >= 2 and isinstance(__, int)]",
    "strs = [chr(int(d) + 94) for d in digits]",
    "strs = [chr(int(d) + ord('a') - 2) for d in digits]",
    "strs = [chr(int(d) + ord('a')) for d in digits]",
    "strs = [chr(int(d) + 96) for d in digits]",
    "strs = [chr(int(d) + ord('`')) for d in digits]",
    "strs = [chr(int(d) + 94) for d in digits]",
    "strs = [chr(int(d) + ord('`') - 2) for d in digits]",
    "strs = [chr(int(d) + ord('a')) for d in digits]",
    "strs = [chr(int(d) + 96) for d in digits]",
    "strs = [chr(int(d) + ord('`')) for d in digits]",
    "strs = [int(d) - 2 for d in digits]",
    "strs = [str(int(d) - 2) for d in digits]",
    "strs = [digits[int(d) - 2] for d in digits]",
    "strs = [digits[int(d) - 2] for d in strs]",
    "strs = [strs[int(d) - 2] for d in digits]",
    "strs = [digits[int(d) - 1] for d in digits]",
    "strs = [strs[int(d) - 1] for d in digits]",
    "strs = [digits[int(d) + 2] for d in digits]",
    "strs = [strs[int(d) + 2] for d in digits]",
    "strs = [digits[int(d) + 1] for d in digits]",
    "# Variant 1\nstrs = [chr(int(d) + 95) for d in digits]\n\n# Variant 2\nstrs = [chr(int(d) + ord('a') - 2) for d in digits]\n\n# Variant 3\nstrs = [chr(int(d) + ord('a') - 1) for d in digits]\n\n# Variant 4\nstrs = [chr(int(d) + 94) for d in digits]\n\n# Variant 5\nstrs = [chr(int(d) + 96) for d in digits]\n\n# Variant 6\nstrs = [chr(int(d) + ord('a') - 3) for d in digits]\n\n# Variant 7\nstrs = [chr(int(d) + ord('a') - 4) for d in digits]\n\n# Variant 8\nstrs = [chr(int(d) + ord('a') - 5) for d in digits]\n\n# Variant 9\nstrs = [chr(int(d) + ord('a') - 6) for d in digits]\n\n# Variant 10\nstrs = [chr(int(d) + ord('a') - 7) for d in digits]",
    "# Variant 1\nstrs = [x[int(d) - 2] for d in digits]\n\n# Variant 2\nstrs = [s[int(d) - 2] for d in digits]\n\n# Variant 3\nstrs = [item[int(d) - 2] for d in digits]\n\n# Variant 4\nstrs = [word[int(d) - 2] for d in digits]\n\n# Variant 5\nstrs = [val[int(d) - 2] for d in digits]\n\n# Variant 6\nstrs = [element[int(d) - 2] for d in digits]\n\n# Variant 7\nstrs = [string[int(d) - 2] for d in digits]\n\n# Variant 8\nstrs = [text[int(d) - 2] for d in digits]\n\n# Variant 9\nstrs = [char[int(d) - 2] for d in digits]\n\n# Variant 10\nstrs = [value[int(d) - 2] for d in digits]",
    "strs = [x[int(d) - 2] for d in digits]",
    "strs = [item[int(d) - 2] for d in digits]",
    "strs = [element[int(d) - 2] for d in digits]",
    "strs = [value[int(d) - 2] for d in digits]",
    "strs = [s[int(d) - 2] for d in digits]",
    "strs = [word[int(d) - 2] for d in digits]",
    "strs = [text[int(d) - 2] for d in digits]",
    "strs = [string[int(d) - 2] for d in digits]",
    "strs = [entry[int(d) - 2] for d in digits]",
    "strs = [phrase[int(d) - 2] for d in digits]",
    "# Variant 1\nstrs = [item[int(d) - 2] for d in digits]\n\n# Variant 2\nstrs = [element[int(d) - 2] for d in digits]\n\n# Variant 3\nstrs = [value[int(d) - 2] for d in digits]\n\n# Variant 4\nstrs = [result[int(d) - 2] for d in digits]\n\n# Variant 5\nstrs = [content[int(d) - 2] for d in digits]\n\n# Variant 6\nstrs = [text[int(d) - 2] for d in digits]\n\n# Variant 7\nstrs = [string[int(d) - 2] for d in digits]\n\n# Variant 8\nstrs = [word[int(d) - 2] for d in digits]\n\n# Variant 9\nstrs = [value_list[int(d) - 2] for d in digits]\n\n# Variant 10\nstrs = [element_list[int(d) - 2] for d in digits]",
    "strs = [int(d) - 2 for d in digits]",
    "strs = [digits[int(d) - 2] for d in digits]",
    "strs = [str(int(d) - 2) for d in digits]",
    "strs = [strs[int(d) - 2] for d in digits]",
    "strs = [str(d) - 2 for d in digits]",
    "strs = [str(d) - '2' for d in digits]",
    "strs = [digits[str(d) - 2] for d in digits]",
    "strs = [digits[int(d)] - 2 for d in digits]",
    "strs = [strs[int(d)] - 2 for d in digits]",
    "strs = [digits[int(d) - 2] for d in strs]",
    "strs = [chr(int(d) - 2) for d in digits]",
    "strs = [str(int(d) - 2) for d in digits]",
    "strs = [strs[int(d) - 2] for d in digits]",
    "strs = [str(d) for d in digits]",
    "strs = [strs[int(d)] for d in digits]",
    "strs = [strs[d] for d in digits]",
    "strs = [chr(int(d)) for d in digits]",
    "strs = [chr(int(d) + 2) for d in digits]",
    "strs = [str(int(d)) for d in digits]",
    "strs = [str(int(d) + 2) for d in digits]",
    "strs = [chr(int(d) - 2) for d in digits]",
    "strs = [str(int(d) - 2) for d in digits]",
    "strs = [float(d) - 2 for d in digits]",
    "strs = [bool(int(d) - 2) for d in digits]",
    "strs = [ord(d) - 2 for d in digits]",
    "strs = [chr(ord(d) - 2) for d in digits]",
    "strs = [str(ord(d) - 2) for d in digits]",
    "strs = [float(ord(d) - 2) for d in digits]",
    "strs = [bool(ord(d) - 2) for d in digits]",
    "strs = [chr(float(d) - 2) for d in digits]",
    "strs = [str(int(d) - 2) for d in digits]",
    "strs = [chr(int(d) - 2) for d in digits]",
    "strs = [chr(ord(d) - 2) for d in digits]",
    "strs = [str(ord(d) - 2) for d in digits]",
    "strs = [strs[int(d) - 2] for d in digits]",
    "strs = [strs[ord(d) - 2] for d in digits]",
    "strs = [chr(str(d)) for d in digits]",
    "strs = [chr(int(d)) for d in digits]",
    "strs = [str(int(d)) for d in digits]",
    "strs = [str(d) for d in digits]",
    "strs = [str(int(d) - 2) for d in digits]",
    "strs = [chr(int(d) - 2) for d in digits]",
    "strs = [str(ord(d) - 2) for d in digits]",
    "strs = [chr(ord(d) - 2) for d in digits]",
    "strs = [chr(int(d) + 2) for d in digits]",
    "strs = [str(ord(d) + 2) for d in digits]",
    "strs = [str(int(d) + 2) for d in digits]",
    "strs = [chr(ord(d) + 2) for d in digits]",
    "strs = [str(int(d) * 2) for d in digits]",
    "strs = [chr(ord(d) * 2) for d in digits]",
    "strs = [str(int(d) - 2) for d in digits]",
    "strs = [chr(int(d) - 2 + ord('a')) for d in digits]",
    "strs = [chr(int(d) - 2 + ord('A')) for d in digits]",
    "strs = [chr(int(d) - 2 + ord('0')) for d in digits]",
    "strs = [chr(int(d) - 2 + ord('!')) for d in digits]",
    "strs = [chr(int(d) - 2 + ord('@')) for d in digits]",
    "strs = [chr(int(d) - 2 + ord('#')) for d in digits]",
    "strs = [chr(int(d) - 2 + ord('$')) for d in digits]",
    "strs = [chr(int(d) - 2 + ord('%')) for d in digits]",
    "strs = [chr(int(d) - 2 + ord('^')) for d in digits]",
    "# Variant 1\nstrs = [s[int(d) - 2] for d in digits]\n\n# Variant 2\nstrs = [strs[int(d) - 2] for d in digits]\n\n# Variant 3\nstrs = [str(int(d) - 2) for d in digits]\n\n# Variant 4\nstrs = [chr(int(d) - 2) for d in digits]\n\n# Variant 5\nstrs = [ord(d) - 2 for d in digits]\n\n# Variant 6\nstrs = [str(ord(d) - 2) for d in digits]\n\n# Variant 7\nstrs = [strs[int(d) - int(d)] for d in digits]\n\n# Variant 8\nstrs = [chr(ord(d) - ord(d)) for d in digits]\n\n# Variant 9\nstrs = [strs[int(d) - int(d) - int(d)] for d in digits]\n\n# Variant 10\nstrs = [str(len(strs)) for d in digits]",
    "strs = [chr(int(d) - 2) for d in digits]",
    "strs = [str(int(d) - 2) for d in digits]",
    "strs = [strs[int(d) - 2] for d in digits]",
    "strs = [str(int(d) - 2) + digits for d in digits]",
    "strs = [strs[int(d) - 2] + digits for d in digits]",
    "strs = [str(int(d) - 2) + str(d) for d in digits]",
    "strs = [strs[int(d) - 2] + str(d) for d in digits]",
    "strs = [strs[int(d) - 2] + str(int(d) - 2) for d in digits]",
    "strs = [strs[int(d) - 2] + str(int(d) - 1) for d in digits]",
    "strs = [strs[int(d) - 2] + str(int(d) - 3) for d in digits]",
    "strs = [str(int(d) - 2) for d in digits]",
    "strs = [strs[int(d) - 2] for d in digits]",
    "strs = [chr(int(d) - 2) for d in digits]",
    "strs = [chr(ord(d) - 2) for d in digits]",
    "strs = [chr(int(d) + 2) for d in digits]",
    "strs = [chr(ord(d) + 2) for d in digits]",
    "strs = [chr(ord(d) ^ 2) for d in digits]",
    "strs = [str(ord(d) - 2) for d in digits]",
    "strs = [str(ord(d) + 2) for d in digits]",
    "strs = [str(ord(d) ^ 2) for d in digits]",
    "strs = [chr(int(d) + 65) for d in digits]",
    "strs = [chr(ord(d) + 32) for d in digits]",
    "strs = [chr(int(d) + ord('a')) for d in digits]",
    "strs = [chr(ord(d) + 97) for d in digits]",
    "strs = ['abc'[int(d) - 1] for d in digits]",
    "strs = ['abc'[ord(d) - 97] for d in digits]",
    "strs = ['abc'[int(d)] for d in digits]",
    "strs = ['abc'[ord(d) - ord('a')] for d in digits]",
    "strs = [str(int(d) - 2) for d in digits]",
    "strs = [str(ord(d) - ord('2')) for d in digits]",
    "strs = [str(int(d) - 2) for d in digits]",
    "strs = [chr(int(d) - 2) for d in digits]",
    "strs = [ord(d) - 2 for d in digits]",
    "strs = [float(d) - 2 for d in digits]",
    "strs = [bool(int(d) - 2) for d in digits]",
    "strs = [list(str(int(d) - 2)) for d in digits]",
    "strs = [tuple(str(int(d) - 2)) for d in digits]",
    "strs = [set(str(int(d) - 2)) for d in digits]",
    "strs = [dict({int(d): int(d) - 2}) for d in digits]",
    "strs = [f\"Value: {int(d) - 2}\" for d in digits]",
    "strs = [str(int(d) - 2) for d in digits]",
    "strs = [chr(int(d) - 2) for d in digits]",
    "strs = [f\"Value: {int(d) - 2}\" for d in digits]",
    "strs = [bool(int(d) - 2) for d in digits]",
    "strs = [float(int(d) - 2) for d in digits]",
    "strs = [list(str(int(d) - 2)) for d in digits]",
    "strs = [tuple(str(int(d) - 2)) for d in digits]",
    "strs = [set(str(int(d) - 2)) for d in digits]",
    "strs = [frozenset(str(int(d) - 2)) for d in digits]",
    "strs = [dict(key=str(int(d) - 2)) for d in digits]",
    "strs = [x[int(d) - 2] for d in digits]",
    "strs = [y[int(d) - 2] for d in digits]",
    "strs = [z[int(d) - 2] for d in digits]",
    "strs = [a[int(d) - 2] for d in digits]",
    "strs = [b[int(d) - 2] for d in digits]",
    "strs = [c[int(d) - 2] for d in digits]",
    "strs = [d[int(d) - 2] for d in digits]",
    "strs = [e[int(d) - 2] for d in digits]",
    "strs = [f[int(d) - 2] for d in digits]",
    "strs = [g[int(d) - 2] for d in digits]",
    "strs = [x[int(d) - 2] for d in digits]",
    "strs = [item[int(d) - 2] for d in digits]",
    "strs = [val[int(d) - 2] for d in digits]",
    "strs = [s[int(d) - 2] for d in digits]",
    "strs = [string[int(d) - 2] for d in digits]",
    "strs = [word[int(d) - 2] for d in digits]",
    "strs = [char[int(d) - 2] for d in digits]",
    "strs = [elem[int(d) - 2] for d in digits]",
    "strs = [value[int(d) - 2] for d in digits]",
    "strs = [element[int(d) - 2] for d in digits]",
    "strs = [str(int(d) - 2) for d in digits]",
    "strs = [chr(int(d) - 2) for d in digits]",
    "strs = [chr(ord(d) - 2) for d in digits]",
    "strs = [chr(ord(d) + 2) for d in digits]",
    "strs = [chr(ord(d) * 2) for d in digits]",
    "strs = [chr(ord(d) // 2) for d in digits]",
    "strs = [chr(ord(d) % 2) for d in digits]",
    "strs = [chr(ord(d) ** 2) for d in digits]",
    "strs = [chr(ord(d) + 32) for d in digits]",
    "strs = [chr(ord(d) - 32) for d in digits]",
    "# Variant 1\nstrs = [chr(int(d) - 2) for d in digits]\n\n# Variant 2\nstrs = [str(int(d) - 2) for d in digits]\n\n# Variant 3\nstrs = [ord(d) - 2 for d in digits]\n\n# Variant 4\nstrs = [chr(ord(d) - 2) for d in digits]\n\n# Variant 5\nstrs = [str(ord(d) - 2) for d in digits]\n\n# Variant 6\nstrs = [chr(int(d) - ord('2')) for d in digits]\n\n# Variant 7\nstrs = [str(int(d) - ord('2')) for d in digits]\n\n# Variant 8\nstrs = [chr(ord(d) - ord('2')) for d in digits]\n\n# Variant 9\nstrs = [str(ord(d) - ord('2')) for d in digits]\n\n# Variant 10\nstrs = [chr(int(d) - int('2')) for d in digits]",
    "strs = [str(int(d) - 2) for d in digits]",
    "strs = [chr(int(d) - 2) for d in digits]",
    "strs = [str(d) for d in digits]",
    "strs = [strs[int(d) - 2] for d in digits]",
    "strs = [strs[int(d) + 2] for d in digits]",
    "strs = [strs[int(d) * 2] for d in digits]",
    "strs = [strs[int(d) // 2] for d in digits]",
    "strs = [strs[int(d) % 2] for d in digits]",
    "strs = [strs[int(d) ** 2] for d in digits]",
    "strs = [strs[int(d) + ord('A')] for d in digits]"
  ],
  "num_code_blocks": 255
}
