{
  "template": "return sign * tot if INT_MIN <= sign * tot <= __ else __",
  "lang": "py",
  "temperature": 0.7,
  "code_blocks": [
    "return sign * tot if INT_MIN <= sign * tot <= 10 else 0",
    "return sign * tot if INT_MIN <= sign * tot <= 100 else 0",
    "return sign * tot if INT_MIN <= sign * tot <= 1000 else 0",
    "return sign * tot if INT_MIN <= sign * tot <= 10000 else 0",
    "return sign * tot if INT_MIN <= sign * tot <= 100000 else 0",
    "return sign * tot if INT_MIN <= sign * tot <= 1000000 else 0",
    "return sign * tot if INT_MIN <= sign * tot <= 10000000 else 0",
    "return sign * tot if INT_MIN <= sign * tot <= 100000000 else 0",
    "return sign * tot if INT_MIN <= sign * tot <= 1000000000 else 0",
    "return sign * tot if INT_MIN <= sign * tot <= 10000000000 else 0",
    "return sign * tot if INT_MIN <= sign * tot <= float('inf') else None",
    "return sign * tot if INT_MIN <= sign * tot <= float('nan') else None",
    "return sign * tot if INT_MIN <= sign * tot <= 0 else None",
    "return sign * tot if INT_MIN <= sign * tot <= 1 else None",
    "return sign * tot if INT_MIN <= sign * tot <= -1 else None",
    "return sign * tot if INT_MIN <= sign * tot <= 100 else None",
    "return sign * tot if INT_MIN <= sign * tot <= -100 else None",
    "return sign * tot if INT_MIN <= sign * tot <= 999999 else None",
    "return sign * tot if INT_MIN <= sign * tot <= -999999 else None",
    "return sign * tot if INT_MIN <= sign * tot <= sys.maxsize else None",
    "return sign * tot if INT_MIN <= sign * tot <= float('inf') else None",
    "return sign * tot if INT_MIN <= sign * tot <= float('nan') else None",
    "return sign * tot if INT_MIN <= sign * tot <= float('nan') else 0",
    "return sign * tot if INT_MIN <= sign * tot <= float('-inf') else None",
    "return sign * tot if INT_MIN <= sign * tot <= float('-inf') else 0",
    "return sign * tot if INT_MIN <= sign * tot <= sys.maxsize else None",
    "return sign * tot if INT_MIN <= sign * tot <= sys.maxsize else 0",
    "return sign * tot if INT_MIN <= sign * tot <= 10 else None",
    "return sign * tot if INT_MIN <= sign * tot <= 10 else 0",
    "return sign * tot if INT_MIN <= sign * tot <= -10 else None",
    "return sign * tot if INT_MIN <= sign * tot <= 100 else 0",
    "return sign * tot if INT_MIN <= sign * tot <= 200 else 0",
    "return sign * tot if INT_MIN <= sign * tot <= 300 else 0",
    "return sign * tot if INT_MIN <= sign * tot <= 400 else 0",
    "return sign * tot if INT_MIN <= sign * tot <= 500 else 0",
    "return sign * tot if INT_MIN <= sign * tot <= 600 else 0",
    "return sign * tot if INT_MIN <= sign * tot <= 700 else 0",
    "return sign * tot if INT_MIN <= sign * tot <= 800 else 0",
    "return sign * tot if INT_MIN <= sign * tot <= 900 else 0",
    "return sign * tot if INT_MIN <= sign * tot <= 1000 else 0",
    "return sign * tot if INT_MIN <= sign * tot <= float('inf') else None",
    "return sign * tot if INT_MIN <= sign * tot <= INT_MAX else 0",
    "return sign * tot if INT_MIN <= sign * tot <= sys.maxsize else -1",
    "return sign * tot if INT_MIN <= sign * tot <= 100 else -100",
    "return sign * tot if INT_MIN <= sign * tot <= 0 else 1",
    "return sign * tot if INT_MIN <= sign * tot <= 9999 else -9999",
    "return sign * tot if INT_MIN <= sign * tot <= 42 else 0",
    "return sign * tot if INT_MIN <= sign * tot <= 7 else 7",
    "return sign * tot if INT_MIN <= sign * tot <= -1 else 999",
    "return sign * tot if INT_MIN <= sign * tot <= 123456789 else 987654321",
    "return sign * tot if INT_MIN <= sign * tot <= 1000 else 0",
    "return sign * tot if INT_MIN <= sign * tot <= 999 else -1",
    "return sign * tot if INT_MIN <= sign * tot <= 1e6 else None",
    "return sign * tot if INT_MIN <= sign * tot <= 42 else False",
    "return sign * tot if INT_MIN <= sign * tot <= 99999 else 'Error'",
    "return sign * tot if INT_MIN <= sign * tot <= 7 else []",
    "return sign * tot if INT_MIN <= sign * tot <= 1000000 else {}",
    "return sign * tot if INT_MIN <= sign * tot <= 123456 else ()",
    "return sign * tot if INT_MIN <= sign * tot <= 999999 else True",
    "return sign * tot if INT_MIN <= sign * tot <= 500 else 1.5",
    "return sign * tot if INT_MIN <= sign * tot <= 100 else 0",
    "return sign * tot if INT_MIN <= sign * tot <= 42 else 42",
    "return sign * tot if INT_MIN <= sign * tot <= 9999 else -9999",
    "return sign * tot if INT_MIN <= sign * tot <= 1 else -1",
    "return sign * tot if INT_MIN <= sign * tot <= 999 else 999",
    "return sign * tot if INT_MIN <= sign * tot <= 50 else 50",
    "return sign * tot if INT_MIN <= sign * tot <= 1000 else -1000",
    "return sign * tot if INT_MIN <= sign * tot <= 5000 else -5000",
    "return sign * tot if INT_MIN <= sign * tot <= 123456 else 0",
    "return sign * tot if INT_MIN <= sign * tot <= 987654321 else -1",
    "return sign * tot if INT_MIN <= sign * tot <= 100 else 0",
    "return sign * tot if INT_MIN <= sign * tot <= -100 else 0",
    "return sign * tot if INT_MIN <= sign * tot <= 42 else 0",
    "return sign * tot if INT_MIN <= sign * tot <= 9999 else 0",
    "return sign * tot if INT_MIN <= sign * tot <= 5000 else 0",
    "return sign * tot if INT_MIN <= sign * tot <= -5000 else 0",
    "return sign * tot if INT_MIN <= sign * tot <= 1 else 0",
    "return sign * tot if INT_MIN <= sign * tot <= -1 else 0",
    "return sign * tot if INT_MIN <= sign * tot <= 1000 else 0",
    "return sign * tot if INT_MIN <= sign * tot <= -1000 else 0",
    "return sign * tot if INT_MIN <= sign * tot <= 100 else 0",
    "return sign * tot if INT_MIN <= sign * tot <= 999 else 999",
    "return sign * tot if INT_MIN <= sign * tot <= -100 else -100",
    "return sign * tot if INT_MIN <= sign * tot <= 0 else -1",
    "return sign * tot if INT_MIN <= sign * tot <= 1000 else 1000",
    "return sign * tot if INT_MIN <= sign * tot <= 1 else 1",
    "return sign * tot if INT_MIN <= sign * tot <= -1000 else -1000",
    "return sign * tot if INT_MIN <= sign * tot <= 10 else 10",
    "return sign * tot if INT_MIN <= sign * tot <= -1 else -1",
    "return sign * tot if INT_MIN <= sign * tot <= 50 else 50",
    "return sign * tot if INT_MIN <= sign * tot <= 100 else 0",
    "return sign * tot if INT_MIN <= sign * tot <= 999 else -1",
    "return sign * tot if INT_MIN <= sign * tot <= 42 else None",
    "return sign * tot if INT_MIN <= sign * tot <= 123456789 else sign * tot",
    "return sign * tot if INT_MIN <= sign * tot <= 987654321 else sign * tot * 2",
    "return sign * tot if INT_MIN <= sign * tot <= 314159265 else tot",
    "return sign * tot if INT_MIN <= sign * tot <= 777 else 555",
    "return sign * tot if INT_MIN <= sign * tot <= 2022 else 404",
    "return sign * tot if INT_MIN <= sign * tot <= 999999999 else 1000000000",
    "return sign * tot if INT_MIN <= sign * tot <= 54321 else tot + 1",
    "return sign * tot if INT_MIN <= sign * tot <= None else None",
    "return sign * tot if INT_MIN <= sign * tot <= '' else ''",
    "return sign * tot if INT_MIN <= sign * tot <= [] else []",
    "return sign * tot if INT_MIN <= sign * tot <= {} else {}",
    "return sign * tot if INT_MIN <= sign * tot <= () else ()",
    "return sign * tot if INT_MIN <= sign * tot <= set() else set()",
    "return sign * tot if INT_MIN <= sign * tot <= False else False",
    "return sign * tot if INT_MIN <= sign * tot <= 0 else 0",
    "return sign * tot if INT_MIN <= sign * tot <= 0.0 else 0.0",
    "return sign * tot if INT_MIN <= sign * tot <= None else None",
    "return sign * tot if INT_MIN <= sign * tot <= sys.maxsize else None",
    "return sign * tot if INT_MIN <= sign * tot <= float('inf') else None",
    "return sign * tot if INT_MIN <= sign * tot <= int(1e6) else None",
    "return sign * tot if INT_MIN <= sign * tot <= 1000000 else None",
    "return sign * tot if INT_MIN <= sign * tot <= 999999 else None",
    "return sign * tot if INT_MIN <= sign * tot <= 42 else None",
    "return sign * tot if INT_MIN <= sign * tot <= -42 else None",
    "return sign * tot if INT_MIN <= sign * tot <= 0 else None",
    "return sign * tot if INT_MIN <= sign * tot <= 1 else None",
    "return sign * tot if INT_MIN <= sign * tot <= 100 else None",
    "return sign * tot if INT_MIN <= sign * tot <= float('inf') else None",
    "return sign * tot if INT_MIN <= sign * tot <= sys.maxsize else None",
    "return sign * tot if INT_MIN <= sign * tot <= 1000 else None",
    "return sign * tot if INT_MIN <= sign * tot <= math.inf else None",
    "return sign * tot if INT_MIN <= sign * tot <= 999999999 else None",
    "return sign * tot if INT_MIN <= sign * tot <= float('nan') else None",
    "return sign * tot if INT_MIN <= sign * tot <= 1e100 else None",
    "return sign * tot if INT_MIN <= sign * tot <= -INT_MIN else None",
    "return sign * tot if INT_MIN <= sign * tot <= 1000000 else None",
    "return sign * tot if INT_MIN <= sign * tot <= sys.float_info.max else None",
    "return sign * tot if INT_MIN <= sign * tot <= INT_MAX else None",
    "return sign * tot if INT_MIN <= sign * tot <= sys.maxsize else None",
    "return sign * tot if INT_MIN <= sign * tot <= float('inf') else None",
    "return sign * tot if INT_MIN <= sign * tot <= float('nan') else None",
    "return sign * tot if INT_MIN <= sign * tot <= float('infinity') else None",
    "return sign * tot if INT_MIN <= sign * tot <= decimal.MAX_DECIMAL or INT_MIN <= sign * tot <= decimal.MIN_DECIMAL else None",
    "return sign * tot if INT_MIN <= sign * tot <= decimal.Decimal('Infinity') else None",
    "return sign * tot if INT_MIN <= sign * tot <= int(1e1000) else None",
    "return sign * tot if INT_MIN <= sign * tot <= -INT_MIN else None",
    "return sign * tot if INT_MIN <= sign * tot <= -INT_MIN-1 else None",
    "return sign * tot if INT_MIN <= sign * tot <= sys.maxsize else None",
    "return sign * tot if INT_MIN <= sign * tot <= float('inf') else None",
    "return sign * tot if INT_MIN <= sign * tot <= 1000 else None",
    "return sign * tot if INT_MIN <= sign * tot <= 42 else None",
    "return sign * tot if INT_MIN <= sign * tot <= -42 else None",
    "return sign * tot if INT_MIN <= sign * tot <= 0 else None",
    "return sign * tot if INT_MIN <= sign * tot <= 1 else None",
    "return sign * tot if INT_MIN <= sign * tot <= 999999999999999999 else None",
    "return sign * tot if INT_MIN <= sign * tot <= 3.14 else None",
    "return sign * tot if INT_MIN <= sign * tot <= -3.14 else None",
    "return sign * tot if INT_MIN <= sign * tot <= 100 else 0",
    "return sign * tot if INT_MIN <= sign * tot <= 200 else 0",
    "return sign * tot if INT_MIN <= sign * tot <= 300 else 0",
    "return sign * tot if INT_MIN <= sign * tot <= 400 else 0",
    "return sign * tot if INT_MIN <= sign * tot <= 500 else 0",
    "return sign * tot if INT_MIN <= sign * tot <= 600 else 0",
    "return sign * tot if INT_MIN <= sign * tot <= 700 else 0",
    "return sign * tot if INT_MIN <= sign * tot <= 800 else 0",
    "return sign * tot if INT_MIN <= sign * tot <= 900 else 0",
    "return sign * tot if INT_MIN <= sign * tot <= 1000 else 0",
    "return sign * tot if INT_MIN <= sign * tot <= float('inf') else None",
    "return sign * tot if INT_MIN <= sign * tot <= sys.maxsize else None",
    "return sign * tot if INT_MIN <= sign * tot <= math.inf else None",
    "return sign * tot if INT_MIN <= sign * tot <= 1000 else None",
    "return sign * tot if INT_MIN <= sign * tot <= 9999999999 else None",
    "return sign * tot if INT_MIN <= sign * tot <= 1e10 else None",
    "return sign * tot if INT_MIN <= sign * tot <= Decimal('Infinity') else None",
    "return sign * tot if INT_MIN <= sign * tot <= 1 << 63 else None",
    "return sign * tot if INT_MIN <= sign * tot <= ord('z') else None",
    "return sign * tot if INT_MIN <= sign * tot <= len(s) else None",
    "return sign * tot if INT_MIN <= sign * tot <= sys.maxsize else False",
    "return sign * tot if INT_MIN <= sign * tot <= 100 else None",
    "return sign * tot if INT_MIN <= sign * tot <= 0 else 1",
    "return sign * tot if INT_MIN <= sign * tot <= 9999 else 0",
    "return sign * tot if INT_MIN <= sign * tot <= float('inf') else float('-inf')",
    "return sign * tot if INT_MIN <= sign * tot <= 42 else -42",
    "return sign * tot if INT_MIN <= sign * tot <= 1.61803398875 else 3.14159265359",
    "return sign * tot if INT_MIN <= sign * tot <= 999999999999999999 else -999999999999999999",
    "return sign * tot if INT_MIN <= sign * tot <= 7e7 else -7e7",
    "return sign * tot if INT_MIN <= sign * tot <= 123456789 else 987654321",
    "return sign * tot if INT_MIN <= sign * tot <= 100 else None",
    "return sign * tot if INT_MIN <= sign * tot <= 200 else None",
    "return sign * tot if INT_MIN <= sign * tot <= 300 else None",
    "return sign * tot if INT_MIN <= sign * tot <= 400 else None",
    "return sign * tot if INT_MIN <= sign * tot <= 500 else None",
    "return sign * tot if INT_MIN <= sign * tot <= 600 else None",
    "return sign * tot if INT_MIN <= sign * tot <= 700 else None",
    "return sign * tot if INT_MIN <= sign * tot <= 800 else None",
    "return sign * tot if INT_MIN <= sign * tot <= 900 else None",
    "return sign * tot if INT_MIN <= sign * tot <= 1000 else None",
    "return sign * tot if INT_MIN <= sign * tot <= 100 else False",
    "return sign * tot if INT_MIN <= sign * tot <= 200 else None",
    "return sign * tot if INT_MIN <= sign * tot <= 300 else True",
    "return sign * tot if INT_MIN <= sign * tot <= 400 else 0",
    "return sign * tot if INT_MIN <= sign * tot <= 500 else \"Invalid\"",
    "return sign * tot if INT_MIN <= sign * tot <= 600 else []",
    "return sign * tot if INT_MIN <= sign * tot <= 700 else {}",
    "return sign * tot if INT_MIN <= sign * tot <= 800 else ()",
    "return sign * tot if INT_MIN <= sign * tot <= 900 else 1.0",
    "return sign * tot if INT_MIN <= sign * tot <= 1000 else \"Unknown\"",
    "return sign * tot if INT_MIN <= sign * tot <= 100 else 0",
    "return sign * tot if INT_MIN <= sign * tot <= 200 else 0",
    "return sign * tot if INT_MIN <= sign * tot <= 300 else 0",
    "return sign * tot if INT_MIN <= sign * tot <= 400 else 0",
    "return sign * tot if INT_MIN <= sign * tot <= 500 else 0",
    "return sign * tot if INT_MIN <= sign * tot <= 600 else 0",
    "return sign * tot if INT_MIN <= sign * tot <= 700 else 0",
    "return sign * tot if INT_MIN <= sign * tot <= 800 else 0",
    "return sign * tot if INT_MIN <= sign * tot <= 900 else 0",
    "return sign * tot if INT_MIN <= sign * tot <= 1000 else 0",
    "return sign * tot if INT_MIN <= sign * tot <= None else None",
    "return sign * tot if INT_MIN <= sign * tot <= True else True",
    "return sign * tot if INT_MIN <= sign * tot <= False else False",
    "return sign * tot if INT_MIN <= sign * tot <= 0 else 0",
    "return sign * tot if INT_MIN <= sign * tot <= 1 else 1",
    "return sign * tot if INT_MIN <= sign * tot <= '' else ''",
    "return sign * tot if INT_MIN <= sign * tot <= [] else []",
    "return sign * tot if INT_MIN <= sign * tot <= () else ()",
    "return sign * tot if INT_MIN <= sign * tot <= {} else {}",
    "return sign * tot if INT_MIN <= sign * tot <= set() else set()",
    "return sign * tot if INT_MIN <= sign * tot <= 100 else 0",
    "return sign * tot if INT_MIN <= sign * tot <= -100 else 0",
    "return sign * tot if INT_MIN <= sign * tot <= 1000 else 0",
    "return sign * tot if INT_MIN <= sign * tot <= -1000 else 0",
    "return sign * tot if INT_MIN <= sign * tot <= 1 else 0",
    "return sign * tot if INT_MIN <= sign * tot <= -1 else 0",
    "return sign * tot if INT_MIN <= sign * tot <= 10000 else 0",
    "return sign * tot if INT_MIN <= sign * tot <= -10000 else 0",
    "return sign * tot if INT_MIN <= sign * tot <= 100000 else 0",
    "return sign * tot if INT_MIN <= sign * tot <= -100000 else 0",
    "return sign * tot if INT_MIN <= sign * tot <= 100 else 0",
    "return sign * tot if INT_MIN <= sign * tot <= 1000 else 0",
    "return sign * tot if INT_MIN <= sign * tot <= 10000 else 0",
    "return sign * tot if INT_MIN <= sign * tot <= 100000 else 0",
    "return sign * tot if INT_MIN <= sign * tot <= 1000000 else 0",
    "return sign * tot if INT_MIN <= sign * tot <= 10000000 else 0",
    "return sign * tot if INT_MIN <= sign * tot <= 100000000 else 0",
    "return sign * tot if INT_MIN <= sign * tot <= 1000000000 else 0",
    "return sign * tot if INT_MIN <= sign * tot <= 10000000000 else 0",
    "return sign * tot if INT_MIN <= sign * tot <= 100000000000 else 0",
    "return sign * tot if INT_MIN <= sign * tot <= 100 else 0",
    "return sign * tot if INT_MIN <= sign * tot <= 9999 else -1",
    "return sign * tot if INT_MIN <= sign * tot <= 42 else None",
    "return sign * tot if INT_MIN <= sign * tot <= 777 else \"Invalid\"",
    "return sign * tot if INT_MIN <= sign * tot <= 12345 else ValueError(\"Out of range\")",
    "return sign * tot if INT_MIN <= sign * tot <= 987654321 else Exception(\"Invalid value\")",
    "return sign * tot if INT_MIN <= sign * tot <= 555 else True",
    "return sign * tot if INT_MIN <= sign * tot <= 888 else False",
    "return sign * tot if INT_MIN <= sign * tot <= 999999 else []",
    "return sign * tot if INT_MIN <= sign * tot <= 123456789 else {}",
    "return sign * tot if INT_MIN <= sign * tot <= 100 else 0",
    "return sign * tot if INT_MIN <= sign * tot <= 999 else -1",
    "return sign * tot if INT_MIN <= sign * tot <= 42 else None",
    "return sign * tot if INT_MIN <= sign * tot <= 777 else \"Error\"",
    "return sign * tot if INT_MIN <= sign * tot <= 12345 else sign * tot",
    "return sign * tot if INT_MIN <= sign * tot <= 987654321 else tot",
    "return sign * tot if INT_MIN <= sign * tot <= 555555 else 111111",
    "return sign * tot if INT_MIN <= sign * tot <= 88888888 else -88888888",
    "return sign * tot if INT_MIN <= sign * tot <= 7777777777 else 9999999999",
    "return sign * tot if INT_MIN <= sign * tot <= 666666666666 else INT_MIN",
    "return sign * tot if INT_MIN <= sign * tot <= INT_MAX else None",
    "return sign * tot if INT_MIN <= sign * tot <= sys.maxsize else sys.maxsize",
    "return sign * tot if INT_MIN <= sign * tot <= float('inf') else float('inf')",
    "return sign * tot if INT_MIN <= sign * tot <= float('nan') else float('nan')",
    "return sign * tot if INT_MIN <= sign * tot <= 0 else 0",
    "return sign * tot if INT_MIN <= sign * tot <= 1 else 1",
    "return sign * tot if INT_MIN <= sign * tot <= -1 else -1",
    "return sign * tot if INT_MIN <= sign * tot <= 1000 else 1000",
    "return sign * tot if INT_MIN <= sign * tot <= -1000 else -1000",
    "return sign * tot if INT_MIN <= sign * tot <= sign * tot else sign * tot",
    "return sign * tot if INT_MIN <= sign * tot <= INT_MAX else None",
    "return sign * tot if INT_MIN <= sign * tot <= sys.maxsize else None",
    "return sign * tot if INT_MIN <= sign * tot <= float('inf') else None",
    "return sign * tot if INT_MIN <= sign * tot <= float('infinity') else None",
    "return sign * tot if INT_MIN <= sign * tot <= math.inf else None",
    "return sign * tot if INT_MIN <= sign * tot <= 2147483647 else None",
    "return sign * tot if INT_MIN <= sign * tot <= 9223372036854775807 else None",
    "return sign * tot if INT_MIN <= sign * tot <= Decimal('Infinity') else None",
    "return sign * tot if INT_MIN <= sign * tot <= Decimal('NaN') else None",
    "return sign * tot if INT_MIN <= sign * tot <= float('nan') else None",
    "return sign * tot if INT_MIN <= sign * tot <= sys.maxsize else None",
    "return sign * tot if INT_MIN <= sign * tot <= float('inf') else None",
    "return sign * tot if INT_MIN <= sign * tot <= 100 else None",
    "return sign * tot if INT_MIN <= sign * tot <= -100 else None",
    "return sign * tot if INT_MIN <= sign * tot <= 0 else None",
    "return sign * tot if INT_MIN <= sign * tot <= 1 else None",
    "return sign * tot if INT_MIN <= sign * tot <= 42 else None",
    "return sign * tot if INT_MIN <= sign * tot <= math.pi else None",
    "return sign * tot if INT_MIN <= sign * tot <= 3.14 else None",
    "return sign * tot if INT_MIN <= sign * tot <= -3.14 else None",
    "return sign * tot if INT_MIN <= sign * tot <= float('inf') else None",
    "return sign * tot if INT_MIN <= sign * tot <= 100 else 0",
    "return sign * tot if INT_MIN <= sign * tot <= tot else sign * tot",
    "return sign * tot if INT_MIN <= sign * tot <= abs(tot) else tot",
    "return sign * tot if INT_MIN <= sign * tot <= tot * 2 else tot * 2",
    "return sign * tot if INT_MIN <= sign * tot <= 10**6 else -10**6",
    "return sign * tot if INT_MIN <= sign * tot <= tot + 100 else tot + 100",
    "return sign * tot if INT_MIN <= sign * tot <= tot - 100 else tot - 100",
    "return sign * tot if INT_MIN <= sign * tot <= tot / 2 else tot / 2",
    "return sign * tot if INT_MIN <= sign * tot <= tot ** 2 else tot ** 2"
  ],
  "num_code_blocks": 300
}
