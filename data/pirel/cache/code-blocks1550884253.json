{
  "template": "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[__])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
  "lang": "py",
  "temperature": 1.1,
  "code_blocks": [
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[u])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[k])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[idx])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[ind])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[unknown])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[x])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[mystery])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[hole])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[missing])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[placeholder])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t)\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(__)\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[u])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[s])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(__)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(t[__])\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(___)\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(t[__])\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(len(t))\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t)\n            return\n        if s > target:\n            return\n        for i in range(u, __):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == __:\n            ans.append(t)\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if __ == target:\n            ans.append(t)\n            return\n        if s > target:\n            return\n        for i in range(__, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(__)\n            return\n        if s > target:\n            return\n        for i in range(u, len(__)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t)\n            return\n        if __ > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t)\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[__]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t)\n            return\n        if s > target:\n            return\n        for i in range(u, __):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t)\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(__)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "t.append(c)\ndfs(s + c, i, t)",
    "t.append(c)\ndfs(s + c, u, t)",
    "t.append(c)\ndfs(s + c, i + 1, t)",
    "t.append(c)\ndfs(s + c, u + 1, t)",
    "t.append(c)\ndfs(s + c, u, t[:]",
    "t.append(c)\ndfs(s + c, u + 1, t[:])",
    "t.extend([c])\ndfs(s + c, i, t)",
    "t.extend([c])\ndfs(s + c, u, t)",
    "t.extend([c])\ndfs(s + c, i + 1, t)",
    "t.extend([c])\ndfs(s + c, u + 1, t)",
    "t[-1]",
    "t[-2]",
    "u",
    "i",
    "len(t) - 1",
    "s // 2",
    "target // 2",
    "candidates[i]",
    "len(candidates)",
    "s + c",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[len(t)//2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[u])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[len(candidates)-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[(len(candidates)-1) // 2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[(u + len(candidates)) // 2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[(u + len(candidates)-1) // 2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[u-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[u+1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "ans.append(t)",
    "ans.append(list(t))",
    "ans.append(t.copy())",
    "ans.extend(t)",
    "ans.extend(list(t))",
    "ans.extend(t.copy())",
    "ans += t",
    "ans += list(t)",
    "ans += t.copy()",
    "ans.extend([*t])",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[len(t)-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[len(t)-2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0:1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1:2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[::-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(list(reversed(t)))\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.insert(0, t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.insert(0, t[::-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.insert(0, list(reversed(t)))\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.extend(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.extend(t[::-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.extend(list(reversed(t)))\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.extendleft(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[len(t) - 1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t.copy())\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(list(t))\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[::])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def fgold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def fgold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t.copy())\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def fgold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(list(t))\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def fgold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[::])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t.__iadd__([]))\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t.__add__([]))\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "__ = []",
    "__ = s",
    "__ = len(ans)",
    "__ = len(candidates)",
    "__ = i",
    "__ = t[-1]",
    "__ = s + c",
    "__ = target",
    "__ = u",
    "__ = c",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[len(t) - 1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[s])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0][0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[s - 1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-1][0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0][-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-1][-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[len(t) - 1][len(t[0]) - 1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i+1, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i-1, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c - 1, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c + 1, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s - c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s * c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s / c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s % c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s % c - 1, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s % c + 1, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(list(t))\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t.copy())\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t.copy())\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t.copy())\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, list(t))\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, list(t))\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop(-1)\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(list(t))\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t.copy())\n            t.pop(-1)\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(list(t))\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, list(t))\n            t.pop(-1)\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t.copy())\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, list(t))\n            t.pop(-1)\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()",
    "def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()",
    "def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()",
    "def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()",
    "def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()",
    "def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()",
    "def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()",
    "def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()",
    "def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()",
    "def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-1:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0:1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[::-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "__index__",
    "__len__",
    "__item__",
    "__value__",
    "__element__",
    "__i__",
    "__num__",
    "__val__",
    "__candidate__",
    "__c__",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "t.append(c)",
    "ans.append(t)",
    "c = candidates[__]",
    "if t:\n    ans.append(t)",
    "for i in range(u, len(candidates)):",
    "if u != i - 2:",
    "if candidates[u] == 0:",
    "if candidates:",
    "if len(candidates) > 0:",
    "s -= c",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[len(__)])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(__[t])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(__, u, t):\n        if s == target:\n            ans.append(t[i])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            __.append(t[i])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, __, t):\n        if s == target:\n            ans.append(t[i])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], __: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[i])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == __:\n            ans.append(t[i])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, __):\n        if s == target:\n            ans.append(t[i])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[i])\n            return\n        if s > __:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[i])\n            return\n        if s > target:\n            return\n        for i in range(__, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[u])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[s])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[u])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[s])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])  # Fill hole with index 0\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[len(candidates)-1])  # Fill hole with length of candidates - 1\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])  # Fill hole with index 2\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-1])  # Fill hole with last element\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[s])  # Fill hole with value of s\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[u+1])  # Fill hole with current index + 1\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[u-1])  # Fill hole with current index - 1\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[s:])  # Fill hole with current index to the end of the list\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:u+1])  # Fill hole with start of the list up to current index + 1\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:s+1])  # Fill hole with start of the list up to current sum + 1\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[42])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[100])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[\"hello\"])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2.5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[False])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[None])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[\"\"])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(list(t))\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(list(t))\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i + 1, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(list(t))\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates) - 1):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i + 1, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(list(t))\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i + 1, t)\n            t.pop()\n            dfs(s, i + 1, t)\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(list(t))\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i + 1, t)\n            t.pop()\n            dfs(s, u + 1, t)\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(list(t))\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, u + 1, t)\n            t.pop()\n            dfs(s, u + 1, t)\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(list(t))\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, u + 1, t)\n            t.pop()\n            dfs(s, i + 1, t)\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(list(t))\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i + 1, t)\n            t.pop()\n            dfs(s, u + 1, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(list(t))\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i + 1, t)\n            t.pop()\n            dfs(s, u + 1, t)\n    ans = []\n    dfs(0, 0, [])\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u + 1, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u + 1, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-1])\n            return\n        if s > target:\n            return\n        for i in range(u + 1, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[len(t) // 2])\n            return\n        if s > target:\n            return\n        for i in range(u + 1, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[::-1])\n            return\n        if s > target:\n            return\n        for i in range(u + 1, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u + 1, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t + sum(t))\n            return\n        if s > target:\n            return\n        for i in range(u + 1, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t + [target])\n            return\n        if s > target:\n            return\n        for i in range(u + 1, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(len(t))\n            return\n        if s > target:\n            return\n        for i in range(u + 1, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(not ans)\n            return\n        if s > target:\n            return\n        for i in range(u + 1, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[s])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[target])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[u])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[s-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[s+1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[u+1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t + [])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(list(t))\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t.copy())\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(list(t))\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.remove(c)\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(list(t))\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            del t[-1]\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            del t[-1]\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(list(t))\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(list(t))\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            del t[-1]\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i + 1, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c + 1)\n            dfs(s + c, i + 1, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u + 1, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(i)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(0, len(candidates), 2):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(len(candidates)-1, -1, -1):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n    return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, __):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])  # Variant 1: Replace __ with a colon (:)\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])  # Variant 2: Replace __ with an index (0)\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t)  # Variant 3: Replace __ with the entire list (t)\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t + [__])  # Variant 4: Replace __ with a single undefined token (+ [__])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t + __)  # Variant 5: Replace __ with a single undefined token (+ __)\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append([__] + t)  # Variant 6: Replace __ with a single undefined token ([__] + t)\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t.extend([__]))  # Variant 7: Replace __ with a single undefined token (t.extend([__]))\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t + __ + t)  # Variant 8: Replace __ with a single undefined token (+ __ + t)\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append([__] + __ + t)  # Variant 9: Replace __ with a single undefined token ([__] + __ + t)\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t + [__] + t)  # Variant 10: Replace __ with a single undefined token (t + [__] + t)\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[len(t) // 2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[len(t) - 1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[u])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[s])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "ans.append(t[-1])",
    "ans.append(t[0])",
    "ans.append(t[len(t)-1])",
    "ans.append(t[-2])",
    "ans.append(t[1])",
    "ans.append(t[-3])",
    "ans.append(t[-len(t)])",
    "ans.append(t[2])",
    "ans.append(t[-4])",
    "ans.append(t[len(t)-2])",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "ans.append(t[-1])",
    "ans.append(t[len(t) - 1])",
    "ans.append(t[len(t) // 2])",
    "ans.append(t[0])",
    "ans.append(t[s])",
    "ans.append(t[i])",
    "ans.append(t[u])",
    "ans.append(t+[i])",
    "ans.append(c)",
    "ans.append(candidates[i])",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t.copy())\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(list(t))\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.remove(c)\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i + 1, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i - 1, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s > target:\n            return\n        if s == target:\n            ans.append(t[:])\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s > target:\n            return\n        if s == target:\n            ans.append(list(t))\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s > target:\n            return\n        if s == target:\n            ans.append(t[:])\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i + 1, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s > target:\n            return\n        if s == target:\n            ans.append(t[:])\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i - 1, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[len(t)//2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "ans.append(t[-1])",
    "ans.append(t[len(t) - 1])",
    "ans.append(t[-2])",
    "ans.append(t[len(t) - 2])",
    "ans.append(t[0])",
    "ans.append(t[1])",
    "ans.append(t[-1:])",
    "ans.append(t[:-1])",
    "ans.append(t[::-1][-1])",
    "ans.append(t[::-1][:1])",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "ans.append(t[-1])",
    "ans.append(t[len(t) - 1])",
    "ans.append(t[0])",
    "ans.append(t[-2])",
    "ans.append(t[1])",
    "ans.append(t[2])",
    "ans.append(t[-3])",
    "ans.append(t[len(t) - 2])",
    "ans.append(t[len(t) - 3])",
    "ans.append(t[3])",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            v = candidates[i]\n            t.append(v)\n            dfs(s + v, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            if t:\n                ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            if t:\n                ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i+1, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            if t:\n                ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            v = candidates[i]\n            t.append(v)\n            dfs(s + v, i+1, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:] if t else [])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(list(t) if t else [])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t.copy() if t else [])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(list(t)[:] if t else [])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:]) if t else []\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "ans.append(t[-1])",
    "ans.append(len(t))",
    "ans.append(target - s)",
    "ans.append(candidates[i])",
    "ans.append(i)",
    "ans.append(s)",
    "ans.append(u)",
    "ans.append(0)",
    "ans.append(None)",
    "ans.append([])",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "from typing import List\n\ndef f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t.copy())\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "from typing import List\n\ndef f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(list(t))\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "from typing import List\n\ndef f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t + [])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "from typing import List\n\ndef f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(list(t[:]))\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "from typing import List\n\ndef f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t + [])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "from typing import List\n\ndef f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(list(t))\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "from typing import List\n\ndef f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "from typing import List\n\ndef f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t.copy())\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "from typing import List\n\ndef f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(list(t.copy()))\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t)\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t.copy())\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans += t,\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(list(t))\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append([item for item in t])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(tuple(t))\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(list(tuple(t)))\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        x = len(ans)\n        if s == target:\n            ans[x:x] = [t]\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.insert(0, t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.extend([list(x) for x in [t]])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "...\n            t.append(c)\n            dfs(s + c, i, __)\n            t.pop()\n...",
    "...\n            t.append(c)\n            dfs(s + c, __, t)\n            t.pop()\n...",
    "...\n            t.append(c)\n            dfs(__ + c, i, t)\n            t.pop()\n...",
    "...\n            t.append(c)\n            dfs(s + c, __, __)\n            t.pop()\n...",
    "...\n            t.append(c)\n            dfs(__ + c, __, t)\n            t.pop()\n...",
    "...\n            t.append(__)\n            dfs(s + c, i, t)\n            t.pop()\n...",
    "...\n            t.append(c)\n            dfs(__ + c, i, __)\n            t.pop()\n...",
    "...\n            t.append(__)\n            dfs(s + c, i, __)\n            t.pop()\n...",
    "...\n            t.append(__)\n            dfs(__ + c, i, t)\n            t.pop()\n...",
    "...\n            t.append(c)\n            dfs(s + c, __, __)\n            t.pop()\n...",
    "ans.append(t[-1])",
    "ans.append(t[0])",
    "ans.append(t[1])",
    "ans.append(t[-2])",
    "ans.append(t[len(t)-1])",
    "ans.append(t[2])",
    "ans.append(t[3])",
    "ans.append(t[-3])",
    "ans.append(t[len(t)-2])",
    "ans.append(t[-2:])",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t)\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t)\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(target, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t)\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(target)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t)\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(u)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t)\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(len(t))\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t)\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(candidates[len(t)])\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t)\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(target)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(target, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t)\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(i)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t)\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(i + u)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t)\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(target % len(candidates))\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[u])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[s])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[len(t) - 1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[u + 1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-1][u])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[u])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[len(t) - 1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[len(t) // 2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[len(t) - 3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[u])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[u-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i + 1, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u + 1, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u + 1, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i + 1, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, u + 1, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates) - 1):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, u, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u + 1, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, u + 1, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates) - 1):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, u, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u + 1, len(candidates) - 1):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, u + 1, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates) - 1):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "ans.append(t[-1])",
    "ans.append(t[len(t) - 1])",
    "ans.append(t[-2])",
    "ans.append(t[len(t) - 2])",
    "ans.append(t[0])",
    "ans.append(t[1])",
    "ans.append(t[-1:])",
    "ans.append(t[:-1])",
    "ans.append(t[:])",
    "ans.append(t[::-1])",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t.copy())\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.__add__(c)\n            dfs(s + c, i, t)\n            t.__delitem__(-1)\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t.copy())\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.__iadd__([c])\n            dfs(s + c, i, t)\n            t.__delitem__(-1)\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t)\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t[:])\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t)\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t.copy())\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t)\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t[:])\n            t.remove(c)\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t[:])\n            t.remove(c)\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.__iadd__(t)\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t[:])\n            t.__delitem__(-1)\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.__iadd__(t)\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t[:])\n            t.remove(c)\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "ans.append(t)",
    "ans.append(sum(t))",
    "ans.append(list(t))",
    "ans.append([c for c in t])",
    "ans.append(t.copy())",
    "ans.append(tuple(t))",
    "ans.append({c for c in t})",
    "ans.append(set(t))",
    "ans.append({i: c for i, c in enumerate(t)})",
    "ans.append({c: i for i, c in enumerate(t)})",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[u])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t)\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[u:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[len(t)-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[u:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[a])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[this])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[b])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[10])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[tag])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[value])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[placeholder])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "# Variant 1\ndef f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "# Variant 2\ndef f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "# Variant 3\ndef f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "# Variant 4\ndef f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "# Variant 5\ndef f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "# Variant 6\ndef f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0:-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "# Variant 7\ndef f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "# Variant 8\ndef f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(__)\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "# Variant 9\ndef f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if __ == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "# Variant 10\ndef f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == __:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(len(t))\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(sum(t))\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(candidates)\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(candidates[u - 1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(candidates[u])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(candidates[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(u)\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(target)\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t.copy())\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans += [t]\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t = t + [c]\n            dfs(s + c, i, t)\n            t = t[:-1]\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(___')):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t.clone())\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == __:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, ___):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return __",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t)\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, __, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s < target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(__, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, __, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[a])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[10])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-10])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[u])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[u + 2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[len(t) - 1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[u - 1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[10])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[u])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[s])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[target])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[t])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[u])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop(u)\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[u])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, u, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[u])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, u, t)\n            t.pop(u)\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[u])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, u, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[u])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop(u)\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[u])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[s])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[i])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[c])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[len(candidates)])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t)\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[target])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "t.append(i)",
    "t.append(candidates[i])",
    "t.append(u)",
    "t.append(candidates[u])",
    "t.append(s)",
    "t.append(candidates[s])",
    "t.append(target)",
    "t.append(candidates[target])",
    "t.append(len(candidates))",
    "t.append(candidates[len(candidates)])",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(list(t))\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t.copy())\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t.copy())\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i+1, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t.copy())\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i+1, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, candidates)\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t)\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [1,2,3])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(list(t))\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, candidates)\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, candidates)\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(list(t))\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i+1, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, candidates)\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(list(t))\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i+1, t)\n            t.pop()\n    ans = []\n    dfs(0, 1, candidates)\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[42])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[None])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[\"\"])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3.14])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[True])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[False])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[print])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[f_gold])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[abs])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "ans.append(t)",
    "ans.extend(t)",
    "ans += t",
    "ans.append(t[:])",
    "ans.append(list(t))",
    "ans.append(tuple(t))",
    "ans += [t]",
    "ans.extend([t])",
    "ans += [[c] for c in t]",
    "ans += [c for c in t]",
    "ans.append(t)",
    "ans.append(t[:])",
    "ans.append(list(t))",
    "ans.append(tuple(t))",
    "ans.append(c)",
    "ans.append([c])",
    "ans.append([[c]])",
    "ans.append((c,))",
    "ans.append(([c],))",
    "ans.append({c})",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t.copy())\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(list(t))\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop(-1)\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.__delitem__(-1)\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t[-1:] = []\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            del t[-1]\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t = t[:-1]\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t[:] = t[:len(t)-1]\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t[-1:] = []\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[u])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[s])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t)\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[s])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c[i])\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[u])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c[i])\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[i])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c[i])\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[u])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i + 1, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[i])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i + 1, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t)\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i + 1, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t)\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, {})\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t)\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans[t] = 1\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = [None] * 10\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.extend(t)\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(len(t))\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t.copy())\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t)\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.extend([c])\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.extend(t.copy())\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.__setitem__(u, t)\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "ans.append(t)",
    "ans.append(list(t))",
    "ans.extend(t)",
    "ans.extend(list(t))",
    "ans += t",
    "ans += list(t)",
    "ans = t",
    "ans.append(t[:])",
    "ans.append(t.copy())",
    "ans.append([x for x in t])",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[u])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[s])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[t])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[t-len(t)])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1+3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[u-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[u])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[target])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[len(candidates)])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[s])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[u - 1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[len(t)//2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t.copy())\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(list(t))\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.remove(c)\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, list(t))\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t.copy())\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, list(t))\n            t.remove(c)\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs.__self__(s + c, i, list(t))\n            t.pop()\n    ans = []\n    dfs.__func__(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, list(t))\n            t.__class__.pop(t)\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, list(t))\n            t[c on cats]\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.extend(t)\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t + [])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t.copy())\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans += t\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.extend(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans += [t]\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t.copy())\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t += [c]\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(list(t))\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(r)\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(candidates)\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(candidates[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(u)\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[len(candidates)-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(u)\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(candidates[u])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(i)\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[u])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[u-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[u+1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[len(t) - 1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[len(t)//2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[len(t)//2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[u])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2*u])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[len(candidates) - 1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[::-1][0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[::-1][1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[::-1][-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t)\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[u])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[s])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-u])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[s - u])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0] + u)\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0] - u)\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[10])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[20])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[50])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[100])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "ans.append(t[0])",
    "ans.append(t[1])",
    "ans.append(t[-1])",
    "ans.append(t[len(t) - 1])",
    "ans.append(t[-2])",
    "ans.append(t[len(t) - 2])",
    "ans.append(t[2])",
    "ans.append(t[3])",
    "ans.append(t[-3])",
    "ans.append(t[len(t) - 3])",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[::])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:u])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[u])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[u:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0:u])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[u:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(list(t))\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t.copy())\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, comb):\n        if s == target:\n            ans.append(comb[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            comb.append(c)\n            dfs(s + c, i, comb)\n            comb.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, comb):\n        if s == target:\n            ans.append(list(comb))\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            comb.append(c)\n            dfs(s + c, i, comb)\n            comb.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, comb):\n        if s == target:\n            ans.append(list(comb))\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            comb.append(c)\n            dfs(s + c, i, comb)\n            comb.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, comb):\n        if s == target:\n            ans.append(comb[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            comb.append(c)\n            dfs(s + c, i, comb)\n            comb.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(sum_val, idx, combination):\n        if sum_val == target:\n            ans.append(combination[:])\n            return\n        if sum_val > target:\n            return\n        for i in range(idx, len(candidates)):\n            num = candidates[i]\n            combination.append(num)\n            dfs(sum_val + num, i, combination)\n            combination.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(sum_val, idx, combination):\n        if sum_val == target:\n            ans.append(combination[:])\n            return\n        if sum_val > target:\n            return\n        for i in range(idx, len(candidates)):\n            num = candidates[i]\n            combination.append(num)\n            dfs(sum_val + num, i, combination)\n            combination.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])  # Variant 1: Replace __ with \":\"\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t)  # Variant 2: Remove __ entirely\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(__)  # Variant 3: Replace __ with \"t.copy()\"\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append([] + t)  # Variant 4: Replace __ with \"[] + t\"\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n+            ans.append__[t])  # Variant 5: Replace __ with \"[t]\"\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:__])  # Variant 6: Replace __ with \"None\" to leave it unspecified\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t)  # Variant 7: Remove __ and the entire append statement\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.[__](t)  # Variant 8: Replace __ with \"extend\"\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:__])  # Variant 9: Replace __ with \"-1\" since the parameter is not specified\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t)  # Variant 10: Remove __ and the entire append statement\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(list(t))\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t.copy())\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, list(t))\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t[:])\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(list(t))\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t.copy())\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(list(t))\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, list(t))\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t.copy())\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t.copy())\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(list(t))\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, list(t))\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t.copy())\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t.copy())\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + 2*c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(1, len(candidates), 2):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i+1, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in reversed(range(len(candidates))):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(list(reversed(t)))\n            return\n        if s > target:\n            return\n        for i in range(len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i+1, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(len(candidates)):\n            c = 2 * candidates[i]\n            t.append(c)\n            dfs(s + c, i+1, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(len(candidates)//2 + 1):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i+1, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(len(candidates)):\n            c = candidates[i]\n            if i % 2 == 0:\n                t.append(c)\n                dfs(s + c, i+1, t)\n                t.pop()\n            else:\n                dfs(s, i+1, t)\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(len(candidates) - 1, -1, -1):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[::-1])\n            return\n        if s > target:\n            return\n        for i in range(len(candidates) - 1, -1, -1):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[u])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[u + 1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[u + 2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "t.append(i)",
    "t.append(s)",
    "t.append(candidates)",
    "t.append(target)",
    "t.append(u)",
    "t.append(len(candidates))",
    "t.append(ans)",
    "t.append([])",
    "t.append(dfs)",
    "t.append(c)",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i+1, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t[:])\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i+1, list(t))\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, list(t))\n        t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(list(t))\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t[:])\n            t.remove(c)\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.insert(u, c)\n            dfs(s + c, i, t)\n            t.pop(u)\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.insert(u, t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.insert(u, c)\n            dfs(s + c, i, t)\n            t.pop(u)\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(u, t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t[:])\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(list(t))\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i+1, t[:])\n            t.pop(u)\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])  # Fill the hole with index 0\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])  # Fill the hole with index 1\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])  # Fill the hole with index 2\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])  # Fill the hole with index 3\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])  # Fill the hole with index 4\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])  # Fill the hole with index 5\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])  # Fill the hole with index 6\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])  # Fill the hole with index 7\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])  # Fill the hole with index 8\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])  # Fill the hole with index 9\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "ans.append(t)",
    "ans.append(t[:])",
    "ans.extend(t)",
    "ans.extend(t[:])",
    "ans.append(list(t))",
    "ans.extend(list(t))",
    "ans.append(tuple(t))",
    "ans.extend(tuple(t))",
    "ans.append(set(t))",
    "ans.extend(set(t))",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[len(t)-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0:1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-2:-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-1:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1:2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0:-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[::-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[u])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[len(t) - 1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[u])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[s])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[t])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[len(t)])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[(s - u) // 2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[(u + len(t)) // 2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[len(t)-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i + 1, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u + 1, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u + 1, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i + 1, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i + 1, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u + 1, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u + 1, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i + 1, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i + 1, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u + 1, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t)\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(list(t))\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i+1, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(list(t))\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i+1, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t)\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i+1, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t[:])\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(list(t))\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t[:])\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i+1, t[:])\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(list(t))\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i+1, t[:])\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[::-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[u])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[s])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(max(t))\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(sum(t))\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(min(t))\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(len(t))\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[u])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[u % len(t)])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[len(t)-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[s % len(t)])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[target])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-u])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0-u])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[s-u])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "# Variant 1\ndef f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans\n\n# Variant 2\ndef f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans\n\n# Variant 3\ndef f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans\n\n# Variant 4\ndef f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans\n\n# Variant 5\ndef f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans\n\n# Variant 6\ndef f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans\n\n# Variant 7\ndef f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans\n\n# Variant 8\ndef f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans\n\n# Variant 9\ndef f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans\n\n# Variant 10\ndef f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(sum(t))\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[::-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[u])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(u)\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[__]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t)\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(u)\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t[__]()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(u)\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, __)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t.copy())\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(min(t))\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, __, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t)\n            return\n        if s > target:\n            return\n        for i in range(u, __):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n     def dfs(s, u, t):\n         if s == target:\n             ans.append(t[u])\n             return\n         if s > target:\n             return\n         for i in range(u, len(candidates)):\n             c = candidates[i]\n             t.append(c)\n             dfs(s + c, i, t)\n             t.pop()\n     ans = []\n     dfs(0, 0, [])\n     return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n     def dfs(s, u, t):\n         if s == target:\n             ans.append(t[0])\n             return\n         if s > target:\n             return\n         for i in range(u, len(candidates)):\n             c = candidates[i]\n             t.append(c)\n             dfs(s + c, i, t)\n             t.pop()\n     ans = []\n     dfs(0, 0, [])\n     return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n     def dfs(s, u, t):\n         if s == target:\n             ans.append(t[a])\n             return\n         if s > target:\n             return\n         for i in range(u, len(candidates)):\n             c = candidates[i]\n             t.append(c)\n             dfs(s + c, i, t)\n             t.pop()\n     ans = []\n     dfs(0, 0, [])\n     return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n     def dfs(s, u, t):\n         if s == target:\n             ans.append(t[1])\n             return\n         if s > target:\n             return\n         for i in range(u, len(candidates)):\n             c = candidates[i]\n             t.append(c)\n             dfs(s + c, i, t)\n             t.pop()\n     ans = []\n     dfs(0, 0, [])\n     return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n     def dfs(s, u, t):\n         if s == target:\n             ans.append(t[c])\n             return\n         if s > target:\n             return\n         for i in range(u, len(candidates)):\n             c = candidates[i]\n             t.append(c)\n             dfs(s + c, i, t)\n             t.pop()\n     ans = []\n     dfs(0, 0, [])\n     return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n     def dfs(s, u, t):\n         if s == target:\n             ans.append(t[len(candidates)-1])\n             return\n         if s > target:\n             return\n         for i in range(u, len(candidates)):\n             c = candidates[i]\n             t.append(c)\n             dfs(s + c, i, t)\n             t.pop()\n     ans = []\n     dfs(0, 0, [])\n     return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n     def dfs(s, u, t):\n         if s == target:\n             ans.append(t.pop())\n             return\n         if s > target:\n             return\n         for i in range(u, len(candidates)):\n             c = candidates[i]\n             t.append(c)\n             dfs(s + c, i, t)\n             t.pop()\n     ans = []\n     dfs(0, 0, [])\n     return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n     def dfs(s, u, t):\n         if s == target:\n             ans.append(t[0])\n             return\n         if s < target:\n             return\n         for i in range(u, len(candidates)):\n             c = candidates[i]\n             t.append(c)\n             dfs(s + c, i, t)\n             t.pop()\n     ans = []\n     dfs(0, 0, [])\n     return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n     def dfs(s, u, t):\n         if s == target:\n             ans.append(t[-1])\n             return\n         if s > target:\n             return\n         for i in range(u, len(candidates)):\n             c = candidates[i]\n             t.append(c)\n             dfs(s + c, i, t)\n             t.pop()\n     ans = []\n     dfs(0, 0, [])\n     return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n     def dfs(s, u, t):\n         if s == target:\n             ans.append(t[-1])\n             return\n         if s > target:\n             return\n         for i in range(u, len(candidates)):\n             c = candidates[i]\n             t.append(c)\n             dfs(s + c, i+1, t)\n             t.pop()\n     ans = []\n     dfs(0, 0, [])\n     return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[::])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[::2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[::-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0][::-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[::-1][0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(list(reversed(t))[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t)\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t)\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i + 1, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t)\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i + 1, t + [c])\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(list(t))\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i + 1, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(list(t))\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i + 1, list(t))\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(list(t))\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i + 1, t + [c])\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i + 1, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i + 1, t + [c])\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.extend([t])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i + 1, list(t))\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.extend([list(t)])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i + 1, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[u])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[s])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[len(ans)])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[s - u])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[s % len(ans)])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[target - s])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[target])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[target+ len(ans) - len(candidates)])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[s%len(ans) + len(candidates)%len(t)])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[(s - u) % (len(ans) + 1) % 2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[u])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[len(t)-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i + 1, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(u)\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(target)\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(len(candidates))\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(candidates[u])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "t[-1]",
    "t",
    "ans[-1]",
    "ans",
    "c",
    "i",
    "u",
    "s",
    "target",
    "candidates",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[u])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[u+1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[len(t)-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t.copy())\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(list(t))\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i + 1, t)  # Changed the index in the recursive call\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(list(t))\n            return\n        if s > target:\n            return\n        for i in range(u + 1, len(candidates)):  # Changed the starting index in the range\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for c in candidates[u:]:  # Changed the range to a slice\n            t.append(c)\n            dfs(s + c, u + 1, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(list(t))\n            return\n        if s > target:\n            return\n        for c in candidates[u:]:  # Changed the range to a slice\n            t.append(c)\n            dfs(s + c, u, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i, c in enumerate(candidates[u:]):\n            t.append(c)\n            dfs(s + c, u + i, t)  # Incrementing the index by 'i'\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(list(t))\n            return\n        if s > target:\n            return\n        for i, c in enumerate(candidates[u:]):\n            t.append(c)\n            dfs(s + c, u + i, t)  # Incrementing the index by 'i'\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "from copy import deepcopy\n\ndef f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(deepcopy(t))  # Using deepcopy to make a deep copy of the list\n            return\n        if s > target:\n            return\n        for i, c in enumerate(candidates[u:]):\n            t.append(c)\n            dfs(s + c, u + i, t)  # Incrementing the index by 'i'\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[u])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[u+1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[u-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[u+2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "ans.append(t[-1])",
    "ans.append(t[0])",
    "ans.append(t[1])",
    "ans.append(t[u])",
    "ans.append(t[i])",
    "ans.append(t[s])",
    "ans.append(t[len(t) - 1])",
    "ans.append(t[u + 1])",
    "ans.append(t[i - 1])",
    "ans.append(t[len(t) - u - 1])",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "# Variant 1\ndef f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "# Variant 2\ndef f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "# Variant 3\ndef f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "# Variant 4\ndef f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "# Variant 5\ndef f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "# Variant 6\ndef f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "# Variant 7\ndef f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "# Variant 8\ndef f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "# Variant 9\ndef f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "# Variant 10\ndef f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[u])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[s])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[u+1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[len(t)-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t)\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t.copy())\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t[:])\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(list(t))\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t[:])\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t)\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t[:])\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t[:])\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[__])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(list(t))\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.insert(i, c)\n            dfs(s + c, i, t[:])\n            t.pop(i)\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(list(t))\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t[:-1])\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[u])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[u+1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[s])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[s+1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[u-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[s-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "...\n            ans.append(t[-1])\n...",
    "...\n            ans.append(t[0])\n...",
    "...\n            ans.append(t[u])\n...",
    "...\n            ans.append(t[i])\n...",
    "...\n            ans.append(t[len(t)-1])\n...",
    "...\n            ans.append(t[s])\n...",
    "...\n            ans.append(t[s-u])\n...",
    "...\n            ans.append(t[s+i])\n...",
    "...\n            ans.append(t[len(t)-u])\n...",
    "...\n            ans.append(t[len(t)-i-1])\n...",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[u])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[s])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t)\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0][0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-1][-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-1][0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[u][i])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[u][0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "t.append(c)\n___(s + c, i, t)\n___(s, i + 1, t)",
    "___(s + c, i + 1, t)\n___(s, i, t)",
    "___(s + c, i + 1, t)\n___(s, i, t)",
    "___(s + c, i, t)\n___(s, i + 1, t)",
    "___(s + c, i, t)\n___(s, i, t)",
    "___(s, i + 1, t)\n___(s + c, i, t)",
    "___(s, i + 1, t)\n___(s + c, i + 1, t)",
    "___(s, i, t)\n___(s + c, i, t)",
    "___(s, i, t)\n___(s + c, i + 1, t)",
    "___(s, i, t)\n___(s + c, i, t)",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[u])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[u + 1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[u - 1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[u + 2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])  # Variant 1\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append([*t])  # Variant 2\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(list(t))  # Variant 3\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.extend([t[:]])  # Variant 4\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.extend(t)  # Variant 5\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans += [t]  # Variant 6\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans += t[:]  # Variant 7\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans = [x for x in t]  # Variant 8\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans = t.copy()  # Variant 9\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans = t.copy()  # Variant 10\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t.copy())\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t.copy())\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i + 1, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t.copy())\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, u, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, u, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t.copy())\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i + 1, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[__])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i + 1, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[__])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, u, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[__])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, u, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[__])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[len(t)-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[u])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[u+1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[u-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[u])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[u-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[u+1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[s])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[sum(candidates)])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[candidates[0]])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t.copy())\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(list(t))\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append([x for x in t])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[::])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(list(t))\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append([x for x in t])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[::])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(list(t))\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append([x for x in t])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "ans.append(t)",
    "ans.append(t[:])",
    "ans.append(list(t))",
    "ans.append(tuple(t))",
    "ans.append(t.copy())",
    "ans.append(t + [])",
    "ans.append([x for x in t])",
    "ans.append(list(t[:]))",
    "ans.append(list(t[:]))",
    "ans.append(list(t))",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[::-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[::-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i + 1, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[::-1])\n            return\n        if s > target:\n            return\n        for i in range(u + 1, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i + 1, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u + 1, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(list(t))\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(list(t))\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i + 1, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(list(t))\n            return\n        if s > target:\n            return\n        for i in range(u + 1, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(list(t))\n            return\n        if s > target:\n            return\n        for i in range(u + 1, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i + 1, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i + 1, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u + 1, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u + 1, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i + 1, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(list(t))\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(list(t))\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i + 1, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(list(t))\n            return\n        if s > target:\n            return\n        for i in range(u + 1, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(list(t))\n            return\n        if s > target:\n            return\n        for i in range(u + 1, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i + 1, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t.copy())\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t.copy())\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i + 1, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t.copy())\n            return\n        if s > target:\n            return\n        for i in range(u + 1, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[u])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[u-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[u+1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[len(t)//2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[len(t)//3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[s])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[s - 1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[u])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[s + 1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[len(t) - 1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[u - 1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "ans.append(t[:])",
    "ans.append(t)",
    "ans += t",
    "ans.extend(t)",
    "ans.append(list(t))",
    "ans.append(t.copy())",
    "ans.append(tuple(t))",
    "ans.append((t,))",
    "ans.append([x for x in t])",
    "ans.append(list(x for x in t))",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[u])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[u-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[s])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[target])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[len(candidates)-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[len(t)-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "t.append(t[-1])",
    "t.append(s)",
    "t.append(candidates[-1])",
    "t.append(len(t))",
    "t.append(sum(t))",
    "t.append(min(t))",
    "t.append(max(t))",
    "t.append(target - s)",
    "t.append(u)",
    "t.append(i)",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[i])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[k])\n            return\n        if s > target:\n            return\n        for k in range(u, len(candidates)):\n            c = candidates[k]\n            t.append(c)\n            dfs(s + c, k, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[j])\n            return\n        if s > target:\n            return\n        for j in range(u, len(candidates)):\n            c = candidates[j]\n            t.append(c)\n            dfs(s + c, j, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[m])\n            return\n        if s > target:\n            return\n        for m in range(u, len(candidates)):\n            c = candidates[m]\n            t.append(c)\n            dfs(s + c, m, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[n])\n            return\n        if s > target:\n            return\n        for n in range(u, len(candidates)):\n            c = candidates[n]\n            t.append(c)\n            dfs(s + c, n, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[x])\n            return\n        if s > target:\n            return\n        for x in range(u, len(candidates)):\n            c = candidates[x]\n            t.append(c)\n            dfs(s + c, x, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[y])\n            return\n        if s > target:\n            return\n        for y in range(u, len(candidates)):\n            c = candidates[y]\n            t.append(c)\n            dfs(s + c, y, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[z])\n            return\n        if s > target:\n            return\n        for z in range(u, len(candidates)):\n            c = candidates[z]\n            t.append(c)\n            dfs(s + c, z, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[a])\n            return\n        if s > target:\n            return\n        for a in range(u, len(candidates)):\n            c = candidates[a]\n            t.append(c)\n            dfs(s + c, a, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[b])\n            return\n        if s > target:\n            return\n        for b in range(u, len(candidates)):\n            c = candidates[b]\n            t.append(c)\n            dfs(s + c, b, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[u])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[9])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0:2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[len(t)-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[:])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[i-u])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[::-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[u])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[2])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[3])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[4])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[5])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[6])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[7])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[8])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[u])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[len(t) - 1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i + 1, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(s + c, i, t)\n            t.__class__\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(sum(t), i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[-1])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            c = candidates[i]\n            t.append(c)\n            dfs(sum(t), i, t)\n            t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans",
    "def f_gold(candidates: List[int], target: int) -> List[List[int]]:\n    def dfs(s, u, t):\n        if s == target:\n            ans.append(t[0])\n            return\n        if s > target:\n            return\n        for i in range(u, len(candidates)):\n            if u != 3:\n                c = candidates[i]\n                t.append(c)\n                dfs(sum(t), u, t)\n                t.pop()\n    ans = []\n    dfs(0, 0, [])\n    return ans"
  ],
  "num_code_blocks": 2689
}
