{
  "template": "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[__])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
  "lang": "py",
  "temperature": 1.1,
  "code_blocks": [
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[u])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[len(nums)-1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[u+1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[-1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[u-1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[len(t)//2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[u-2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[len(t)-1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[u])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[-1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[u-1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[len(t)//2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[-2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[u+1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[u])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[42])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[-1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[None])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t['value'])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4.7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[True])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[False])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[()])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[6])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[8])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[9])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[6])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[8])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[9])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import List\n\ndef subsetsWithDup(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import List\n\ndef subsetsWithDup(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[len(nums)-1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import List\n\ndef subsetsWithDup(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[nums[0]])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import List\n\ndef subsetsWithDup(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[len(t)-1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import List\n\ndef subsetsWithDup(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[len(t)])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import List\n\ndef subsetsWithDup(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[-1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import List\n\ndef subsetsWithDup(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import List\n\ndef subsetsWithDup(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[len(t)//2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import List\n\ndef subsetsWithDup(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[u])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import List\n\ndef subsetsWithDup(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[-2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "ans.append(t[0])",
    "ans.append(t[1])",
    "ans.append(t[2])",
    "ans.append(t[3])",
    "ans.append(t[4])",
    "ans.append(t[-1])",
    "ans.append(t[5])",
    "ans.append(t[6])",
    "ans.append(t[7])",
    "ans.append(t[8])",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[u])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(#)  \n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(#)\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[u])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(#, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(u)\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t__)\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(__)\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(0)\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(u)\n        for i in range(#, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u: int, t: List[int]):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u: int, t: List[int]):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u: int, t: List[int]):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u: int, t: List[int]):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u: int, t: List[int]):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u: int, t: List[int]):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u: int, t: List[int]):\n        ans.append(t[6])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u: int, t: List[int]):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u: int, t: List[int]):\n        ans.append(t[8])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u: int, t: List[int]):\n        ans.append(t[9])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])  # Fill in the hole with 0\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])  # Fill in the hole with 1\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])  # Fill in the hole with 2\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])  # Fill in the hole with 3\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])  # Fill in the hole with 4\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[10])  # Fill in the hole with 10\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[-1])  # Fill in the hole with -1\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[-2])  # Fill in the hole with -2\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[-3])  # Fill in the hole with -3\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])  # Fill in the hole with 5\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[u])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[42])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[999])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[-1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[len(t)-1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[-2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[int(0.5)])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[6])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[8])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[9])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[-1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[-2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[-3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[-4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[i])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[u])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[x])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[n])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[a])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[-1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[-2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[len(nums)-1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[len(nums)-2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[6])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[8])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[9])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[nums[i]])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[u])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[u])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return []",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[nums[i]])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return []",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[len(nums)-1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[len(ans)-1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[i])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[i])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return []",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[__])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return []",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[u])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return []",
    "from typing import *\ndef subsetsWithDup(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[i])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef subsetsWithDup(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[x])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef subsetsWithDup(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[value])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef subsetsWithDup(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[iter])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef subsetsWithDup(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[ele])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef subsetsWithDup(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[count])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef subsetsWithDup(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[index])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef subsetsWithDup(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[val])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef subsetsWithDup(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t)\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef subsetsWithDup(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[val])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import List\n\ndef subsetsWithDup(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import List\n\ndef subsetsWithDup(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import List\n\ndef subsetsWithDup(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import List\n\ndef subsetsWithDup(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import List\n\ndef subsetsWithDup(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import List\n\ndef subsetsWithDup(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import List\n\ndef subsetsWithDup(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[6])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import List\n\ndef subsetsWithDup(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import List\n\ndef subsetsWithDup(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[8])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import List\n\ndef subsetsWithDup(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[9])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import List\n\n\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[u])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import List\n\n\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[t])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import List\n\n\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import List\n\n\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import List\n\n\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[-1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import List\n\n\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[len(nums)])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import List\n\n\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[u - 1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import List\n\n\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import List\n\n\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[u] + 1)\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import List\n\n\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(nums[t])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[6])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[8])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[9])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import List\n\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import List\n\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import List\n\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import List\n\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import List\n\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import List\n\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import List\n\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[6])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import List\n\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import List\n\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[8])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import List\n\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[9])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[NUM])     # Variant 1\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[IDX])     # Variant 2\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[ELEMENT])     # Variant 3\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[VALUE])     # Variant 4\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[ITEM])     # Variant 5\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[X])     # Variant 6\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[ITER])     # Variant 7\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[SOMETHING])     # Variant 8\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[VAL])     # Variant 9\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[PLACEHOLDER])     # Variant 10\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[u])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[u-1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[len(t)-1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[-1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(nums[u])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(nums[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(nums[u-1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(nums[len(t)-1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(nums[-1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[x])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[99])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[-1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[42])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[__])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[10])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t['__'])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[u])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[u])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(1, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(1, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(0, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(0, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(1, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(1, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(0, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(0, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(1, [])\n    return ans",
    "from typing import List\n\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import List\n\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import List\n\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import List\n\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import List\n\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import List\n\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import List\n\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[6])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import List\n\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import List\n\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[8])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import List\n\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[9])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[u])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[u])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[42])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[42])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t['abc'])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t['abc'])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[None])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[None])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[-1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[10])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[100])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[999])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[-2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[-5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[-10])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "subsetsWithDup \nfrom typing import *\n\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[len(nums)])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "subsetsWithDup \nfrom typing import *\n\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "subsetsWithDup \nfrom typing import *\n\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[42])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "subsetsWithDup \nfrom typing import *\n\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "subsetsWithDup \nfrom typing import *\n\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[u])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "subsetsWithDup \nfrom typing import *\n\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[999])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "subsetsWithDup \nfrom typing import *\n\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[-1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "subsetsWithDup \nfrom typing import *\n\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "subsetsWithDup \nfrom typing import *\n\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "subsetsWithDup \nfrom typing import *\n\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[99])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[6])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[8])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[9])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[u])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[-1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[u-1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[10])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[6])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[8])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[9])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[6])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[8])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[9])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[6])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[8])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[9])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[6])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[8])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[9])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[u])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[-1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[len(t)-1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[10])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[-2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[u])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[t])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t)\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(nums)\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(u)\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(nums[u])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[nums])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(nums[nums])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t)\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(nums)\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[6])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[8])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[9])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[6])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[8])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[9])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "# Variant 1\n### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans\n\n# Variant 2\n### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans\n\n# Variant 3\n### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans\n\n# Variant 4\n### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans\n\n# Variant 5\n### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans\n\n# Variant 6\n### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans\n\n# Variant 7\n### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[6])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans\n\n# Variant 8\n### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans\n\n# Variant 9\n### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[8])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans\n\n# Variant 10\n### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[9])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[u])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[-1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[len(t)-1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[len(t)//2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[u+1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[u*2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[u-1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[6])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[8])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[9])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[6])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[8])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[9])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[6])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[8])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[9])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[6])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[8])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[9])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[6])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[8])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[9])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[i])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[-1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[-2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[-5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[-3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[10])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[6])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[8])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[9])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup\nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[6])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[8])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[9])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[6])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[8])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[9])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[6])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[8])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[9])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[6])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[8])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[9])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[6])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[8])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[9])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[6])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[8])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[9])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[6])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[8])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[9])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[6])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[8])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[9])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[i])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[j])\n        for j in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[x])\n        for x in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[k])\n        for k in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[a])\n        for a in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[b])\n        for b in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[c])\n        for c in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[d])\n        for d in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[m])\n        for m in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[n])\n        for n in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[6])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[8])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[9])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[6])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[8])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[9])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n  def dfs(u, t):\n    ans.append(t[-1])\n    for i in range(u, len(nums)):\n      some_secret_fn_4071()\n  ans = []\n  nums.sort()\n  dfs(0, [])\n  return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[-2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[-3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[len(t)-1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[len(t)-2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[6])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[8])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[9])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[u])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[-1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[10])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[100])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[-1000])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[\"abc\"])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[None])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[u])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[-1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[6])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[6])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[8])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[9])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[u])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[-1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[6])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[u])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[6])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[8])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[u])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[-1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[-2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t + [nums[u]])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t)\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t)\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, nums)\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t + [nums[u]])\n        for i in range(u + 1, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t)\n        for i in range(u + 1, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t)\n        for i in range(1, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t + [u])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t + [u])\n        for i in range(1, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t + [u])\n        for i in range(u + 1, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t + [u])\n        for i in range(1, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, nums)\n    return ans",
    "def f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[-1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "def f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "def f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[len(t) - 1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "def f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "def f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "def f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "def f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "def f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[-2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "def f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[-3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "def f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[-4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[u])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[len(t)-1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[::-1][u])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[len(nums)-1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[u-1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[-u])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[:u])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[u+1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[u*u])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[len(t)//2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[6])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[8])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[9])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(nums[u])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[u])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(nums[t])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t)\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(nums[i])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[i])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(nums[i])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071(i+1, t+[nums[i]])\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(nums[u])\n        for i in range(u+1, len(nums)):\n            some_secret_fn_4071(i, t+[nums[i]])\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t)\n        for i in range(u+1, len(nums)):\n            some_secret_fn_4071(i, t+[nums[i]])\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t)\n        for i in range(u+1, len(nums)):\n            some_secret_fn_4071(i, t+nums[i])\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[u])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[-1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[100])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[999])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0.5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[None])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup\nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[\"x\"])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[True])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "# subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "# subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "# subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "# subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "# subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "# subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "# subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[6])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "# subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "# subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[8])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "# subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[9])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[6])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[8])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[9])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\n\ndef subset_sums(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[u])\n        for i in range(u, len(nums)):\n             some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\n\ndef subset_sums(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n             some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\n\ndef subset_sums(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[len(nums)-1])\n        for i in range(u, len(nums)):\n             some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\n\ndef subset_sums(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n             some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\n\ndef subset_sums(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[-1])\n        for i in range(u, len(nums)):\n             some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\n\ndef subset_sums(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[u+1])\n        for i in range(u, len(nums)):\n             some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\n\ndef subset_sums(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n             some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\n\ndef subset_sums(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[len(t)//2])\n        for i in range(u, len(nums)):\n             some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\n\ndef subset_sums(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n             some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\n\ndef subset_sums(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[u-1])\n        for i in range(u, len(nums)):\n             some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[-1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[-2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[10])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[-5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "ans.append(t[0])",
    "ans.append(t[1])",
    "ans.append(t[2])",
    "ans.append(t[-1])",
    "ans.append(t[len(t)-1])",
    "ans.append(t[len(t)//2])",
    "ans.append(t[3])",
    "ans.append(t[-2])",
    "ans.append(t[u])",
    "ans.append(t[i])",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[6])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[8])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[9])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[6])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[8])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[9])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import List\n\ndef subsetsWithDup(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import List\n\ndef subsetsWithDup(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import List\n\ndef subsetsWithDup(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import List\n\ndef subsetsWithDup(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import List\n\ndef subsetsWithDup(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import List\n\ndef subsetsWithDup(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import List\n\ndef subsetsWithDup(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[6])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import List\n\ndef subsetsWithDup(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import List\n\ndef subsetsWithDup(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[8])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import List\n\ndef subsetsWithDup(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[9])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[len(t)])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[-1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[int(len(t)/2)])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[-2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[u])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[u+1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[6])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[8])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[9])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[i])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[num])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[y])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[value])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[idx])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[val])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[val])\n        for i in range(u, len(nums)):\n            secret_function()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[element])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[n])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "from typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[k])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[6])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[8])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[9])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[6])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[8])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[9])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[6])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[8])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[9])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[6])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[8])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[9])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[6])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[8])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[9])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[0])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[1])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[2])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[3])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[4])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[5])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[6])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[7])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[8])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans",
    "### subsetsWithDup \nfrom typing import *\ndef f_gold(nums: List[int]) -> List[List[int]]:\n    def dfs(u, t):\n        ans.append(t[9])\n        for i in range(u, len(nums)):\n            some_secret_fn_4071()\n    ans = []\n    nums.sort()\n    dfs(0, [])\n    return ans"
  ],
  "num_code_blocks": 891
}
