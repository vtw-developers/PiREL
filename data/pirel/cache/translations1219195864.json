{
  "template": "return [i ^ (i >> __) for i in range(__ << n)]",
  "source_lang": "py",
  "target_lang": "js",
  "template_origin": "return [i ^ (i >> 1) for i in range(1 << n)]",
  "translations": {
    "return [i ^ (i >> 1) for i in range(2 << n)]": [
      "function calculate(n) {\n    var result = [];\n    for (var i = 0; i < Math.pow(2, n + 1); i++) {\n        result.push(i ^ (i >> 1));\n    }\n    return result;\n}\n\nvar n = 5;\nvar output = calculate(n);\nconsole.log(output);"
    ],
    "return [i ^ (i >> 2) for i in range(4 << n)]": [
      "function f_gold(n) {\n    let result = [];\n    for (let i = 0; i < (4 << n); i++) {\n        result.push(i ^ (i >> 2));\n    }\n    return result;\n}"
    ],
    "return [i ^ (i >> 3) for i in range(8 << n)]": [
      "function f_gold(n) {\n    var result = [];\n    for (var i = 0; i < (8 << n); i++) {\n        result.push(i ^ (i >> 3));\n    }\n    return result;\n}"
    ],
    "return [i ^ (i >> 4) for i in range(16 << n)]": [
      "function f_gold(n) {\n    var result = [];\n    for (var i = 0; i < (16 << n); i++) {\n        result.push(i ^ (i >> 4));\n    }\n    return result;\n}"
    ],
    "return [i ^ (i >> 5) for i in range(32 << n)]": [
      "function f_gold(n) {\n    var result = [];\n    for (var i = 0; i < (32 << n); i++) {\n        result.push(i ^ (i >> 5));\n    }\n    return result;\n}"
    ]
  }
}
