{
  "template": "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[__])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
  "lang": "py",
  "temperature": 1.1,
  "code_blocks": [
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[6])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[7])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[8])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[9])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[u])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[s-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[len(t)-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[len(t)//2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[len(t)//3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    size = len(t)\n    if s == target:\n        ans.append(t[size//2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    size = len(t)\n    if s == target:\n        ans.append(t[size-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[6])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[7])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[8])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[9])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[len(ans)])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[len(t) - 1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for __ in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, u, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(__)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[u])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[u])\n        return\n    if s > target:\n        return\n    for i in range(u, len(__)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, u, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[u])\n        return\n    if s > target:\n        return\n    for i in range(__, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[u])\n        return\n    if s > target:\n        return\n    for __ in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[u])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[s])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[u+1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-u])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[u-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[len(t) - 1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[s-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[6])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[7])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[8])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[9])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[6])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[7])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[8])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[9])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[6])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[7])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[8])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[9])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "# Variant 1\ndef dfs(s, u, t):\n    if s == target:\n        ans.append(t[u])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\n\n# Variant 2\ndef dfs(s, u, t):\n    if s == target:\n        ans.append(t[s])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\n\n# Variant 3\ndef dfs(s, u, t):\n    if s == target:\n        ans.append(t[len(ans)])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\n\n# Variant 4\ndef dfs(s, u, t):\n    if s == target:\n        ans.append(t[u * i])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\n\n# Variant 5\ndef dfs(s, u, t):\n    if s == target:\n        ans.append(t[i])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\n\n# Variant 6\ndef dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\n\n# Variant 7\ndef dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\n\n# Variant 8\ndef dfs(s, u, t):\n    if s == target:\n        ans.append(t[s + i])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\n\n# Variant 9\ndef dfs(s, u, t):\n    if s == target:\n        ans.append(t[i + 1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\n\n# Variant 10\ndef dfs(s, u, t):\n    if s == target:\n        ans.append(t[i - 1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[6])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[7])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[8])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[9])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "ans.append(t[-1])",
    "ans.append(t[0])",
    "ans.append(t[len(t)-1])",
    "ans.append(t[-2])",
    "ans.append(t[1])",
    "ans.append(t[-3])",
    "ans.append(t[-4])",
    "ans.append(t[2])",
    "ans.append(t[3])",
    "ans.append(t[-5])",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[6])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[7])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[8])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[9])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "dfs(s + c, i, t, __)",
    "dfs(s + c, i, t, t[__])",
    "dfs(s + c, i, t, c + t[__])",
    "dfs(s + c, i, t, s + t[__])",
    "dfs(s + c, i, t, u + t[__])",
    "dfs(s + c, i, t, candidates[i + __])",
    "dfs(s + c, i, t, len(candidates) - i + __)",
    "dfs(s + c, i, t, i + __)",
    "dfs(s + c, i, t, s - c + __)",
    "dfs(s + c, i, t, u - i + __)",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[len(t) - 1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[u])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[s])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[target])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[i+1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[s])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[len(t)])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[t[u]])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[s+c])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[ans])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[target])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[c])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[len(candidates)-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "# Variant 1\ndef dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\n\n# Variant 2\ndef dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\n\n# Variant 3\ndef dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\n\n# Variant 4\ndef dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\n\n# Variant 5\ndef dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\n\n# Variant 6\ndef dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\n\n# Variant 7\ndef dfs(s, u, t):\n    if s == target:\n        ans.append(t[6])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\n\n# Variant 8\ndef dfs(s, u, t):\n    if s == target:\n        ans.append(t[7])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\n\n# Variant 9\ndef dfs(s, u, t):\n    if s == target:\n        ans.append(t[8])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\n\n# Variant 10\ndef dfs(s, u, t):\n    if s == target:\n        ans.append(t[9])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[len(t) - 1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u + 1, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u + 1, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i + 1, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates) - 1):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i + 1, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[len(t) // 2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[len(t)-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[u])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[i])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[len(t)-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[u-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[6])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[7])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[8])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[9])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[6])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[7])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[8])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[6])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[7])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[8])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[9])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[len(t) - 2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3:7])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[:])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[u])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[i-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[int(u/2)])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[int(len(t)/2)])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[u])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[len(t)-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[u+1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[len(t)-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        popped_value = t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[len(t) - 1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        popped_val = t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.remove(c)",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[len(t)-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        unused = t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        last = t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for __ in range(u, len(candidates)):\n        c = candidates[__]\n        t.append(c)\n        dfs(s + c, __, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(__)\n        return\n    if s > target:\n        return\n    for __ in range(u, len(candidates)):\n        c = candidates[__]\n        t.append(c)\n        dfs(s + c, __, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        print(t[-1])\n        return\n    if s > target:\n        return\n    for __ in range(u, len(candidates)):\n        c = candidates[__]\n        t.append(c)\n        dfs(s + c, __, t)\n        t.pop()",
    "ans.append(t[-1])",
    "ans.append(t[0])",
    "ans.append(t[1])",
    "ans.append(t[u])",
    "ans.append(t[i])",
    "ans.append(t[len(t)-1])",
    "ans.append(t[-u])",
    "ans.append(t[1 - 1])",
    "ans.append(t[i + 1 - 1])",
    "ans.append(t[len(candidates) - 1])",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "Variant 1:\nt.append(c)\ndfs(s + c, i, t)\nt.pop()",
    "Variant 2:\nt.append(c)\ndfs(s + c, i, t)\nt.pop(i)",
    "Variant 3:\nt.append(c)\ndfs(s + c, i + 1, t)\nt.pop()",
    "Variant 4:\nt.append(c)\ndfs(s + c, i + 1, t)\nt.pop(i)",
    "Variant 5:\nt.append(c)\ndfs(s + c, i, list(t))\nt.pop()",
    "Variant 6:\nt.append(c)\ndfs(s + c, i, list(t))\nt.pop(i)",
    "Variant 7:\nt.append(c)\ndfs(s + c, i + 1, list(t))\nt.pop()",
    "Variant 8:\nt.append(c)\ndfs(s + c, i + 1, list(t))\nt.pop(i)",
    "Variant 9:\nt.append(c)\ndfs(s + c, i, t[:])\nt.pop()",
    "Variant 10:\nt.append(c)\ndfs(s + c, i, t[:])\nt.pop(i)",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[len(t)-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[6])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[7])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[8])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[9])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "t.append(c)\n        dfs(s + c, i + 1, t)\n        t.pop()",
    "t.append(c)\n        dfs(s + c, i + 2, t)\n        t.pop()",
    "t.append(i)\n        dfs(s + c, i, t)\n        t.pop()",
    "t.append(c * 2)\n        dfs(s + c, i, t)\n        t.pop()",
    "t.append(target)\n        dfs(s + c, i, t)\n        t.pop()",
    "t.append(target + s)\n        dfs(s + c, i, t)\n        t.pop()",
    "t.append(c * u)\n        dfs(s + c, i, t)\n        t.pop()",
    "t.append(s)\n        dfs(s + c, i, t)\n        t.pop()",
    "ans.append(i)\n        dfs(s + c, i, t)\n        t.pop()",
    "ans.append(c * u)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[6])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[7])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[8])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[9])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[6])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[7])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[8])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[9])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[6])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[7])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[8])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[9])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[len(t)-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[u])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[u-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[u+1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[:])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[s])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[__]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(__)\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[u])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, __, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[u])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = __\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[_])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[u])\n        return\n    if s > target:\n        return\n    for i in range(u, ___):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[u])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[u-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[6])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[6])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[7])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[8])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[9])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[6])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[7])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[8])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[9])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[len(t) // 2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[::-1][0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[::-1][-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[random.randint(0, len(t))])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(choice(t))\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0] if random.random() < 0.5 else t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[len(candidates) % len(t)])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[s % len(t)])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[len(t) - 1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[u])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-u])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[u-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[i])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[i-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0][0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[len(t) - 1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[len(t) - 1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t.pop())\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i + 1, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates) + 1):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[len(t) - 1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i + 1]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i + 1, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t.pop())\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i + 1, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t.pop())\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i + 1]\n        t.append(c)\n        dfs(s + c, i + 1, t)\n        t.pop()",
    "ans.append(t[-1])",
    "ans.append(t[0])",
    "ans.append(t[1])",
    "ans.append(t[len(t) - 1])",
    "ans.append(t[-2])",
    "ans.append(t[2])",
    "ans.append(t[len(t) // 2])",
    "ans.append(t[3])",
    "ans.append(t[len(t) - 2])",
    "ans.append(t[4])",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[6])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[7])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[8])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[9])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[6])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[7])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[8])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[9])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[len(t) - 1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "t[-1]",
    "-1",
    "1",
    "0",
    "2",
    "3",
    "len(t) - 1",
    "0 if len(t) == 0 else len(t) - 1",
    "len(t)",
    "len(t) + 1",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[6])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[len(t)-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[u])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[i])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[s])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[target])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[6])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[7])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[8])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[9])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[8])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[6])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[7])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[6])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[7])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[8])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[9])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[6])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[7])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[8])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[9])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[6])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[7])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[8])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[9])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[9])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "t.append(__)",
    "u += __",
    "s += __",
    "c += __",
    "len(__)",
    "i += __",
    "candidates[__]",
    "ans[__]",
    "target[__]",
    "t[__]",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "t.append(c)\n        dfs(s + c, u, t)\n        t.pop()",
    "t.append(c)\n        dfs(s + c, i, t)\n        t.pop(-1)",
    "t.append(c)\n        dfs(s + c, u, t)\n        t.pop(-1)",
    "t.append(c)\n        dfs(s + c, i, t)\n        t.pop(0)",
    "t.append(c)\n        dfs(s + c, u, t)\n        t.pop(0)",
    "t.append(c)\n        dfs(s + c, i, t)\n        t.pop(-2)",
    "t.append(c)\n        dfs(s + c, u, t)\n        t.pop(-2)",
    "t.append(c)\n        dfs(s + c, i, t)\n        t.remove(c)",
    "t.append(c)\n        dfs(s + c, u, t)\n        t.remove(c)",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[u])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[u+1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[len(candidates)-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[s])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[len(t) - 1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[u])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[i])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[i - 1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "Variant 1:\ndef dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\n\nVariant 2:\ndef dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\n\nVariant 3:\ndef dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\n\nVariant 4:\ndef dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\n\nVariant 5:\ndef dfs(s, u, t):\n    if s == target:\n        ans.append(t[::-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\n\nVariant 6:\ndef dfs(s, u, t):\n    if s == target:\n        ans.append(t[:])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\n\nVariant 7:\ndef dfs(s, u, t):\n    if s == target:\n        ans.append(t.copy())\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\n\nVariant 8:\ndef dfs(s, u, t):\n    if s == target:\n        ans.append(t)\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\n\nVariant 9:\ndef dfs(s, u, t):\n    if s == target:\n        ans.append(t+.copy())\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()\n\nVariant 10:\ndef dfs(s, u, t):\n    if s == target:\n        ans.append(t.copy() )\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[u])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[10])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[u+1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[u])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[s])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[target])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[len(t)-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "dfs(s + c, i+1, t)",
    "dfs(s + c, i+1, t + [c])",
    "dfs(s + c, i+1, t.copy())",
    "dfs(s + c, i, t + [c])",
    "dfs(s + c, i, t.copy())",
    "dfs(s + c, i, t.__add__([c]))",
    "dfs(s + c, i, t + [__])",
    "dfs(s + c, i+__1, t)",
    "dfs(s + c, i+__1, t + [c])",
    "dfs(s + c, i+__1, t.copy())",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[6])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[7])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[8])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[9])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[len(t) - 1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[u])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[u-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[len(t)-2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[__]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[__]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[u])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(__)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(__)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[len(candidates)])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, __)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[__])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[len(t)])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[target])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[6])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[7])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[8])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[6])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[7])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[8])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[9])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[6])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[7])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[8])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[9])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[u])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t.__getitem__(u))\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[int(''.join(__))])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[u - 1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(tu)\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(text)\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t['u'])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "Variant 10:",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i+1, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u+1, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u-1, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)-1):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[6])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[7])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[8])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[9])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "t.append(i)",
    "t.append(c)",
    "t.append(s)",
    "t.append(u)",
    "t.append(target)",
    "t.append(len(t))",
    "t.append(s + u)",
    "t.append(i + c)",
    "t.append(s * u)",
    "t.append(len(candidates) - i -1)",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t)\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[u])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[s])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[len(t)-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[i])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[u])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i+1, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[__ - 1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[u:])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[6])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[7])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[8])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[9])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[len(t) - 1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[6])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "t.append(i)",
    "t.append(u)",
    "t.append(s)",
    "t.append(c)",
    "t.append(len(candidates))",
    "t.append(target)",
    "t.append(s + u)",
    "t.append(t)",
    "t.append(t[i])",
    "t.append(u + c)",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[6])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[7])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[8])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[9])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[6])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[7])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[8])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[9])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[6])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[7])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[8])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[9])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[6])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[7])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[8])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[9])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[len(t)-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[u])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[u+1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[u])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[len(t) - 1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[len(t) - 2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[u])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[s])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[i])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[u+1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "t[-1]",
    "t[-2]",
    "t[0]",
    "t[1]",
    "t[len(t) - 1]",
    "t[len(t) - 2]",
    "t[len(t) - 3]",
    "t[2]",
    "t[3]",
    "t[len(t) // 2]",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[::-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2:])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t + [s])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[-1]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[len(t) // 2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[-1]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1:4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[-1]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[u])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[-1]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0:3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[6])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[7])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[8])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[6])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[7])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[8])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[9])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[6])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[7])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[8])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[9])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[6])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[7])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[8])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[9])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[6])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[7])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[8])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[9])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[6])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[7])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[8])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[9])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[6])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[7])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[8])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[9])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[6])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[7])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[8])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[9])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[7])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[10])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[len(t)-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[6])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[6])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[7])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[8])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[9])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[6])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[7])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[8])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[9])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[u])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[s])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[u + 1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[len(t)-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-u])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[len(t)-u])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[t[0]])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[t[-1]])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[6])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[7])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[8])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[9])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[6])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[7])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[8])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[9])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[6])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[7])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[8])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[6])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[7])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[8])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[9])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[6])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[7])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[8])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[9])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "t.append(__)",
    "t.pop(__)",
    "dfs(__ + c, i, t)",
    "c = __",
    "i = __",
    "candidates[__]",
    "target = __",
    "s = __",
    "ans[__]",
    "range(__, len(candidates))",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[len(t)-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[u])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[i])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[s])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[target])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[6])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[7])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[8])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[9])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[::-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[:])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[::2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[len(t) // 2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[u])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[u-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[len(t)-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[u+1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[10])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[6])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[7])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[8])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[9])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[:])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[:-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[u])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[6])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[7])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[8])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[9])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[u])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[s])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[u + 1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[i])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[len(candidates)-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "ans.append(t)",
    "ans.append(t[i])",
    "ans.append(t[u])",
    "ans.append(c)",
    "ans.append(candidates)",
    "ans.append(candidates[i])",
    "ans.append(candidates[u])",
    "ans.append(s + c)",
    "ans.append(s)",
    "ans.append(target)",
    "ans.append(t[i])",
    "ans.append(c)",
    "ans.append(s)",
    "ans.append(u)",
    "ans.append(target)",
    "ans.append(len(t))",
    "ans.append(len(candidates))",
    "ans.append(i)",
    "ans.append(s + c)",
    "ans.append(u + i)",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[6])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[7])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[8])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[9])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[s])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[i])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[u])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[len(candidates)])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[i+1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t)\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[c])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[c-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[len(t)-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[6])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[7])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[8])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[9])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[len(t) - 1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[len(t) - 2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "t.append(__)",
    "candidates[__]",
    "s + __",
    "target[__]",
    "dfs(__)",
    "i + __",
    "len(__)",
    "u + __",
    "ans.append(__)",
    "t[__]",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[6])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[7])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[8])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[9])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[6])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[7])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[8])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[9])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[6])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[7])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[8])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[9])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[6])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[7])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[8])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[9])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[u])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[s])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[len(t) - 1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[s-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[u-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[s%len(t)])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[i])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[6])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[8])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[9])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[u])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[s])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[6])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[7])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[8])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[9])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[6])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[7])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[8])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[9])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[u])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[s - u])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[u % len(t)])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[s // u])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[len(t) - u])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[u + 1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[u - 1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[u + s])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[10])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "dfs(s + c, i, t + [c])",
    "dfs(s + c, i, t + [s + c])",
    "dfs(s + c, i, t + [t])",
    "dfs(s + c, i, t + [u])",
    "dfs(s + c, i, t + [i])",
    "dfs(s + c, i, t + [c, s, u, i])",
    "dfs(s + c, i, t + [c * i])",
    "dfs(s + c, i, t + [len(candidates)])",
    "dfs(s + c, i, [c, s, u, i])",
    "dfs(s + c, i, [])",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[length])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[u])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[u + 1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[len(t) - 1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "ans.append(t[-1])",
    "ans.append(t[0])",
    "ans.append(t[1])",
    "ans.append(t[-2])",
    "ans.append(t[2])",
    "ans.append(t[len(t) - 1])",
    "ans.append(t[len(t) - 2])",
    "ans.append(t[3])",
    "ans.append(t[-3])",
    "ans.append(t[4])",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[len(t) - 1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t.pop())\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t.pop(0))\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[::-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[u])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[i - u])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3 + i])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[u - i])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-i])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[u])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[s])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[i])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[s-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[len(t)-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[i-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[6])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[7])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[8])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[9])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[u])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[i])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[x])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[len(t) - 1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[6])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[7])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[8])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[9])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[0])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-2])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[1])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[4])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[5])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()",
    "def dfs(s, u, t):\n    if s == target:\n        ans.append(t[-3])\n        return\n    if s > target:\n        return\n    for i in range(u, len(candidates)):\n        c = candidates[i]\n        t.append(c)\n        dfs(s + c, i, t)\n        t.pop()"
  ],
  "num_code_blocks": 1471
}
