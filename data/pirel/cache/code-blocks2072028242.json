{
  "template": "[[__[0][0]] * n for _ in range(m)]",
  "lang": "py",
  "temperature": 0.7,
  "code_blocks": [
    "[[None[0][0]] * n for _ in range(m)]",
    "[[True[0][0]] * n for _ in range(m)]",
    "[[1[0][0]] * n for _ in range(m)]",
    "[[\"hello\"[0][0]] * n for _ in range(m)]",
    "[[[1, 2, 3][0][0]] * n for _ in range(m)]",
    "[[{1: \"one\"}[0][0]] * n for _ in range(m)]",
    "[[[1, 2, 3][0][0]] * 5 for _ in range(3)]",
    "[[[1, 2, 3][0][0]] * 3 for _ in range(5)]",
    "[[[1, 2, 3][0][0]] * 2 for _ in range(4)]",
    "[[\"hello\"[0][0]] * 5 for _ in range(3)]",
    "[[a[0][0]] * n for _ in range(m)]",
    "[[b[0][0]] * n for _ in range(m)]",
    "[[c[0][0]] * n for _ in range(m)]",
    "[[d[0][0]] * n for _ in range(m)]",
    "[[e[0][0]] * n for _ in range(m)]",
    "[[f[0][0]] * n for _ in range(m)]",
    "[[g[0][0]] * n for _ in range(m)]",
    "[[h[0][0]] * n for _ in range(m)]",
    "[[i[0][0]] * n for _ in range(m)]",
    "[[j[0][0]] * n for _ in range(m)]",
    "# Variant 1\n[[None[0][0]] * n for _ in range(m)]\n\n# Variant 2\n[[True[0][0]] * n for _ in range(m)]\n\n# Variant 3\n[[0[0][0]] * n for _ in range(m)]\n\n# Variant 4\n[[[]*[0][0]] * n for _ in range(m)]\n\n# Variant 5\n[[[1][0][0]] * n for _ in range(m)]\n\n# Variant 6\n[[str[0][0]] * n for _ in range(m)]\n\n# Variant 7\n[[object[0][0]] * n for _ in range(m)]\n\n# Variant 8\n[[dict[0][0]] * n for _ in range(m)]\n\n# Variant 9\n[[float[0][0]] * n for _ in range(m)]\n\n# Variant 10\n[[list[0][0]] * n for _ in range(m)]",
    "[[None[0][0]] * n for _ in range(m)]",
    "[[True[0][0]] * n for _ in range(m)]",
    "[[False[0][0]] * n for _ in range(m)]",
    "[[0[0][0]] * n for _ in range(m)]",
    "[[1[0][0]] * n for _ in range(m)]",
    "[[''[0][0]] * n for _ in range(m)]",
    "[[[][0][0]] * n for _ in range(m)]",
    "[[{}[0][0]] * n for _ in range(m)]",
    "[[None[0][0]] * n for _ in range(m)]",
    "[[object[0][0]] * n for _ in range(m)]",
    "[[None[0][0]] * n for _ in range(m)]",
    "[['x'[0][0]] * n for _ in range(m)]",
    "[[42[0][0]] * n for _ in range(m)]",
    "[[True[0][0]] * n for _ in range(m)]",
    "[[[1, 2, 3][0][0]] * n for _ in range(m)]",
    "[[{}[0][0]] * n for _ in range(m)]",
    "[[f() [0][0]] * n for _ in range(m)]",
    "[[\"hello\"[0][0]] * n for _ in range(m)]",
    "[[len(some_list)[0][0]] * n for _ in range(m)]",
    "[[my_var[0][0]] * n for _ in range(m)]",
    "[[None[0][0]] * n for _ in range(m)]",
    "[[0[0][0]] * n for _ in range(m)]",
    "[[True[0][0]] * n for _ in range(m)]",
    "[[str[0][0]] * n for _ in range(m)]",
    "[[object[0][0]] * n for _ in range(m)]",
    "[[list[0][0]] * n for _ in range(m)]",
    "[[dict[0][0]] * n for _ in range(m)]",
    "[[tuple[0][0]] * n for _ in range(m)]",
    "[[set[0][0]] * n for _ in range(m)]",
    "[[float[0][0]] * n for _ in range(m)]",
    "[[None[0][0]] * n for _ in range(m)]",
    "[[_[0][0]] * n for _ in range(m)]",
    "[[__[0]] * n for _ in range(m)]",
    "[[__[0][0]] for _ in range(m)]",
    "[[__[0][0]] * n for __ in range(m)]",
    "[[__[0][0]] * n for _ in range(__)]",
    "[[__[0][0]] * __ for _ in range(m)]",
    "[[__[0][0]] * n for __ in range(__)]",
    "[[__[0][0]] * __ for __ in range(m)]",
    "[[__[0][0]] * __ for __ in range(__)]",
    "[[None[0][0]] * n for _ in range(m)]",
    "[[Ellipsis[0][0]] * n for _ in range(m)]",
    "[[NotImplemented[0][0]] * n for _ in range(m)]",
    "[[True[0][0]] * n for _ in range(m)]",
    "[[False[0][0]] * n for _ in range(m)]",
    "[[1[0][0]] * n for _ in range(m)]",
    "[[0[0][0]] * n for _ in range(m)]",
    "[[[][0][0]] * n for _ in range(m)]",
    "[[{}[0][0]] * n for _ in range(m)]",
    "[[(\"\"[0])[0][0]] * n for _ in range(m)]",
    "[[None[0][0]] * n for _ in range(m)]",
    "[[True[0][0]] * n for _ in range(m)]",
    "[[False[0][0]] * n for _ in range(m)]",
    "[[0[0][0]] * n for _ in range(m)]",
    "[[1[0][0]] * n for _ in range(m)]",
    "[[''[0][0]] * n for _ in range(m)]",
    "[[[][0][0]] * n for _ in range(m)]",
    "[[{}[0][0]] * n for _ in range(m)]",
    "[[() [0][0]] * n for _ in range(m)]",
    "[[Ellipsis[0][0]] * n for _ in range(m)]",
    "[[None[0][0]] * n for _ in range(m)]",
    "[[True[0][0]] * n for _ in range(m)]",
    "[[False[0][0]] * n for _ in range(m)]",
    "[[0[0][0]] * n for _ in range(m)]",
    "[[1[0][0]] * n for _ in range(m)]",
    "[[''[0][0]] * n for _ in range(m)]",
    "[['abc'[0][0]] * n for _ in range(m)]",
    "[[{}[0][0]] * n for _ in range(m)]",
    "[[[][0][0]] * n for _ in range(m)]",
    "[[set()[0][0]] * n for _ in range(m)]",
    "[[None[0][0]] * n for _ in range(m)]",
    "[[True[0][0]] * n for _ in range(m)]",
    "[[False[0][0]] * n for _ in range(m)]",
    "[[0[0][0]] * n for _ in range(m)]",
    "[[\"\"[0][0]] * n for _ in range(m)]",
    "[[[][0][0]] * n for _ in range(m)]",
    "[[{}[0][0]] * n for _ in range(m)]",
    "[[set()[0][0]] * n for _ in range(m)]",
    "[[tuple()[0][0]] * n for _ in range(m)]",
    "[[dict()[0][0]] * n for _ in range(m)]",
    "[[None[0][0]] * n for _ in range(m)]",
    "[[object[0][0]] * n for _ in range(m)]",
    "[[x[0][0]] * n for _ in range(m)]",
    "[[value[0][0]] * n for _ in range(m)]",
    "[[item[0][0]] * n for _ in range(m)]",
    "[[element[0][0]] * n for _ in range(m)]",
    "[[data[0][0]] * n for _ in range(m)]",
    "[[placeholder[0][0]] * n for _ in range(m)]",
    "[[unknown[0][0]] * n for _ in range(m)]",
    "[[hole[0][0]] * n for _ in range(m)]",
    "[[None[0][0]] * n for _ in range(m)]",
    "[[True[0][0]] * n for _ in range(m)]",
    "[[\"undefined\"[0][0]] * n for _ in range(m)]",
    "[[0[0][0]] * n for _ in range(m)]",
    "[[float('nan')[0][0]] * n for _ in range(m)]",
    "[[object()[0][0]] * n for _ in range(m)]",
    "[[str()[0][0]] * n for _ in range(m)]",
    "[[list()[0][0]] * n for _ in range(m)]",
    "[[dict()[0][0]] * n for _ in range(m)]",
    "[[tuple()[0][0]] * n for _ in range(m)]",
    "[[0[0]] * n for _ in range(m)]",
    "[[1[0]] * n for _ in range(m)]",
    "[[2[0]] * n for _ in range(m)]",
    "[[3[0]] * n for _ in range(m)]",
    "[[4[0]] * n for _ in range(m)]",
    "[[5[0]] * n for _ in range(m)]",
    "[[6[0]] * n for _ in range(m)]",
    "[[7[0]] * n for _ in range(m)]",
    "[[8[0]] * n for _ in range(m)]",
    "[[9[0]] * n for _ in range(m)]",
    "[[None[0][0]] * n for _ in range(m)]",
    "[[True[0][0]] * n for _ in range(m)]",
    "[[False[0][0]] * n for _ in range(m)]",
    "[[0[0][0]] * n for _ in range(m)]",
    "[[1[0][0]] * n for _ in range(m)]",
    "[[\"\"[0][0]] * n for _ in range(m)]",
    "[[[]][0][0] * n for _ in range(m)]",
    "[[{}[0][0]] * n for _ in range(m)]",
    "[[set()[0][0]] * n for _ in range(m)]",
    "[[object()[0][0]] * n for _ in range(m)]",
    "[[None[0][0]] * n for _ in range(m)]",
    "[[True[0][0]] * n for _ in range(m)]",
    "[[1[0][0]] * n for _ in range(m)]",
    "[[\"Hello\"[0][0]] * n for _ in range(m)]",
    "[[(1 + 2j)[0][0]] * n for _ in range(m)]",
    "[[[1, 2, 3][0][0]] * n for _ in range(m)]",
    "[[len(\"abc\")[0][0]] * n for _ in range(m)]",
    "[[range(5)[0][0]] * n for _ in range(m)]",
    "[[print(\"Hello\")[0][0]] * n for _ in range(m)]",
    "[[sum([1, 2, 3])[0][0]] * n for _ in range(m)]",
    "[[None[0][0]] * n for _ in range(m)]",
    "[[x[0][0]] * n for _ in range(m)]",
    "[[1[0][0]] * n for _ in range(m)]",
    "[[True[0][0]] * n for _ in range(m)]",
    "[[\"hello\"[0][0]] * n for _ in range(m)]",
    "[[[1, 2, 3][0][0]] * n for _ in range(m)]",
    "[[{'a': 1}[0][0]] * n for _ in range(m)]",
    "[[range(5)[0][0]] * n for _ in range(m)]",
    "[[len('abc')[0][0]] * n for _ in range(m)]",
    "[[abs(-5)[0][0]] * n for _ in range(m)]",
    "[[None[0][0]] * n for _ in range(m)]",
    "[[True[0][0]] * n for _ in range(m)]",
    "[[42[0][0]] * n for _ in range(m)]",
    "[['hello'[0][0]] * n for _ in range(m)]",
    "[[[1, 2, 3][0][0]] * n for _ in range(m)]",
    "[[{'a': 1}[0][0]] * n for _ in range(m)]",
    "[[lambda x: x * 2[0][0]] * n for _ in range(m)]",
    "[[range(10)[0][0]] * n for _ in range(m)]",
    "[[[None, True][0][0]] * n for _ in range(m)]",
    "[[[1, 'a', None][0][0]] * n for _ in range(m)]",
    "[[None[0][0]] * n for _ in range(m)]",
    "[[True[0][0]] * n for _ in range(m)]",
    "[[False[0][0]] * n for _ in range(m)]",
    "[[\"\"[0][0]] * n for _ in range(m)]",
    "[[0[0][0]] * n for _ in range(m)]",
    "[[1[0][0]] * n for _ in range(m)]",
    "[[[0][0][0]] * n for _ in range(m)]",
    "[[[1][0][0]] * n for _ in range(m)]",
    "[[[None][0][0]] * n for _ in range(m)]",
    "[[[True][0][0]] * n for _ in range(m)]",
    "[[None[0][0]] * n for _ in range(m)]",
    "[[True[0][0]] * n for _ in range(m)]",
    "[[False[0][0]] * n for _ in range(m)]",
    "[[\"\"[0][0]] * n for _ in range(m)]",
    "[[0[0][0]] * n for _ in range(m)]",
    "[[1[0][0]] * n for _ in range(m)]",
    "[[0.0[0][0]] * n for _ in range(m)]",
    "[[1.0[0][0]] * n for _ in range(m)]",
    "[[[][0][0]] * n for _ in range(m)]",
    "[[{}[0][0]] * n for _ in range(m)]",
    "[[None[0][0]] * n for _ in range(m)]",
    "[[True[0][0]] * n for _ in range(m)]",
    "[[1[0][0]] * n for _ in range(m)]",
    "[[\"hello\"[0][0]] * n for _ in range(m)]",
    "[[\"abc\"[0][0]] * n for _ in range(m)]",
    "[[[1, 2, 3][0][0]] * n for _ in range(m)]",
    "[[{'name': 'John'}[0][0]] * n for _ in range(m)]",
    "[[[1.5, 2.7][0][0]] * n for _ in range(m)]",
    "[[{1, 2, 3}[0][0]] * n for _ in range(m)]",
    "[[[True, False][0][0]] * n for _ in range(m)]",
    "[[None[0][0]] * n for _ in range(m)]",
    "[[True[0][0]] * n for _ in range(m)]",
    "[[False[0][0]] * n for _ in range(m)]",
    "[[0[0][0]] * n for _ in range(m)]",
    "[[1[0][0]] * n for _ in range(m)]",
    "[[''[0][0]] * n for _ in range(m)]",
    "[[{}[0][0]] * n for _ in range(m)]",
    "[[()[0][0]] * n for _ in range(m)]",
    "[[lambda: None[0][0]] * n for _ in range(m)]",
    "[[class A: pass[0][0]] * n for _ in range(m)]",
    "[[None[0][0]] * n for _ in range(m)]",
    "[[True[0][0]] * n for _ in range(m)]",
    "[[False[0][0]] * n for _ in range(m)]",
    "[[0[0][0]] * n for _ in range(m)]",
    "[[1[0][0]] * n for _ in range(m)]",
    "[[\"\"[0][0]] * n for _ in range(m)]",
    "[[[]][0][0]] * n for _ in range(m)]",
    "[[{}[0][0]] * n for _ in range(m)]",
    "[[()][0][0]] * n for _ in range(m)]",
    "[[lambda: None[0][0]] * n for _ in range(m)]",
    "[[None[0][0]] * n for _ in range(m)]",
    "[[True[0][0]] * n for _ in range(m)]",
    "[[1[0][0]] * n for _ in range(m)]",
    "[[\"hello\"[0][0]] * n for _ in range(m)]",
    "[[[1, 2, 3][0][0]] * n for _ in range(m)]",
    "[[{'a': 1}[0][0]] * n for _ in range(m)]",
    "[[()()[0][0]] * n for _ in range(m)]",
    "[[set()[0][0]] * n for _ in range(m)]",
    "[[len(\"abc\")[0][0]] * n for _ in range(m)]",
    "[[float(\"3.14\")[0][0]] * n for _ in range(m)]",
    "[[None[0][0]] * n for _ in range(m)]",
    "[[True[0][0]] * n for _ in range(m)]",
    "[[0[0][0]] * n for _ in range(m)]",
    "[[[]][0][0] * n for _ in range(m)]",
    "[[{}][0][0] * n for _ in range(m)]",
    "[[()][0][0] * n for _ in range(m)]",
    "[[1.5[0][0]] * n for _ in range(m)]",
    "[[\"string\"[0][0]] * n for _ in range(m)]",
    "[[set()[0][0]] * n for _ in range(m)]",
    "[[object()[0][0]] * n for _ in range(m)]",
    "# Variant 1\n[[None[0][0]] * n for _ in range(m)]\n\n# Variant 2\n[[0[0][0]] * n for _ in range(m)]\n\n# Variant 3\n[[True[0][0]] * n for _ in range(m)]\n\n# Variant 4\n[['x'[0][0]] * n for _ in range(m)]\n\n# Variant 5\n[[[1][0][0]] * n for _ in range(m)]\n\n# Variant 6\n[[[1, 2][0][0]] * n for _ in range(m)]\n\n# Variant 7\n[[{1: 'a'}[0][0]] * n for _ in range(m)]\n\n# Variant 8\n[[[1, 2, 3][0][0]] * n for _ in range(m)]\n\n# Variant 9\n[[object[0][0]] * n for _ in range(m)]\n\n# Variant 10\n[[[1, 2, 3, 4][0][0]] * n for _ in range(m)]",
    "[[None[0][0]] * n for _ in range(m)]",
    "[[True[0][0]] * n for _ in range(m)]",
    "[[1[0][0]] * n for _ in range(m)]",
    "[[\"hello\"[0][0]] * n for _ in range(m)]",
    "[[[1, 2, 3][0][0]] * n for _ in range(m)]",
    "[[{\"a\": 1}[0][0]] * n for _ in range(m)]",
    "[[range(5)[0][0]] * n for _ in range(m)]",
    "[[len(\"abc\")[0][0]] * n for _ in range(m)]",
    "[[\"abc\".upper()[0][0]] * n for _ in range(m)]",
    "[[[i for i in range(10)][0][0]] * n for _ in range(m)]",
    "[[None[0][0]] * n for _ in range(m)]",
    "[[True[0][0]] * n for _ in range(m)]",
    "[[False[0][0]] * n for _ in range(m)]",
    "[[0[0][0]] * n for _ in range(m)]",
    "[[1[0][0]] * n for _ in range(m)]",
    "[[''[0][0]] * n for _ in range(m)]",
    "[['hello'[0][0]] * n for _ in range(m)]",
    "[['abc'[0][0]] * n for _ in range(m)]",
    "[[{}[0][0]] * n for _ in range(m)]",
    "[[[]][0][0]] * n for _ in range(m)]",
    "[[None[0][0]] * n for _ in range(m)]",
    "[[True[0][0]] * n for _ in range(m)]",
    "[[False[0][0]] * n for _ in range(m)]",
    "[[0[0][0]] * n for _ in range(m)]",
    "[[''[0][0]] * n for _ in range(m)]",
    "[[{}[0][0]] * n for _ in range(m)]",
    "[[()[0][0]] * n for _ in range(m)]",
    "[[.__class__[0][0]] * n for _ in range(m)]",
    "[[object[0][0]] * n for _ in range(m)]",
    "[[Ellipsis[0][0]] * n for _ in range(m)]",
    "[[None[0][0]] * n for _ in range(m)]",
    "[[True[0][0]] * n for _ in range(m)]",
    "[[False[0][0]] * n for _ in range(m)]",
    "[[0[0][0]] * n for _ in range(m)]",
    "[[1[0][0]] * n for _ in range(m)]",
    "[[\"\"[0][0]] * n for _ in range(m)]",
    "[[[][0][0]] * n for _ in range(m)]",
    "[[{}[0][0]] * n for _ in range(m)]",
    "[[().__getitem__(0)[0]] * n for _ in range(m)]",
    "[[object()[0][0]] * n for _ in range(m)]"
  ],
  "num_code_blocks": 282
}
