{
  "template": "return y * y if (__ & 1) == 0 else y * y * x",
  "source_lang": "py",
  "target_lang": "js",
  "template_origin": "return y * y if (n & 1) == 0 else y * y * x",
  "translations": {
    "return y * y if (x & 1) == 0 else y * y * x": [
      "return (x & 1) == 0 ? y * y : y * y * x;"
    ],
    "return y * y if (x & 1) == 0 else y * y * y": [
      "return (x & 1) === 0 ? y * y : y * y * y;"
    ],
    "return y * y if (x % 2) == 0 else y * y * x": [
      "return (x % 2) === 0 ? y * y : y * y * x;"
    ],
    "return y * y if (x & 1) == 1 else y * y * x": [
      "return y * y * (x & 1) === 1 ? y * y : y * y * x;"
    ],
    "return y * y if (x % 2) == 1 else y * y * x": [
      "return (x % 2) === 1 ? y * y : y * y * x;"
    ],
    "return y * y if (y & 1) == 0 else y * y * x": [
      "return (y & 1) === 0 ? y * y : y * y * x;"
    ],
    "return y * y if (y % 2) == 0 else y * y * x": [
      "return (y % 2) === 0 ? y * y : y * y * x;"
    ],
    "return y * y if (y & 1) == 1 else y * y * x": [
      "return (y & 1) === 1 ? y * y : y * y * x;"
    ],
    "return y * y if (y % 2) == 1 else y * y * x": [
      "return (y * y) % 2 == 1 ? y * y : y * y * x;"
    ],
    "return y * y if (y & 1) == 0 else y * y * y": [
      "return (y % 2 === 0) ? y * y : y * y * y;"
    ],
    "return y * y if (y % 2) == 0 else y * y * y": [
      "return (y % 2) === 0 ? y * y : y * y * y;"
    ],
    "return x * x if (y & 1) == 0 else y * y * x": [
      "return (y & 1) === 0 ? x * x : y * y * x;"
    ],
    "return x * x if (y & 1) == 0 else y * y * y": [
      "if (y & 1 === 0) {\n    return x * x;\n} else {\n    return y * y * y;\n}"
    ],
    "return x * x if (x & 1) == 0 else y * y * x": [
      "return (x * x) % 2 === 0 ? (x * x) : (y * y * x);"
    ],
    "return x * x if (x & 1) == 0 else y * y * y": [
      "if ((x & 1) === 0) {\n    return x * x;\n} else {\n    return y * y * y;\n}"
    ],
    "return x * x if (y & 1) == 0 else x * x * x": [
      "return (y & 1) === 0 ? x * x : x * x * x;"
    ],
    "return y * y if (x & 1) == 0 else x * x * x": [
      "return (x & 1) === 0 ? y * y : x * x * x;"
    ],
    "return x * x if (x & 1) == 0 else x * x * x": [
      "return (x & 1) === 0 ? x * x : x * x * x;"
    ],
    "return x * x if (y & 1) == 0 else x * x * y": [
      "return (y & 1) === 0 ? x * x : x * x * y;"
    ],
    "return y * y if (x & 1) == 0 else y * y + x": [
      "return y * y + (x & 1 ? x : 0);"
    ]
  }
}
