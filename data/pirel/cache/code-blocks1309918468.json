{
  "template": "[chars[int(d) - 2] for d in __]",
  "lang": "py",
  "temperature": 0.9,
  "code_blocks": [
    "[chars[int(d) - 2] for d in range(10)]",
    "[chars[int(d) - 2] for d in \"1234567890\"]",
    "[chars[int(d) - 2] for d in [1, 2, 3, 4, 5, 6, 7, 8, 9, 0]]",
    "[chars[int(d) - 2] for d in (1, 2, 3, 4, 5, 6, 7, 8, 9, 0)]",
    "[chars[int(d) - 2] for d in range(1, 11)]",
    "[chars[int(d) - 2] for d in \"9876543210\"]",
    "[chars[int(d) - 2] for d in [9, 8, 7, 6, 5, 4, 3, 2, 1, 0]]",
    "[chars[int(d) - 2] for d in (9, 8, 7, 6, 5, 4, 3, 2, 1, 0)]",
    "[chars[int(d) - 2] for d in range(2, 12)]",
    "[chars[int(d) - 2] for d in \"2345678910\"]",
    "[chars[int(d) - 2] for d in some_list]",
    "[chars[int(d) - 2] for d in my_list]",
    "[chars[int(d) - 2] for d in nums]",
    "[chars[int(d) - 2] for d in data]",
    "[chars[int(d) - 2] for d in values]",
    "[chars[int(d) - 2] for d in seq]",
    "[chars[int(d) - 2] for d in elements]",
    "[chars[int(d) - 2] for d in digits]",
    "[chars[int(d) - 2] for d in indices]",
    "[chars[int(d) - 2] for d in range_list]",
    "# Variant 1\n[chars[int(d) - 2] for d in my_list]\n\n# Variant 2\n[chars[int(d) - 2] for d in range(len(my_list))]\n\n# Variant 3\n[chars[int(d) - 2] for d in ['1', '2', '3', '4', '5']]\n\n# Variant 4\n[chars[int(d) - 2] for d in '54321']\n\n# Variant 5\n[chars[int(d) - 2] for d in [1, 2, 3, 4, 5]]\n\n# Variant 6\n[chars[int(d) - 2] for d in ('1', '2', '3', '4', '5')]\n\n# Variant 7\n[chars[int(d) - 2] for d in range(5)]\n\n# Variant 8\n[chars[int(d) - 2] for d in enumerate(['1', '2', '3', '4', '5'])]\n\n# Variant 9\n[chars[int(d) - 2] for d in {'1', '2', '3', '4', '5'}]\n\n# Variant 10\n[chars[int(d) - 2] for d in {'1': 'one', '2': 'two', '3': 'three', '4': 'four', '5': 'five'}]",
    "[chars[int(d) - 2] for d in \"1234567890\"]",
    "[chars[int(d) - 2] for d in \"9876543210\"]",
    "[chars[int(d) - 2] for d in \"2468135790\"]",
    "[chars[int(d) - 2] for d in \"02\"]",
    "[chars[int(d) - 2] for d in \"17\"]",
    "[chars[int(d) - 2] for d in \"6\"]",
    "[chars[int(d) - 2] for d in \"4538291\"]",
    "[chars[int(d) - 2] for d in \"98700\"]",
    "[chars[int(d) - 2] for d in \"1\"]",
    "[chars[int(d) - 2] for d in \"0\"]",
    "[chars[int(d) - 2] for d in my_list]",
    "[chars[int(d) - 2] for d in my_string]",
    "[chars[int(d) - 2] for d in my_tuple]",
    "[chars[int(d) - 2] for d in my_dict]",
    "[chars[int(d) - 2] for d in my_set]",
    "[chars[int(d) - 2] for d in [1, 2, 3, 4, 5]]",
    "[chars[int(d) - 2] for d in range(10)]",
    "[chars[int(d) - 2] for d in input()]",
    "[chars[int(d) - 2] for d in reversed(range(10))]",
    "[chars[int(d) - 2] for d in sorted(my_list)]",
    "[chars[int(d) - 2] for d in digits]",
    "[chars[int(d) - 2] for d in numbers]",
    "[chars[int(d) - 2] for d in data]",
    "[chars[int(d) - 2] for d in values]",
    "[chars[int(d) - 2] for d in indexes]",
    "[chars[int(d) - 2] for d in sequence]",
    "[chars[int(d) - 2] for d in elements]",
    "[chars[int(d) - 2] for d in input_data]",
    "[chars[int(d) - 2] for d in entries]",
    "[chars[int(d) - 2] for d in digits_list]",
    "[chars[int(d) - 2] for d in digits]",
    "[chars[int(d) - 2] for d in range(10)]",
    "[chars[int(d) - 2] for d in [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]]",
    "[chars[int(d) - 2] for d in '0123456789']",
    "[chars[int(d) - 2] for d in (str(i) for i in range(10))]",
    "[chars[int(d) - 2] for d in ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9']]",
    "[chars[int(d) - 2] for d in {'0', '1', '2', '3', '4', '5', '6', '7', '8', '9'}]",
    "[chars[int(d) - 2] for d in tuple(str(i) for i in range(10))]",
    "[chars[int(d) - 2] for d in list(range(10))]",
    "[chars[int(d) - 2] for d in tuple(range(10))]",
    "# Variant 1\n[chars[int(d) - 2] for d in digits]\n\n# Variant 2\n[chars[int(d) - 2] for d in numbers]\n\n# Variant 3\n[chars[int(d) - 2] for d in indices]\n\n# Variant 4\n[chars[int(d) - 2] for d in range(len(digits))]\n\n# Variant 5\n[chars[int(d) - 2] for d in range(len(numbers))]\n\n# Variant 6\n[chars[int(d) - 2] for d in range(len(indices))]\n\n# Variant 7\n[chars[int(d) - 2] for d in range(10)]\n\n# Variant 8\n[chars[int(d) - 2] for d in ['1', '2', '3', '4', '5', '6', '7', '8', '9', '0']]\n\n# Variant 9\n[chars[int(d) - 2] for d in ['2', '4', '6', '8', '10']]\n\n# Variant 10\n[chars[int(d) - 2] for d in map(str, range(2, 12, 2))]",
    "[chars[int(d) - 2] for d in digits]",
    "[chars[int(d) - 2] for d in range(len(chars))]",
    "[chars[int(d) - 2] for d in [0, 1, 2, 3, 4]]",
    "[chars[int(d) - 2] for d in \"01234\"]",
    "[chars[int(d) - 2] for d in (0, 1, 2, 3, 4)]",
    "[chars[int(d) - 2] for d in {0, 1, 2, 3, 4}]",
    "[chars[int(d) - 2] for d in {0: \"zero\", 1: \"one\", 2: \"two\", 3: \"three\", 4: \"four\"}]",
    "[chars[int(d) - 2] for d in chars]",
    "[chars[int(d) - 2] for d in [c for c in chars]]",
    "[chars[int(d) - 2] for d in range(len(chars)) if d % 2 == 0]",
    "[chars[int(d) - 2] for d in range(10)]",
    "[chars[int(d) - 2] for d in [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]]",
    "[chars[int(d) - 2] for d in \"0123456789\"]",
    "[chars[int(d) - 2] for d in (str(i) for i in range(10))]",
    "[chars[int(d) - 2] for d in {0: '0', 1: '1', 2: '2', 3: '3', 4: '4', 5: '5', 6: '6', 7: '7', 8: '8', 9: '9'}]",
    "[chars[int(d) - 2] for d in {0, 1, 2, 3, 4, 5, 6, 7, 8, 9}]",
    "[chars[int(d) - 2] for d in zip(*([range(10)]*1))]",
    "[chars[int(d) - 2] for d in [[] for _ in range(10)]]",
    "[chars[int(d) - 2] for d in reversed(range(2, 12))]",
    "[chars[int(d) - 2] for d in iter(lambda: 0, 0)]"
  ],
  "num_code_blocks": 82
}
