[
  [
    "js.program",
    "let inf = Infinity;\n\nfunction f_gold(nums1, nums2, ) {\n    function findKth(i, j, k, ) {\n        if (i >= m) {\n            return nums2[((j + k) - 1)];\n        }\n        if (j >= n) {\n            return nums1[((i + k) - 1)];\n        }\n        if (k === 1) {\n            return Math.min(nums1[i], nums2[j]);\n        }\n        midVal1 = ((i + Math.floor(k / 2)) - 1) < m ? nums1[((i + Math.floor(k / 2)) - 1)] : Infinity;\n        midVal2 = ((j + Math.floor(k / 2)) - 1) < n ? nums2[((j + Math.floor(k / 2)) - 1)] : Infinity;\n        if (midVal1 < midVal2) {\n            return findKth((i + Math.floor(k / 2)), j, (k - Math.floor(k / 2)));\n        }\n        return findKth(i, (j + Math.floor(k / 2)), (k - Math.floor(k / 2)));\n    } [m, n] = [nums1.length, nums2.length];\n    [left, right] = [Math.floor((((m + n) + 1)) / 2), Math.floor((((m + n) + 2)) / 2)];\n    return (((findKth(0, 0, left) + findKth(0, 0, right))) / 2);\n}\n"
  ],
  0,
  [
    [
      "js.lexical_declaration",
      "let inf = Infinity;"
    ],
    1,
    "\"let\"",
    [
      [
        "js.variable_declarator",
        "inf = Infinity"
      ],
      2,
      [
        [
          "js.identifier",
          "inf"
        ],
        3,
        "\"inf\""
      ],
      "\"=\"",
      [
        [
          "js.identifier",
          "Infinity"
        ],
        4,
        "\"Infinity\""
      ]
    ],
    "\";\""
  ],
  [
    [
      "js.function_declaration",
      "function f_gold(nums1, nums2, ) {\n    function findKth(i, j, k, ) {\n        if (i >= m) {\n            return nums2[((j + k) - 1)];\n        }\n        if (j >= n) {\n            return nums1[((i + k) - 1)];\n        }\n        if (k === 1) {\n            return Math.min(nums1[i], nums2[j]);\n        }\n        midVal1 = ((i + Math.floor(k / 2)) - 1) < m ? nums1[((i + Math.floor(k / 2)) - 1)] : Infinity;\n        midVal2 = ((j + Math.floor(k / 2)) - 1) < n ? nums2[((j + Math.floor(k / 2)) - 1)] : Infinity;\n        if (midVal1 < midVal2) {\n            return findKth((i + Math.floor(k / 2)), j, (k - Math.floor(k / 2)));\n        }\n        return findKth(i, (j + Math.floor(k / 2)), (k - Math.floor(k / 2)));\n    } [m, n] = [nums1.length, nums2.length];\n    [left, right] = [Math.floor((((m + n) + 1)) / 2), Math.floor((((m + n) + 2)) / 2)];\n    return (((findKth(0, 0, left) + findKth(0, 0, right))) / 2);\n}"
    ],
    5,
    "\"function\"",
    [
      [
        "js.identifier",
        "f_gold"
      ],
      6,
      "\"f_gold\""
    ],
    [
      [
        "js.formal_parameters",
        "(nums1, nums2, )"
      ],
      7,
      "\"(\"",
      [
        [
          "js.identifier",
          "nums1"
        ],
        8,
        "\"nums1\""
      ],
      "\",\"",
      [
        [
          "js.identifier",
          "nums2"
        ],
        9,
        "\"nums2\""
      ],
      "\",\"",
      "\")\""
    ],
    [
      [
        "js.statement_block",
        "{\n    function findKth(i, j, k, ) {\n        if (i >= m) {\n            return nums2[((j + k) - 1)];\n        }\n        if (j >= n) {\n            return nums1[((i + k) - 1)];\n        }\n        if (k === 1) {\n            return Math.min(nums1[i], nums2[j]);\n        }\n        midVal1 = ((i + Math.floor(k / 2)) - 1) < m ? nums1[((i + Math.floor(k / 2)) - 1)] : Infinity;\n        midVal2 = ((j + Math.floor(k / 2)) - 1) < n ? nums2[((j + Math.floor(k / 2)) - 1)] : Infinity;\n        if (midVal1 < midVal2) {\n            return findKth((i + Math.floor(k / 2)), j, (k - Math.floor(k / 2)));\n        }\n        return findKth(i, (j + Math.floor(k / 2)), (k - Math.floor(k / 2)));\n    } [m, n] = [nums1.length, nums2.length];\n    [left, right] = [Math.floor((((m + n) + 1)) / 2), Math.floor((((m + n) + 2)) / 2)];\n    return (((findKth(0, 0, left) + findKth(0, 0, right))) / 2);\n}"
      ],
      10,
      "\"{\"",
      [
        [
          "js.function_declaration",
          "function findKth(i, j, k, ) {\n        if (i >= m) {\n            return nums2[((j + k) - 1)];\n        }\n        if (j >= n) {\n            return nums1[((i + k) - 1)];\n        }\n        if (k === 1) {\n            return Math.min(nums1[i], nums2[j]);\n        }\n        midVal1 = ((i + Math.floor(k / 2)) - 1) < m ? nums1[((i + Math.floor(k / 2)) - 1)] : Infinity;\n        midVal2 = ((j + Math.floor(k / 2)) - 1) < n ? nums2[((j + Math.floor(k / 2)) - 1)] : Infinity;\n        if (midVal1 < midVal2) {\n            return findKth((i + Math.floor(k / 2)), j, (k - Math.floor(k / 2)));\n        }\n        return findKth(i, (j + Math.floor(k / 2)), (k - Math.floor(k / 2)));\n    }"
        ],
        11,
        "\"function\"",
        [
          [
            "js.identifier",
            "findKth"
          ],
          12,
          "\"findKth\""
        ],
        [
          [
            "js.formal_parameters",
            "(i, j, k, )"
          ],
          13,
          "\"(\"",
          [
            [
              "js.identifier",
              "i"
            ],
            14,
            "\"i\""
          ],
          "\",\"",
          [
            [
              "js.identifier",
              "j"
            ],
            15,
            "\"j\""
          ],
          "\",\"",
          [
            [
              "js.identifier",
              "k"
            ],
            16,
            "\"k\""
          ],
          "\",\"",
          "\")\""
        ],
        [
          [
            "js.statement_block",
            "{\n        if (i >= m) {\n            return nums2[((j + k) - 1)];\n        }\n        if (j >= n) {\n            return nums1[((i + k) - 1)];\n        }\n        if (k === 1) {\n            return Math.min(nums1[i], nums2[j]);\n        }\n        midVal1 = ((i + Math.floor(k / 2)) - 1) < m ? nums1[((i + Math.floor(k / 2)) - 1)] : Infinity;\n        midVal2 = ((j + Math.floor(k / 2)) - 1) < n ? nums2[((j + Math.floor(k / 2)) - 1)] : Infinity;\n        if (midVal1 < midVal2) {\n            return findKth((i + Math.floor(k / 2)), j, (k - Math.floor(k / 2)));\n        }\n        return findKth(i, (j + Math.floor(k / 2)), (k - Math.floor(k / 2)));\n    }"
          ],
          17,
          "\"{\"",
          [
            [
              "js.if_statement",
              "if (i >= m) {\n            return nums2[((j + k) - 1)];\n        }"
            ],
            18,
            "\"if\"",
            [
              [
                "js.parenthesized_expression",
                "(i >= m)"
              ],
              19,
              "\"(\"",
              [
                [
                  "js.binary_expression",
                  "i >= m"
                ],
                20,
                [
                  [
                    "js.identifier",
                    "i"
                  ],
                  21,
                  "\"i\""
                ],
                "\">=\"",
                [
                  [
                    "js.identifier",
                    "m"
                  ],
                  22,
                  "\"m\""
                ]
              ],
              "\")\""
            ],
            [
              [
                "js.statement_block",
                "{\n            return nums2[((j + k) - 1)];\n        }"
              ],
              23,
              "\"{\"",
              [
                [
                  "js.return_statement",
                  "return nums2[((j + k) - 1)];"
                ],
                24,
                "\"return\"",
                [
                  [
                    "js.subscript_expression",
                    "nums2[((j + k) - 1)]"
                  ],
                  25,
                  [
                    [
                      "js.identifier",
                      "nums2"
                    ],
                    26,
                    "\"nums2\""
                  ],
                  "\"[\"",
                  [
                    [
                      "js.parenthesized_expression",
                      "((j + k) - 1)"
                    ],
                    27,
                    "\"(\"",
                    [
                      [
                        "js.binary_expression",
                        "(j + k) - 1"
                      ],
                      28,
                      [
                        [
                          "js.parenthesized_expression",
                          "(j + k)"
                        ],
                        29,
                        "\"(\"",
                        [
                          [
                            "js.binary_expression",
                            "j + k"
                          ],
                          30,
                          [
                            [
                              "js.identifier",
                              "j"
                            ],
                            31,
                            "\"j\""
                          ],
                          "\"+\"",
                          [
                            [
                              "js.identifier",
                              "k"
                            ],
                            32,
                            "\"k\""
                          ]
                        ],
                        "\")\""
                      ],
                      "\"-\"",
                      [
                        [
                          "js.number",
                          "1"
                        ],
                        33,
                        "\"1\""
                      ]
                    ],
                    "\")\""
                  ],
                  "\"]\""
                ],
                "\";\""
              ],
              "\"}\""
            ]
          ],
          [
            [
              "js.if_statement",
              "if (j >= n) {\n            return nums1[((i + k) - 1)];\n        }"
            ],
            34,
            "\"if\"",
            [
              [
                "js.parenthesized_expression",
                "(j >= n)"
              ],
              35,
              "\"(\"",
              [
                [
                  "js.binary_expression",
                  "j >= n"
                ],
                36,
                [
                  [
                    "js.identifier",
                    "j"
                  ],
                  37,
                  "\"j\""
                ],
                "\">=\"",
                [
                  [
                    "js.identifier",
                    "n"
                  ],
                  38,
                  "\"n\""
                ]
              ],
              "\")\""
            ],
            [
              [
                "js.statement_block",
                "{\n            return nums1[((i + k) - 1)];\n        }"
              ],
              39,
              "\"{\"",
              [
                [
                  "js.return_statement",
                  "return nums1[((i + k) - 1)];"
                ],
                40,
                "\"return\"",
                [
                  [
                    "js.subscript_expression",
                    "nums1[((i + k) - 1)]"
                  ],
                  41,
                  [
                    [
                      "js.identifier",
                      "nums1"
                    ],
                    42,
                    "\"nums1\""
                  ],
                  "\"[\"",
                  [
                    [
                      "js.parenthesized_expression",
                      "((i + k) - 1)"
                    ],
                    43,
                    "\"(\"",
                    [
                      [
                        "js.binary_expression",
                        "(i + k) - 1"
                      ],
                      44,
                      [
                        [
                          "js.parenthesized_expression",
                          "(i + k)"
                        ],
                        45,
                        "\"(\"",
                        [
                          [
                            "js.binary_expression",
                            "i + k"
                          ],
                          46,
                          [
                            [
                              "js.identifier",
                              "i"
                            ],
                            47,
                            "\"i\""
                          ],
                          "\"+\"",
                          [
                            [
                              "js.identifier",
                              "k"
                            ],
                            48,
                            "\"k\""
                          ]
                        ],
                        "\")\""
                      ],
                      "\"-\"",
                      [
                        [
                          "js.number",
                          "1"
                        ],
                        49,
                        "\"1\""
                      ]
                    ],
                    "\")\""
                  ],
                  "\"]\""
                ],
                "\";\""
              ],
              "\"}\""
            ]
          ],
          [
            [
              "js.if_statement",
              "if (k === 1) {\n            return Math.min(nums1[i], nums2[j]);\n        }"
            ],
            50,
            "\"if\"",
            [
              [
                "js.parenthesized_expression",
                "(k === 1)"
              ],
              51,
              "\"(\"",
              [
                [
                  "js.binary_expression",
                  "k === 1"
                ],
                52,
                [
                  [
                    "js.identifier",
                    "k"
                  ],
                  53,
                  "\"k\""
                ],
                "\"===\"",
                [
                  [
                    "js.number",
                    "1"
                  ],
                  54,
                  "\"1\""
                ]
              ],
              "\")\""
            ],
            [
              [
                "js.statement_block",
                "{\n            return Math.min(nums1[i], nums2[j]);\n        }"
              ],
              55,
              "\"{\"",
              [
                [
                  "js.return_statement",
                  "return Math.min(nums1[i], nums2[j]);"
                ],
                56,
                "\"return\"",
                [
                  [
                    "js.call_expression",
                    "Math.min(nums1[i], nums2[j])"
                  ],
                  57,
                  [
                    [
                      "js.member_expression",
                      "Math.min"
                    ],
                    58,
                    [
                      [
                        "js.identifier",
                        "Math"
                      ],
                      59,
                      "\"Math\""
                    ],
                    "\".\"",
                    [
                      [
                        "js.property_identifier",
                        "min"
                      ],
                      60,
                      "\"min\""
                    ]
                  ],
                  [
                    [
                      "js.arguments",
                      "(nums1[i], nums2[j])"
                    ],
                    61,
                    "\"(\"",
                    [
                      [
                        "js.subscript_expression",
                        "nums1[i]"
                      ],
                      62,
                      [
                        [
                          "js.identifier",
                          "nums1"
                        ],
                        63,
                        "\"nums1\""
                      ],
                      "\"[\"",
                      [
                        [
                          "js.identifier",
                          "i"
                        ],
                        64,
                        "\"i\""
                      ],
                      "\"]\""
                    ],
                    "\",\"",
                    [
                      [
                        "js.subscript_expression",
                        "nums2[j]"
                      ],
                      65,
                      [
                        [
                          "js.identifier",
                          "nums2"
                        ],
                        66,
                        "\"nums2\""
                      ],
                      "\"[\"",
                      [
                        [
                          "js.identifier",
                          "j"
                        ],
                        67,
                        "\"j\""
                      ],
                      "\"]\""
                    ],
                    "\")\""
                  ]
                ],
                "\";\""
              ],
              "\"}\""
            ]
          ],
          [
            [
              "js.expression_statement",
              "midVal1 = ((i + Math.floor(k / 2)) - 1) < m ? nums1[((i + Math.floor(k / 2)) - 1)] : Infinity;"
            ],
            68,
            [
              [
                "js.assignment_expression",
                "midVal1 = ((i + Math.floor(k / 2)) - 1) < m ? nums1[((i + Math.floor(k / 2)) - 1)] : Infinity"
              ],
              69,
              [
                [
                  "js.identifier",
                  "midVal1"
                ],
                70,
                "\"midVal1\""
              ],
              "\"=\"",
              [
                [
                  "js.ternary_expression",
                  "((i + Math.floor(k / 2)) - 1) < m ? nums1[((i + Math.floor(k / 2)) - 1)] : Infinity"
                ],
                71,
                [
                  [
                    "js.binary_expression",
                    "((i + Math.floor(k / 2)) - 1) < m"
                  ],
                  72,
                  [
                    [
                      "js.parenthesized_expression",
                      "((i + Math.floor(k / 2)) - 1)"
                    ],
                    73,
                    "\"(\"",
                    [
                      [
                        "js.binary_expression",
                        "(i + Math.floor(k / 2)) - 1"
                      ],
                      74,
                      [
                        [
                          "js.parenthesized_expression",
                          "(i + Math.floor(k / 2))"
                        ],
                        75,
                        "\"(\"",
                        [
                          [
                            "js.binary_expression",
                            "i + Math.floor(k / 2)"
                          ],
                          76,
                          [
                            [
                              "js.identifier",
                              "i"
                            ],
                            77,
                            "\"i\""
                          ],
                          "\"+\"",
                          [
                            [
                              "js.call_expression",
                              "Math.floor(k / 2)"
                            ],
                            78,
                            [
                              [
                                "js.member_expression",
                                "Math.floor"
                              ],
                              79,
                              [
                                [
                                  "js.identifier",
                                  "Math"
                                ],
                                80,
                                "\"Math\""
                              ],
                              "\".\"",
                              [
                                [
                                  "js.property_identifier",
                                  "floor"
                                ],
                                81,
                                "\"floor\""
                              ]
                            ],
                            [
                              [
                                "js.arguments",
                                "(k / 2)"
                              ],
                              82,
                              "\"(\"",
                              [
                                [
                                  "js.binary_expression",
                                  "k / 2"
                                ],
                                83,
                                [
                                  [
                                    "js.identifier",
                                    "k"
                                  ],
                                  84,
                                  "\"k\""
                                ],
                                "\"/\"",
                                [
                                  [
                                    "js.number",
                                    "2"
                                  ],
                                  85,
                                  "\"2\""
                                ]
                              ],
                              "\")\""
                            ]
                          ]
                        ],
                        "\")\""
                      ],
                      "\"-\"",
                      [
                        [
                          "js.number",
                          "1"
                        ],
                        86,
                        "\"1\""
                      ]
                    ],
                    "\")\""
                  ],
                  "\"<\"",
                  [
                    [
                      "js.identifier",
                      "m"
                    ],
                    87,
                    "\"m\""
                  ]
                ],
                "\"?\"",
                [
                  [
                    "js.subscript_expression",
                    "nums1[((i + Math.floor(k / 2)) - 1)]"
                  ],
                  88,
                  [
                    [
                      "js.identifier",
                      "nums1"
                    ],
                    89,
                    "\"nums1\""
                  ],
                  "\"[\"",
                  [
                    [
                      "js.parenthesized_expression",
                      "((i + Math.floor(k / 2)) - 1)"
                    ],
                    90,
                    "\"(\"",
                    [
                      [
                        "js.binary_expression",
                        "(i + Math.floor(k / 2)) - 1"
                      ],
                      91,
                      [
                        [
                          "js.parenthesized_expression",
                          "(i + Math.floor(k / 2))"
                        ],
                        92,
                        "\"(\"",
                        [
                          [
                            "js.binary_expression",
                            "i + Math.floor(k / 2)"
                          ],
                          93,
                          [
                            [
                              "js.identifier",
                              "i"
                            ],
                            94,
                            "\"i\""
                          ],
                          "\"+\"",
                          [
                            [
                              "js.call_expression",
                              "Math.floor(k / 2)"
                            ],
                            95,
                            [
                              [
                                "js.member_expression",
                                "Math.floor"
                              ],
                              96,
                              [
                                [
                                  "js.identifier",
                                  "Math"
                                ],
                                97,
                                "\"Math\""
                              ],
                              "\".\"",
                              [
                                [
                                  "js.property_identifier",
                                  "floor"
                                ],
                                98,
                                "\"floor\""
                              ]
                            ],
                            [
                              [
                                "js.arguments",
                                "(k / 2)"
                              ],
                              99,
                              "\"(\"",
                              [
                                [
                                  "js.binary_expression",
                                  "k / 2"
                                ],
                                100,
                                [
                                  [
                                    "js.identifier",
                                    "k"
                                  ],
                                  101,
                                  "\"k\""
                                ],
                                "\"/\"",
                                [
                                  [
                                    "js.number",
                                    "2"
                                  ],
                                  102,
                                  "\"2\""
                                ]
                              ],
                              "\")\""
                            ]
                          ]
                        ],
                        "\")\""
                      ],
                      "\"-\"",
                      [
                        [
                          "js.number",
                          "1"
                        ],
                        103,
                        "\"1\""
                      ]
                    ],
                    "\")\""
                  ],
                  "\"]\""
                ],
                "\":\"",
                [
                  [
                    "js.identifier",
                    "Infinity"
                  ],
                  104,
                  "\"Infinity\""
                ]
              ]
            ],
            "\";\""
          ],
          [
            [
              "js.expression_statement",
              "midVal2 = ((j + Math.floor(k / 2)) - 1) < n ? nums2[((j + Math.floor(k / 2)) - 1)] : Infinity;"
            ],
            105,
            [
              [
                "js.assignment_expression",
                "midVal2 = ((j + Math.floor(k / 2)) - 1) < n ? nums2[((j + Math.floor(k / 2)) - 1)] : Infinity"
              ],
              106,
              [
                [
                  "js.identifier",
                  "midVal2"
                ],
                107,
                "\"midVal2\""
              ],
              "\"=\"",
              [
                [
                  "js.ternary_expression",
                  "((j + Math.floor(k / 2)) - 1) < n ? nums2[((j + Math.floor(k / 2)) - 1)] : Infinity"
                ],
                108,
                [
                  [
                    "js.binary_expression",
                    "((j + Math.floor(k / 2)) - 1) < n"
                  ],
                  109,
                  [
                    [
                      "js.parenthesized_expression",
                      "((j + Math.floor(k / 2)) - 1)"
                    ],
                    110,
                    "\"(\"",
                    [
                      [
                        "js.binary_expression",
                        "(j + Math.floor(k / 2)) - 1"
                      ],
                      111,
                      [
                        [
                          "js.parenthesized_expression",
                          "(j + Math.floor(k / 2))"
                        ],
                        112,
                        "\"(\"",
                        [
                          [
                            "js.binary_expression",
                            "j + Math.floor(k / 2)"
                          ],
                          113,
                          [
                            [
                              "js.identifier",
                              "j"
                            ],
                            114,
                            "\"j\""
                          ],
                          "\"+\"",
                          [
                            [
                              "js.call_expression",
                              "Math.floor(k / 2)"
                            ],
                            115,
                            [
                              [
                                "js.member_expression",
                                "Math.floor"
                              ],
                              116,
                              [
                                [
                                  "js.identifier",
                                  "Math"
                                ],
                                117,
                                "\"Math\""
                              ],
                              "\".\"",
                              [
                                [
                                  "js.property_identifier",
                                  "floor"
                                ],
                                118,
                                "\"floor\""
                              ]
                            ],
                            [
                              [
                                "js.arguments",
                                "(k / 2)"
                              ],
                              119,
                              "\"(\"",
                              [
                                [
                                  "js.binary_expression",
                                  "k / 2"
                                ],
                                120,
                                [
                                  [
                                    "js.identifier",
                                    "k"
                                  ],
                                  121,
                                  "\"k\""
                                ],
                                "\"/\"",
                                [
                                  [
                                    "js.number",
                                    "2"
                                  ],
                                  122,
                                  "\"2\""
                                ]
                              ],
                              "\")\""
                            ]
                          ]
                        ],
                        "\")\""
                      ],
                      "\"-\"",
                      [
                        [
                          "js.number",
                          "1"
                        ],
                        123,
                        "\"1\""
                      ]
                    ],
                    "\")\""
                  ],
                  "\"<\"",
                  [
                    [
                      "js.identifier",
                      "n"
                    ],
                    124,
                    "\"n\""
                  ]
                ],
                "\"?\"",
                [
                  [
                    "js.subscript_expression",
                    "nums2[((j + Math.floor(k / 2)) - 1)]"
                  ],
                  125,
                  [
                    [
                      "js.identifier",
                      "nums2"
                    ],
                    126,
                    "\"nums2\""
                  ],
                  "\"[\"",
                  [
                    [
                      "js.parenthesized_expression",
                      "((j + Math.floor(k / 2)) - 1)"
                    ],
                    127,
                    "\"(\"",
                    [
                      [
                        "js.binary_expression",
                        "(j + Math.floor(k / 2)) - 1"
                      ],
                      128,
                      [
                        [
                          "js.parenthesized_expression",
                          "(j + Math.floor(k / 2))"
                        ],
                        129,
                        "\"(\"",
                        [
                          [
                            "js.binary_expression",
                            "j + Math.floor(k / 2)"
                          ],
                          130,
                          [
                            [
                              "js.identifier",
                              "j"
                            ],
                            131,
                            "\"j\""
                          ],
                          "\"+\"",
                          [
                            [
                              "js.call_expression",
                              "Math.floor(k / 2)"
                            ],
                            132,
                            [
                              [
                                "js.member_expression",
                                "Math.floor"
                              ],
                              133,
                              [
                                [
                                  "js.identifier",
                                  "Math"
                                ],
                                134,
                                "\"Math\""
                              ],
                              "\".\"",
                              [
                                [
                                  "js.property_identifier",
                                  "floor"
                                ],
                                135,
                                "\"floor\""
                              ]
                            ],
                            [
                              [
                                "js.arguments",
                                "(k / 2)"
                              ],
                              136,
                              "\"(\"",
                              [
                                [
                                  "js.binary_expression",
                                  "k / 2"
                                ],
                                137,
                                [
                                  [
                                    "js.identifier",
                                    "k"
                                  ],
                                  138,
                                  "\"k\""
                                ],
                                "\"/\"",
                                [
                                  [
                                    "js.number",
                                    "2"
                                  ],
                                  139,
                                  "\"2\""
                                ]
                              ],
                              "\")\""
                            ]
                          ]
                        ],
                        "\")\""
                      ],
                      "\"-\"",
                      [
                        [
                          "js.number",
                          "1"
                        ],
                        140,
                        "\"1\""
                      ]
                    ],
                    "\")\""
                  ],
                  "\"]\""
                ],
                "\":\"",
                [
                  [
                    "js.identifier",
                    "Infinity"
                  ],
                  141,
                  "\"Infinity\""
                ]
              ]
            ],
            "\";\""
          ],
          [
            [
              "js.if_statement",
              "if (midVal1 < midVal2) {\n            return findKth((i + Math.floor(k / 2)), j, (k - Math.floor(k / 2)));\n        }"
            ],
            142,
            "\"if\"",
            [
              [
                "js.parenthesized_expression",
                "(midVal1 < midVal2)"
              ],
              143,
              "\"(\"",
              [
                [
                  "js.binary_expression",
                  "midVal1 < midVal2"
                ],
                144,
                [
                  [
                    "js.identifier",
                    "midVal1"
                  ],
                  145,
                  "\"midVal1\""
                ],
                "\"<\"",
                [
                  [
                    "js.identifier",
                    "midVal2"
                  ],
                  146,
                  "\"midVal2\""
                ]
              ],
              "\")\""
            ],
            [
              [
                "js.statement_block",
                "{\n            return findKth((i + Math.floor(k / 2)), j, (k - Math.floor(k / 2)));\n        }"
              ],
              147,
              "\"{\"",
              [
                [
                  "js.return_statement",
                  "return findKth((i + Math.floor(k / 2)), j, (k - Math.floor(k / 2)));"
                ],
                148,
                "\"return\"",
                [
                  [
                    "js.call_expression",
                    "findKth((i + Math.floor(k / 2)), j, (k - Math.floor(k / 2)))"
                  ],
                  149,
                  [
                    [
                      "js.identifier",
                      "findKth"
                    ],
                    150,
                    "\"findKth\""
                  ],
                  [
                    [
                      "js.arguments",
                      "((i + Math.floor(k / 2)), j, (k - Math.floor(k / 2)))"
                    ],
                    151,
                    "\"(\"",
                    [
                      [
                        "js.parenthesized_expression",
                        "(i + Math.floor(k / 2))"
                      ],
                      152,
                      "\"(\"",
                      [
                        [
                          "js.binary_expression",
                          "i + Math.floor(k / 2)"
                        ],
                        153,
                        [
                          [
                            "js.identifier",
                            "i"
                          ],
                          154,
                          "\"i\""
                        ],
                        "\"+\"",
                        [
                          [
                            "js.call_expression",
                            "Math.floor(k / 2)"
                          ],
                          155,
                          [
                            [
                              "js.member_expression",
                              "Math.floor"
                            ],
                            156,
                            [
                              [
                                "js.identifier",
                                "Math"
                              ],
                              157,
                              "\"Math\""
                            ],
                            "\".\"",
                            [
                              [
                                "js.property_identifier",
                                "floor"
                              ],
                              158,
                              "\"floor\""
                            ]
                          ],
                          [
                            [
                              "js.arguments",
                              "(k / 2)"
                            ],
                            159,
                            "\"(\"",
                            [
                              [
                                "js.binary_expression",
                                "k / 2"
                              ],
                              160,
                              [
                                [
                                  "js.identifier",
                                  "k"
                                ],
                                161,
                                "\"k\""
                              ],
                              "\"/\"",
                              [
                                [
                                  "js.number",
                                  "2"
                                ],
                                162,
                                "\"2\""
                              ]
                            ],
                            "\")\""
                          ]
                        ]
                      ],
                      "\")\""
                    ],
                    "\",\"",
                    [
                      [
                        "js.identifier",
                        "j"
                      ],
                      163,
                      "\"j\""
                    ],
                    "\",\"",
                    [
                      [
                        "js.parenthesized_expression",
                        "(k - Math.floor(k / 2))"
                      ],
                      164,
                      "\"(\"",
                      [
                        [
                          "js.binary_expression",
                          "k - Math.floor(k / 2)"
                        ],
                        165,
                        [
                          [
                            "js.identifier",
                            "k"
                          ],
                          166,
                          "\"k\""
                        ],
                        "\"-\"",
                        [
                          [
                            "js.call_expression",
                            "Math.floor(k / 2)"
                          ],
                          167,
                          [
                            [
                              "js.member_expression",
                              "Math.floor"
                            ],
                            168,
                            [
                              [
                                "js.identifier",
                                "Math"
                              ],
                              169,
                              "\"Math\""
                            ],
                            "\".\"",
                            [
                              [
                                "js.property_identifier",
                                "floor"
                              ],
                              170,
                              "\"floor\""
                            ]
                          ],
                          [
                            [
                              "js.arguments",
                              "(k / 2)"
                            ],
                            171,
                            "\"(\"",
                            [
                              [
                                "js.binary_expression",
                                "k / 2"
                              ],
                              172,
                              [
                                [
                                  "js.identifier",
                                  "k"
                                ],
                                173,
                                "\"k\""
                              ],
                              "\"/\"",
                              [
                                [
                                  "js.number",
                                  "2"
                                ],
                                174,
                                "\"2\""
                              ]
                            ],
                            "\")\""
                          ]
                        ]
                      ],
                      "\")\""
                    ],
                    "\")\""
                  ]
                ],
                "\";\""
              ],
              "\"}\""
            ]
          ],
          [
            [
              "js.return_statement",
              "return findKth(i, (j + Math.floor(k / 2)), (k - Math.floor(k / 2)));"
            ],
            175,
            "\"return\"",
            [
              [
                "js.call_expression",
                "findKth(i, (j + Math.floor(k / 2)), (k - Math.floor(k / 2)))"
              ],
              176,
              [
                [
                  "js.identifier",
                  "findKth"
                ],
                177,
                "\"findKth\""
              ],
              [
                [
                  "js.arguments",
                  "(i, (j + Math.floor(k / 2)), (k - Math.floor(k / 2)))"
                ],
                178,
                "\"(\"",
                [
                  [
                    "js.identifier",
                    "i"
                  ],
                  179,
                  "\"i\""
                ],
                "\",\"",
                [
                  [
                    "js.parenthesized_expression",
                    "(j + Math.floor(k / 2))"
                  ],
                  180,
                  "\"(\"",
                  [
                    [
                      "js.binary_expression",
                      "j + Math.floor(k / 2)"
                    ],
                    181,
                    [
                      [
                        "js.identifier",
                        "j"
                      ],
                      182,
                      "\"j\""
                    ],
                    "\"+\"",
                    [
                      [
                        "js.call_expression",
                        "Math.floor(k / 2)"
                      ],
                      183,
                      [
                        [
                          "js.member_expression",
                          "Math.floor"
                        ],
                        184,
                        [
                          [
                            "js.identifier",
                            "Math"
                          ],
                          185,
                          "\"Math\""
                        ],
                        "\".\"",
                        [
                          [
                            "js.property_identifier",
                            "floor"
                          ],
                          186,
                          "\"floor\""
                        ]
                      ],
                      [
                        [
                          "js.arguments",
                          "(k / 2)"
                        ],
                        187,
                        "\"(\"",
                        [
                          [
                            "js.binary_expression",
                            "k / 2"
                          ],
                          188,
                          [
                            [
                              "js.identifier",
                              "k"
                            ],
                            189,
                            "\"k\""
                          ],
                          "\"/\"",
                          [
                            [
                              "js.number",
                              "2"
                            ],
                            190,
                            "\"2\""
                          ]
                        ],
                        "\")\""
                      ]
                    ]
                  ],
                  "\")\""
                ],
                "\",\"",
                [
                  [
                    "js.parenthesized_expression",
                    "(k - Math.floor(k / 2))"
                  ],
                  191,
                  "\"(\"",
                  [
                    [
                      "js.binary_expression",
                      "k - Math.floor(k / 2)"
                    ],
                    192,
                    [
                      [
                        "js.identifier",
                        "k"
                      ],
                      193,
                      "\"k\""
                    ],
                    "\"-\"",
                    [
                      [
                        "js.call_expression",
                        "Math.floor(k / 2)"
                      ],
                      194,
                      [
                        [
                          "js.member_expression",
                          "Math.floor"
                        ],
                        195,
                        [
                          [
                            "js.identifier",
                            "Math"
                          ],
                          196,
                          "\"Math\""
                        ],
                        "\".\"",
                        [
                          [
                            "js.property_identifier",
                            "floor"
                          ],
                          197,
                          "\"floor\""
                        ]
                      ],
                      [
                        [
                          "js.arguments",
                          "(k / 2)"
                        ],
                        198,
                        "\"(\"",
                        [
                          [
                            "js.binary_expression",
                            "k / 2"
                          ],
                          199,
                          [
                            [
                              "js.identifier",
                              "k"
                            ],
                            200,
                            "\"k\""
                          ],
                          "\"/\"",
                          [
                            [
                              "js.number",
                              "2"
                            ],
                            201,
                            "\"2\""
                          ]
                        ],
                        "\")\""
                      ]
                    ]
                  ],
                  "\")\""
                ],
                "\")\""
              ]
            ],
            "\";\""
          ],
          "\"}\""
        ]
      ],
      [
        [
          "js.expression_statement",
          "[m, n] = [nums1.length, nums2.length];"
        ],
        202,
        [
          [
            "js.assignment_expression",
            "[m, n] = [nums1.length, nums2.length]"
          ],
          203,
          [
            [
              "js.array_pattern",
              "[m, n]"
            ],
            204,
            "\"[\"",
            [
              [
                "js.identifier",
                "m"
              ],
              205,
              "\"m\""
            ],
            "\",\"",
            [
              [
                "js.identifier",
                "n"
              ],
              206,
              "\"n\""
            ],
            "\"]\""
          ],
          "\"=\"",
          [
            [
              "js.array",
              "[nums1.length, nums2.length]"
            ],
            207,
            "\"[\"",
            [
              [
                "js.member_expression",
                "nums1.length"
              ],
              208,
              [
                [
                  "js.identifier",
                  "nums1"
                ],
                209,
                "\"nums1\""
              ],
              "\".\"",
              [
                [
                  "js.property_identifier",
                  "length"
                ],
                210,
                "\"length\""
              ]
            ],
            "\",\"",
            [
              [
                "js.member_expression",
                "nums2.length"
              ],
              211,
              [
                [
                  "js.identifier",
                  "nums2"
                ],
                212,
                "\"nums2\""
              ],
              "\".\"",
              [
                [
                  "js.property_identifier",
                  "length"
                ],
                213,
                "\"length\""
              ]
            ],
            "\"]\""
          ]
        ],
        "\";\""
      ],
      [
        [
          "js.expression_statement",
          "[left, right] = [Math.floor((((m + n) + 1)) / 2), Math.floor((((m + n) + 2)) / 2)];"
        ],
        214,
        [
          [
            "js.assignment_expression",
            "[left, right] = [Math.floor((((m + n) + 1)) / 2), Math.floor((((m + n) + 2)) / 2)]"
          ],
          215,
          [
            [
              "js.array_pattern",
              "[left, right]"
            ],
            216,
            "\"[\"",
            [
              [
                "js.identifier",
                "left"
              ],
              217,
              "\"left\""
            ],
            "\",\"",
            [
              [
                "js.identifier",
                "right"
              ],
              218,
              "\"right\""
            ],
            "\"]\""
          ],
          "\"=\"",
          [
            [
              "js.array",
              "[Math.floor((((m + n) + 1)) / 2), Math.floor((((m + n) + 2)) / 2)]"
            ],
            219,
            "\"[\"",
            [
              [
                "js.call_expression",
                "Math.floor((((m + n) + 1)) / 2)"
              ],
              220,
              [
                [
                  "js.member_expression",
                  "Math.floor"
                ],
                221,
                [
                  [
                    "js.identifier",
                    "Math"
                  ],
                  222,
                  "\"Math\""
                ],
                "\".\"",
                [
                  [
                    "js.property_identifier",
                    "floor"
                  ],
                  223,
                  "\"floor\""
                ]
              ],
              [
                [
                  "js.arguments",
                  "((((m + n) + 1)) / 2)"
                ],
                224,
                "\"(\"",
                [
                  [
                    "js.binary_expression",
                    "(((m + n) + 1)) / 2"
                  ],
                  225,
                  [
                    [
                      "js.parenthesized_expression",
                      "(((m + n) + 1))"
                    ],
                    226,
                    "\"(\"",
                    [
                      [
                        "js.parenthesized_expression",
                        "((m + n) + 1)"
                      ],
                      227,
                      "\"(\"",
                      [
                        [
                          "js.binary_expression",
                          "(m + n) + 1"
                        ],
                        228,
                        [
                          [
                            "js.parenthesized_expression",
                            "(m + n)"
                          ],
                          229,
                          "\"(\"",
                          [
                            [
                              "js.binary_expression",
                              "m + n"
                            ],
                            230,
                            [
                              [
                                "js.identifier",
                                "m"
                              ],
                              231,
                              "\"m\""
                            ],
                            "\"+\"",
                            [
                              [
                                "js.identifier",
                                "n"
                              ],
                              232,
                              "\"n\""
                            ]
                          ],
                          "\")\""
                        ],
                        "\"+\"",
                        [
                          [
                            "js.number",
                            "1"
                          ],
                          233,
                          "\"1\""
                        ]
                      ],
                      "\")\""
                    ],
                    "\")\""
                  ],
                  "\"/\"",
                  [
                    [
                      "js.number",
                      "2"
                    ],
                    234,
                    "\"2\""
                  ]
                ],
                "\")\""
              ]
            ],
            "\",\"",
            [
              [
                "js.call_expression",
                "Math.floor((((m + n) + 2)) / 2)"
              ],
              235,
              [
                [
                  "js.member_expression",
                  "Math.floor"
                ],
                236,
                [
                  [
                    "js.identifier",
                    "Math"
                  ],
                  237,
                  "\"Math\""
                ],
                "\".\"",
                [
                  [
                    "js.property_identifier",
                    "floor"
                  ],
                  238,
                  "\"floor\""
                ]
              ],
              [
                [
                  "js.arguments",
                  "((((m + n) + 2)) / 2)"
                ],
                239,
                "\"(\"",
                [
                  [
                    "js.binary_expression",
                    "(((m + n) + 2)) / 2"
                  ],
                  240,
                  [
                    [
                      "js.parenthesized_expression",
                      "(((m + n) + 2))"
                    ],
                    241,
                    "\"(\"",
                    [
                      [
                        "js.parenthesized_expression",
                        "((m + n) + 2)"
                      ],
                      242,
                      "\"(\"",
                      [
                        [
                          "js.binary_expression",
                          "(m + n) + 2"
                        ],
                        243,
                        [
                          [
                            "js.parenthesized_expression",
                            "(m + n)"
                          ],
                          244,
                          "\"(\"",
                          [
                            [
                              "js.binary_expression",
                              "m + n"
                            ],
                            245,
                            [
                              [
                                "js.identifier",
                                "m"
                              ],
                              246,
                              "\"m\""
                            ],
                            "\"+\"",
                            [
                              [
                                "js.identifier",
                                "n"
                              ],
                              247,
                              "\"n\""
                            ]
                          ],
                          "\")\""
                        ],
                        "\"+\"",
                        [
                          [
                            "js.number",
                            "2"
                          ],
                          248,
                          "\"2\""
                        ]
                      ],
                      "\")\""
                    ],
                    "\")\""
                  ],
                  "\"/\"",
                  [
                    [
                      "js.number",
                      "2"
                    ],
                    249,
                    "\"2\""
                  ]
                ],
                "\")\""
              ]
            ],
            "\"]\""
          ]
        ],
        "\";\""
      ],
      [
        [
          "js.return_statement",
          "return (((findKth(0, 0, left) + findKth(0, 0, right))) / 2);"
        ],
        250,
        "\"return\"",
        [
          [
            "js.parenthesized_expression",
            "(((findKth(0, 0, left) + findKth(0, 0, right))) / 2)"
          ],
          251,
          "\"(\"",
          [
            [
              "js.binary_expression",
              "((findKth(0, 0, left) + findKth(0, 0, right))) / 2"
            ],
            252,
            [
              [
                "js.parenthesized_expression",
                "((findKth(0, 0, left) + findKth(0, 0, right)))"
              ],
              253,
              "\"(\"",
              [
                [
                  "js.parenthesized_expression",
                  "(findKth(0, 0, left) + findKth(0, 0, right))"
                ],
                254,
                "\"(\"",
                [
                  [
                    "js.binary_expression",
                    "findKth(0, 0, left) + findKth(0, 0, right)"
                  ],
                  255,
                  [
                    [
                      "js.call_expression",
                      "findKth(0, 0, left)"
                    ],
                    256,
                    [
                      [
                        "js.identifier",
                        "findKth"
                      ],
                      257,
                      "\"findKth\""
                    ],
                    [
                      [
                        "js.arguments",
                        "(0, 0, left)"
                      ],
                      258,
                      "\"(\"",
                      [
                        [
                          "js.number",
                          "0"
                        ],
                        259,
                        "\"0\""
                      ],
                      "\",\"",
                      [
                        [
                          "js.number",
                          "0"
                        ],
                        260,
                        "\"0\""
                      ],
                      "\",\"",
                      [
                        [
                          "js.identifier",
                          "left"
                        ],
                        261,
                        "\"left\""
                      ],
                      "\")\""
                    ]
                  ],
                  "\"+\"",
                  [
                    [
                      "js.call_expression",
                      "findKth(0, 0, right)"
                    ],
                    262,
                    [
                      [
                        "js.identifier",
                        "findKth"
                      ],
                      263,
                      "\"findKth\""
                    ],
                    [
                      [
                        "js.arguments",
                        "(0, 0, right)"
                      ],
                      264,
                      "\"(\"",
                      [
                        [
                          "js.number",
                          "0"
                        ],
                        265,
                        "\"0\""
                      ],
                      "\",\"",
                      [
                        [
                          "js.number",
                          "0"
                        ],
                        266,
                        "\"0\""
                      ],
                      "\",\"",
                      [
                        [
                          "js.identifier",
                          "right"
                        ],
                        267,
                        "\"right\""
                      ],
                      "\")\""
                    ]
                  ]
                ],
                "\")\""
              ],
              "\")\""
            ],
            "\"/\"",
            [
              [
                "js.number",
                "2"
              ],
              268,
              "\"2\""
            ]
          ],
          "\")\""
        ],
        "\";\""
      ],
      "\"}\""
    ]
  ]
]