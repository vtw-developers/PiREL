{
  "simplest_template": "midVal1 = 0 if i + k // 2 - 1 < m else 1",
  "simplified_templates_stats": [
    [
      0,
      {
        "depths_at_templatized_nodes": [
          6,
          6
        ],
        "has_parse_error": false,
        "is_type_isomorphic_to_template_origin": true,
        "simplified_template": "midVal1 = nums1[i + k // 2 - 1] if i + k // 2 - 1 < m else nums2[j + k // 2 - 1]",
        "template_origin": "midVal1 = nums1[i + k // 2 - 1] if i + k // 2 - 1 < m else float('inf')",
        "texts_at_templatized_nodes": [
          "nums1[i + k // 2 - 1]",
          "nums2[j + k // 2 - 1]"
        ]
      }
    ],
    [
      1,
      {
        "depths_at_templatized_nodes": [
          2,
          2
        ],
        "has_parse_error": false,
        "is_type_isomorphic_to_template_origin": true,
        "simplified_template": "midVal1 = 0 if i + k // 2 - 1 < m else 1",
        "template_origin": "midVal1 = nums1[i + k // 2 - 1] if i + k // 2 - 1 < m else float('inf')",
        "texts_at_templatized_nodes": [
          "0",
          "1"
        ]
      }
    ],
    [
      2,
      {
        "depths_at_templatized_nodes": [
          3,
          3
        ],
        "has_parse_error": false,
        "is_type_isomorphic_to_template_origin": true,
        "simplified_template": "midVal1 = \"foo\" if i + k // 2 - 1 < m else \"bar\"",
        "template_origin": "midVal1 = nums1[i + k // 2 - 1] if i + k // 2 - 1 < m else float('inf')",
        "texts_at_templatized_nodes": [
          "\"foo\"",
          "\"bar\""
        ]
      }
    ],
    [
      3,
      {
        "depths_at_templatized_nodes": [
          2,
          2
        ],
        "has_parse_error": false,
        "is_type_isomorphic_to_template_origin": true,
        "simplified_template": "midVal1 = True if i + k // 2 - 1 < m else False",
        "template_origin": "midVal1 = nums1[i + k // 2 - 1] if i + k // 2 - 1 < m else float('inf')",
        "texts_at_templatized_nodes": [
          "True",
          "False"
        ]
      }
    ],
    [
      4,
      {
        "depths_at_templatized_nodes": [
          3,
          3
        ],
        "has_parse_error": false,
        "is_type_isomorphic_to_template_origin": true,
        "simplified_template": "midVal1 = [1,2,3] if i + k // 2 - 1 < m else [4,5,6]",
        "template_origin": "midVal1 = nums1[i + k // 2 - 1] if i + k // 2 - 1 < m else float('inf')",
        "texts_at_templatized_nodes": [
          "[1,2,3]",
          "[4,5,6]"
        ]
      }
    ],
    [
      5,
      {
        "depths_at_templatized_nodes": [
          2,
          2
        ],
        "has_parse_error": false,
        "is_type_isomorphic_to_template_origin": true,
        "simplified_template": "midVal1 = 1 if i + k // 2 - 1 < m else 2",
        "template_origin": "midVal1 = nums1[i + k // 2 - 1] if i + k // 2 - 1 < m else float('inf')",
        "texts_at_templatized_nodes": [
          "1",
          "2"
        ]
      }
    ],
    [
      6,
      {
        "depths_at_templatized_nodes": [
          3,
          3
        ],
        "has_parse_error": false,
        "is_type_isomorphic_to_template_origin": true,
        "simplified_template": "midVal1 = \"a\" if i + k // 2 - 1 < m else \"b\"",
        "template_origin": "midVal1 = nums1[i + k // 2 - 1] if i + k // 2 - 1 < m else float('inf')",
        "texts_at_templatized_nodes": [
          "\"a\"",
          "\"b\""
        ]
      }
    ],
    [
      7,
      {
        "depths_at_templatized_nodes": [
          3,
          3
        ],
        "has_parse_error": false,
        "is_type_isomorphic_to_template_origin": true,
        "simplified_template": "midVal1 = [1,2,3] if i + k // 2 - 1 < m else [4,5,6]",
        "template_origin": "midVal1 = nums1[i + k // 2 - 1] if i + k // 2 - 1 < m else float('inf')",
        "texts_at_templatized_nodes": [
          "[1,2,3]",
          "[4,5,6]"
        ]
      }
    ],
    [
      8,
      {
        "depths_at_templatized_nodes": [
          5,
          5
        ],
        "has_parse_error": false,
        "is_type_isomorphic_to_template_origin": true,
        "simplified_template": "midVal1 = {\"key\": \"value\"} if i + k // 2 - 1 < m else {\"anotherKey\": \"anotherValue\"}",
        "template_origin": "midVal1 = nums1[i + k // 2 - 1] if i + k // 2 - 1 < m else float('inf')",
        "texts_at_templatized_nodes": [
          "{\"key\": \"value\"}",
          "{\"anotherKey\": \"anotherValue\"}"
        ]
      }
    ],
    [
      9,
      {
        "depths_at_templatized_nodes": [
          3,
          3
        ],
        "has_parse_error": false,
        "is_type_isomorphic_to_template_origin": true,
        "simplified_template": "midVal1 = (1,2) if i + k // 2 - 1 < m else (3,4)",
        "template_origin": "midVal1 = nums1[i + k // 2 - 1] if i + k // 2 - 1 < m else float('inf')",
        "texts_at_templatized_nodes": [
          "(1,2)",
          "(3,4)"
        ]
      }
    ],
    [
      10,
      {
        "depths_at_templatized_nodes": [
          6,
          6
        ],
        "has_parse_error": false,
        "is_type_isomorphic_to_template_origin": true,
        "simplified_template": "midVal1 = nums1[i + k // 2 - 1] if i + k // 2 - 1 < m else nums2[j + k // 2 - 1]",
        "template_origin": "midVal1 = nums1[i + k // 2 - 1] if i + k // 2 - 1 < m else float('inf')",
        "texts_at_templatized_nodes": [
          "nums1[i + k // 2 - 1]",
          "nums2[j + k // 2 - 1]"
        ]
      }
    ],
    [
      11,
      {
        "depths_at_templatized_nodes": [
          6,
          6
        ],
        "has_parse_error": false,
        "is_type_isomorphic_to_template_origin": true,
        "simplified_template": "midVal1 = arrayA[i + k // 2 - 1] if i + k // 2 - 1 < m else arrayB[j + k // 2 - 1]",
        "template_origin": "midVal1 = nums1[i + k // 2 - 1] if i + k // 2 - 1 < m else float('inf')",
        "texts_at_templatized_nodes": [
          "arrayA[i + k // 2 - 1]",
          "arrayB[j + k // 2 - 1]"
        ]
      }
    ],
    [
      12,
      {
        "depths_at_templatized_nodes": [
          6,
          6
        ],
        "has_parse_error": false,
        "is_type_isomorphic_to_template_origin": true,
        "simplified_template": "midVal1 = list1[i + k // 2 - 1] if i + k // 2 - 1 < m else list2[j + k // 2 - 1]",
        "template_origin": "midVal1 = nums1[i + k // 2 - 1] if i + k // 2 - 1 < m else float('inf')",
        "texts_at_templatized_nodes": [
          "list1[i + k // 2 - 1]",
          "list2[j + k // 2 - 1]"
        ]
      }
    ],
    [
      13,
      {
        "depths_at_templatized_nodes": [
          6,
          6
        ],
        "has_parse_error": false,
        "is_type_isomorphic_to_template_origin": true,
        "simplified_template": "midVal1 = sequence1[i + k // 2 - 1] if i + k // 2 - 1 < m else sequence2[j + k // 2 - 1]",
        "template_origin": "midVal1 = nums1[i + k // 2 - 1] if i + k // 2 - 1 < m else float('inf')",
        "texts_at_templatized_nodes": [
          "sequence1[i + k // 2 - 1]",
          "sequence2[j + k // 2 - 1]"
        ]
      }
    ],
    [
      14,
      {
        "depths_at_templatized_nodes": [
          6,
          6
        ],
        "has_parse_error": false,
        "is_type_isomorphic_to_template_origin": true,
        "simplified_template": "midVal1 = data1[i + k // 2 - 1] if i + k // 2 - 1 < m else data2[j + k // 2 - 1]",
        "template_origin": "midVal1 = nums1[i + k // 2 - 1] if i + k // 2 - 1 < m else float('inf')",
        "texts_at_templatized_nodes": [
          "data1[i + k // 2 - 1]",
          "data2[j + k // 2 - 1]"
        ]
      }
    ],
    [
      15,
      {
        "depths_at_templatized_nodes": [
          6,
          6
        ],
        "has_parse_error": false,
        "is_type_isomorphic_to_template_origin": true,
        "simplified_template": "midVal1 = nums1[i + k // 2 - 1] if i + k // 2 - 1 < m else nums2[j + k // 2 - 1]",
        "template_origin": "midVal1 = nums1[i + k // 2 - 1] if i + k // 2 - 1 < m else float('inf')",
        "texts_at_templatized_nodes": [
          "nums1[i + k // 2 - 1]",
          "nums2[j + k // 2 - 1]"
        ]
      }
    ],
    [
      16,
      {
        "depths_at_templatized_nodes": [
          3,
          3
        ],
        "has_parse_error": false,
        "is_type_isomorphic_to_template_origin": true,
        "simplified_template": "midVal1 = nums1[i] if i + k // 2 - 1 < m else nums2[j]",
        "template_origin": "midVal1 = nums1[i + k // 2 - 1] if i + k // 2 - 1 < m else float('inf')",
        "texts_at_templatized_nodes": [
          "nums1[i]",
          "nums2[j]"
        ]
      }
    ],
    [
      17,
      {
        "depths_at_templatized_nodes": [
          6,
          6
        ],
        "has_parse_error": false,
        "is_type_isomorphic_to_template_origin": true,
        "simplified_template": "midVal1 = array1[i + k // 2 - 1] if i + k // 2 - 1 < m else array2[j + k // 2 - 1]",
        "template_origin": "midVal1 = nums1[i + k // 2 - 1] if i + k // 2 - 1 < m else float('inf')",
        "texts_at_templatized_nodes": [
          "array1[i + k // 2 - 1]",
          "array2[j + k // 2 - 1]"
        ]
      }
    ],
    [
      18,
      {
        "depths_at_templatized_nodes": [
          6,
          6
        ],
        "has_parse_error": false,
        "is_type_isomorphic_to_template_origin": true,
        "simplified_template": "midVal1 = arr[i + k // 2 - 1] if i + k // 2 - 1 < m else lst[j + k // 2 - 1]",
        "template_origin": "midVal1 = nums1[i + k // 2 - 1] if i + k // 2 - 1 < m else float('inf')",
        "texts_at_templatized_nodes": [
          "arr[i + k // 2 - 1]",
          "lst[j + k // 2 - 1]"
        ]
      }
    ],
    [
      19,
      {
        "depths_at_templatized_nodes": [
          6,
          6
        ],
        "has_parse_error": false,
        "is_type_isomorphic_to_template_origin": true,
        "simplified_template": "midVal1 = list1[i + k // 2 - 1] if i + k // 2 - 1 < m else list2[j + k // 2 - 1]",
        "template_origin": "midVal1 = nums1[i + k // 2 - 1] if i + k // 2 - 1 < m else float('inf')",
        "texts_at_templatized_nodes": [
          "list1[i + k // 2 - 1]",
          "list2[j + k // 2 - 1]"
        ]
      }
    ],
    [
      20,
      {
        "depths_at_templatized_nodes": [
          6,
          6
        ],
        "has_parse_error": false,
        "is_type_isomorphic_to_template_origin": true,
        "simplified_template": "midVal1 = nums1[i + k // 2 - 1] if i + k // 2 - 1 < m else nums2[j + k // 2 - 1]",
        "template_origin": "midVal1 = nums1[i + k // 2 - 1] if i + k // 2 - 1 < m else float('inf')",
        "texts_at_templatized_nodes": [
          "nums1[i + k // 2 - 1]",
          "nums2[j + k // 2 - 1]"
        ]
      }
    ],
    [
      21,
      {
        "depths_at_templatized_nodes": [
          2,
          2
        ],
        "has_parse_error": false,
        "is_type_isomorphic_to_template_origin": true,
        "simplified_template": "midVal1 = 0 if i + k // 2 - 1 < m else 1",
        "template_origin": "midVal1 = nums1[i + k // 2 - 1] if i + k // 2 - 1 < m else float('inf')",
        "texts_at_templatized_nodes": [
          "0",
          "1"
        ]
      }
    ],
    [
      22,
      {
        "depths_at_templatized_nodes": [
          3,
          3
        ],
        "has_parse_error": false,
        "is_type_isomorphic_to_template_origin": true,
        "simplified_template": "midVal1 = \"less\" if i + k // 2 - 1 < m else \"greater\"",
        "template_origin": "midVal1 = nums1[i + k // 2 - 1] if i + k // 2 - 1 < m else float('inf')",
        "texts_at_templatized_nodes": [
          "\"less\"",
          "\"greater\""
        ]
      }
    ],
    [
      23,
      {
        "depths_at_templatized_nodes": [
          2,
          2
        ],
        "has_parse_error": false,
        "is_type_isomorphic_to_template_origin": true,
        "simplified_template": "midVal1 = True if i + k // 2 - 1 < m else False",
        "template_origin": "midVal1 = nums1[i + k // 2 - 1] if i + k // 2 - 1 < m else float('inf')",
        "texts_at_templatized_nodes": [
          "True",
          "False"
        ]
      }
    ],
    [
      24,
      {
        "depths_at_templatized_nodes": [
          6,
          6
        ],
        "has_parse_error": false,
        "is_type_isomorphic_to_template_origin": true,
        "simplified_template": "midVal1 = [i for i in range(m)] if i + k // 2 - 1 < m else [j for j in range(n)]",
        "template_origin": "midVal1 = nums1[i + k // 2 - 1] if i + k // 2 - 1 < m else float('inf')",
        "texts_at_templatized_nodes": [
          "[i for i in range(m)]",
          "[j for j in range(n)]"
        ]
      }
    ]
  ],
  "templatized_node_texts": [
    "0",
    "1"
  ]
}
