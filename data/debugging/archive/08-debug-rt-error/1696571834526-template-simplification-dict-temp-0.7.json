{
  "simplest_template": "midVal1 = 0 if i + k // 2 - 1 < m else 1",
  "simplified_templates_stats": [
    [
      0,
      {
        "depths_at_templatized_nodes": [
          6,
          6
        ],
        "has_parse_error": false,
        "is_type_isomorphic_to_template_origin": true,
        "simplified_template": "midVal1 = nums1[i + k // 2 - 1] if i + k // 2 - 1 < m else nums2[j + k // 2 - 1]",
        "template_origin": "midVal1 = nums1[i + k // 2 - 1] if i + k // 2 - 1 < m else float('inf')",
        "texts_at_templatized_nodes": [
          "nums1[i + k // 2 - 1]",
          "nums2[j + k // 2 - 1]"
        ]
      }
    ],
    [
      1,
      {
        "depths_at_templatized_nodes": [
          2,
          2
        ],
        "has_parse_error": false,
        "is_type_isomorphic_to_template_origin": true,
        "simplified_template": "midVal1 = 0 if i + k // 2 - 1 < m else 1",
        "template_origin": "midVal1 = nums1[i + k // 2 - 1] if i + k // 2 - 1 < m else float('inf')",
        "texts_at_templatized_nodes": [
          "0",
          "1"
        ]
      }
    ],
    [
      2,
      {
        "depths_at_templatized_nodes": [
          3,
          3
        ],
        "has_parse_error": false,
        "is_type_isomorphic_to_template_origin": true,
        "simplified_template": "midVal1 = \"low\" if i + k // 2 - 1 < m else \"high\"",
        "template_origin": "midVal1 = nums1[i + k // 2 - 1] if i + k // 2 - 1 < m else float('inf')",
        "texts_at_templatized_nodes": [
          "\"low\"",
          "\"high\""
        ]
      }
    ],
    [
      3,
      {
        "depths_at_templatized_nodes": [
          2,
          2
        ],
        "has_parse_error": false,
        "is_type_isomorphic_to_template_origin": true,
        "simplified_template": "midVal1 = i if i + k // 2 - 1 < m else j",
        "template_origin": "midVal1 = nums1[i + k // 2 - 1] if i + k // 2 - 1 < m else float('inf')",
        "texts_at_templatized_nodes": [
          "i",
          "j"
        ]
      }
    ],
    [
      4,
      {
        "depths_at_templatized_nodes": [
          2,
          2
        ],
        "has_parse_error": false,
        "is_type_isomorphic_to_template_origin": true,
        "simplified_template": "midVal1 = True if i + k // 2 - 1 < m else False",
        "template_origin": "midVal1 = nums1[i + k // 2 - 1] if i + k // 2 - 1 < m else float('inf')",
        "texts_at_templatized_nodes": [
          "True",
          "False"
        ]
      }
    ],
    [
      5,
      {
        "depths_at_templatized_nodes": [
          6,
          6
        ],
        "has_parse_error": false,
        "is_type_isomorphic_to_template_origin": true,
        "simplified_template": "midVal1 = nums1[i + k // 2 - 1] if i + k // 2 - 1 < m else nums2[j+ k // 2 - 1]",
        "template_origin": "midVal1 = nums1[i + k // 2 - 1] if i + k // 2 - 1 < m else float('inf')",
        "texts_at_templatized_nodes": [
          "nums1[i + k // 2 - 1]",
          "nums2[j+ k // 2 - 1]"
        ]
      }
    ],
    [
      6,
      {
        "depths_at_templatized_nodes": [
          2,
          2
        ],
        "has_parse_error": false,
        "is_type_isomorphic_to_template_origin": true,
        "simplified_template": "midVal1 = 0 if i + k // 2 - 1 < m else 1",
        "template_origin": "midVal1 = nums1[i + k // 2 - 1] if i + k // 2 - 1 < m else float('inf')",
        "texts_at_templatized_nodes": [
          "0",
          "1"
        ]
      }
    ],
    [
      7,
      {
        "depths_at_templatized_nodes": [
          2,
          2
        ],
        "has_parse_error": false,
        "is_type_isomorphic_to_template_origin": true,
        "simplified_template": "midVal1 = i if i + k // 2 - 1 < m else j",
        "template_origin": "midVal1 = nums1[i + k // 2 - 1] if i + k // 2 - 1 < m else float('inf')",
        "texts_at_templatized_nodes": [
          "i",
          "j"
        ]
      }
    ],
    [
      8,
      {
        "depths_at_templatized_nodes": [
          3,
          3
        ],
        "has_parse_error": false,
        "is_type_isomorphic_to_template_origin": true,
        "simplified_template": "midVal1 = \"yes\" if i + k // 2 - 1 < m else \"no\"",
        "template_origin": "midVal1 = nums1[i + k // 2 - 1] if i + k // 2 - 1 < m else float('inf')",
        "texts_at_templatized_nodes": [
          "\"yes\"",
          "\"no\""
        ]
      }
    ],
    [
      9,
      {
        "depths_at_templatized_nodes": [
          2,
          2
        ],
        "has_parse_error": false,
        "is_type_isomorphic_to_template_origin": true,
        "simplified_template": "midVal1 = True if i + k // 2 - 1 < m else False",
        "template_origin": "midVal1 = nums1[i + k // 2 - 1] if i + k // 2 - 1 < m else float('inf')",
        "texts_at_templatized_nodes": [
          "True",
          "False"
        ]
      }
    ],
    [
      10,
      {
        "depths_at_templatized_nodes": [
          6,
          6
        ],
        "has_parse_error": false,
        "is_type_isomorphic_to_template_origin": true,
        "simplified_template": "midVal1 = nums1[i + k // 2 - 1] if i + k // 2 - 1 < m else nums2[j + k // 2 - 1]",
        "template_origin": "midVal1 = nums1[i + k // 2 - 1] if i + k // 2 - 1 < m else float('inf')",
        "texts_at_templatized_nodes": [
          "nums1[i + k // 2 - 1]",
          "nums2[j + k // 2 - 1]"
        ]
      }
    ],
    [
      11,
      {
        "depths_at_templatized_nodes": [
          2,
          2
        ],
        "has_parse_error": false,
        "is_type_isomorphic_to_template_origin": true,
        "simplified_template": "midVal1 = a if i + k // 2 - 1 < m else b",
        "template_origin": "midVal1 = nums1[i + k // 2 - 1] if i + k // 2 - 1 < m else float('inf')",
        "texts_at_templatized_nodes": [
          "a",
          "b"
        ]
      }
    ],
    [
      12,
      {
        "depths_at_templatized_nodes": [
          6,
          6
        ],
        "has_parse_error": false,
        "is_type_isomorphic_to_template_origin": true,
        "simplified_template": "midVal1 = list1[i + k // 2 - 1] if i + k // 2 - 1 < m else list2[j + k // 2 - 1]",
        "template_origin": "midVal1 = nums1[i + k // 2 - 1] if i + k // 2 - 1 < m else float('inf')",
        "texts_at_templatized_nodes": [
          "list1[i + k // 2 - 1]",
          "list2[j + k // 2 - 1]"
        ]
      }
    ],
    [
      13,
      {
        "depths_at_templatized_nodes": [
          6,
          6
        ],
        "has_parse_error": false,
        "is_type_isomorphic_to_template_origin": true,
        "simplified_template": "midVal1 = x[i + k // 2 - 1] if i + k // 2 - 1 < m else y[j + k // 2 - 1]",
        "template_origin": "midVal1 = nums1[i + k // 2 - 1] if i + k // 2 - 1 < m else float('inf')",
        "texts_at_templatized_nodes": [
          "x[i + k // 2 - 1]",
          "y[j + k // 2 - 1]"
        ]
      }
    ],
    [
      14,
      {
        "depths_at_templatized_nodes": [
          6,
          6
        ],
        "has_parse_error": false,
        "is_type_isomorphic_to_template_origin": true,
        "simplified_template": "midVal1 = array1[i + k // 2 - 1] if i + k // 2 - 1 < m else array2[j + k // 2 - 1]",
        "template_origin": "midVal1 = nums1[i + k // 2 - 1] if i + k // 2 - 1 < m else float('inf')",
        "texts_at_templatized_nodes": [
          "array1[i + k // 2 - 1]",
          "array2[j + k // 2 - 1]"
        ]
      }
    ],
    [
      15,
      {
        "depths_at_templatized_nodes": [
          2,
          2
        ],
        "has_parse_error": false,
        "is_type_isomorphic_to_template_origin": true,
        "simplified_template": "midVal1 = 5 if i + k // 2 - 1 < m else 10",
        "template_origin": "midVal1 = nums1[i + k // 2 - 1] if i + k // 2 - 1 < m else float('inf')",
        "texts_at_templatized_nodes": [
          "5",
          "10"
        ]
      }
    ],
    [
      16,
      {
        "depths_at_templatized_nodes": [
          3,
          3
        ],
        "has_parse_error": false,
        "is_type_isomorphic_to_template_origin": true,
        "simplified_template": "midVal1 = 'yes' if i + k // 2 - 1 < m else 'no'",
        "template_origin": "midVal1 = nums1[i + k // 2 - 1] if i + k // 2 - 1 < m else float('inf')",
        "texts_at_templatized_nodes": [
          "'yes'",
          "'no'"
        ]
      }
    ],
    [
      17,
      {
        "depths_at_templatized_nodes": [
          2,
          2
        ],
        "has_parse_error": false,
        "is_type_isomorphic_to_template_origin": true,
        "simplified_template": "midVal1 = True if i + k // 2 - 1 < m else False",
        "template_origin": "midVal1 = nums1[i + k // 2 - 1] if i + k // 2 - 1 < m else float('inf')",
        "texts_at_templatized_nodes": [
          "True",
          "False"
        ]
      }
    ],
    [
      18,
      {
        "depths_at_templatized_nodes": [
          3,
          3
        ],
        "has_parse_error": false,
        "is_type_isomorphic_to_template_origin": true,
        "simplified_template": "midVal1 = [1,2,3] if i + k // 2 - 1 < m else [4,5,6]",
        "template_origin": "midVal1 = nums1[i + k // 2 - 1] if i + k // 2 - 1 < m else float('inf')",
        "texts_at_templatized_nodes": [
          "[1,2,3]",
          "[4,5,6]"
        ]
      }
    ],
    [
      19,
      {
        "depths_at_templatized_nodes": [
          4,
          4
        ],
        "has_parse_error": false,
        "is_type_isomorphic_to_template_origin": true,
        "simplified_template": "midVal1 = (i + k) if i + k // 2 - 1 < m else (i - k)",
        "template_origin": "midVal1 = nums1[i + k // 2 - 1] if i + k // 2 - 1 < m else float('inf')",
        "texts_at_templatized_nodes": [
          "(i + k)",
          "(i - k)"
        ]
      }
    ],
    [
      20,
      {
        "depths_at_templatized_nodes": [
          6,
          6
        ],
        "has_parse_error": false,
        "is_type_isomorphic_to_template_origin": true,
        "simplified_template": "midVal1 = nums1[i + k // 2 - 1] if i + k // 2 - 1 < m else nums2[j + k // 2 - 1]",
        "template_origin": "midVal1 = nums1[i + k // 2 - 1] if i + k // 2 - 1 < m else float('inf')",
        "texts_at_templatized_nodes": [
          "nums1[i + k // 2 - 1]",
          "nums2[j + k // 2 - 1]"
        ]
      }
    ],
    [
      21,
      {
        "depths_at_templatized_nodes": [
          6,
          6
        ],
        "has_parse_error": false,
        "is_type_isomorphic_to_template_origin": true,
        "simplified_template": "midVal1 = array[i + k // 2 - 1] if i + k // 2 - 1 < m else list[j + k // 2 - 1]",
        "template_origin": "midVal1 = nums1[i + k // 2 - 1] if i + k // 2 - 1 < m else float('inf')",
        "texts_at_templatized_nodes": [
          "array[i + k // 2 - 1]",
          "list[j + k // 2 - 1]"
        ]
      }
    ],
    [
      22,
      {
        "depths_at_templatized_nodes": [
          6,
          6
        ],
        "has_parse_error": false,
        "is_type_isomorphic_to_template_origin": true,
        "simplified_template": "midVal1 = A[i + k // 2 - 1] if i + k // 2 - 1 < m else B[j + k // 2 - 1]",
        "template_origin": "midVal1 = nums1[i + k // 2 - 1] if i + k // 2 - 1 < m else float('inf')",
        "texts_at_templatized_nodes": [
          "A[i + k // 2 - 1]",
          "B[j + k // 2 - 1]"
        ]
      }
    ],
    [
      23,
      {
        "depths_at_templatized_nodes": [
          6,
          6
        ],
        "has_parse_error": false,
        "is_type_isomorphic_to_template_origin": true,
        "simplified_template": "midVal1 = x[i + k // 2 - 1] if i + k // 2 - 1 < m else y[j + k // 2 - 1]",
        "template_origin": "midVal1 = nums1[i + k // 2 - 1] if i + k // 2 - 1 < m else float('inf')",
        "texts_at_templatized_nodes": [
          "x[i + k // 2 - 1]",
          "y[j + k // 2 - 1]"
        ]
      }
    ],
    [
      24,
      {
        "depths_at_templatized_nodes": [
          6,
          6
        ],
        "has_parse_error": false,
        "is_type_isomorphic_to_template_origin": true,
        "simplified_template": "midVal1 = data[i + k // 2 - 1] if i + k // 2 - 1 < m else data2[j + k // 2 - 1]",
        "template_origin": "midVal1 = nums1[i + k // 2 - 1] if i + k // 2 - 1 < m else float('inf')",
        "texts_at_templatized_nodes": [
          "data[i + k // 2 - 1]",
          "data2[j + k // 2 - 1]"
        ]
      }
    ]
  ],
  "templatized_node_texts": [
    "0",
    "1"
  ]
}
