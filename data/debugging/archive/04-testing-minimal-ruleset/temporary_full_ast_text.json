[
  [
    "py.module",
    "def f_gold(nums1, nums2):\n  midVal1 = nums1[i + k // 2 - 1] if i + k // 2 - 1 < m else float('inf')"
  ],
  0,
  [
    [
      "py.function_definition",
      "def f_gold(nums1, nums2):\n  midVal1 = nums1[i + k // 2 - 1] if i + k // 2 - 1 < m else float('inf')"
    ],
    1,
    "\"def\"",
    [
      [
        "py.identifier",
        "f_gold"
      ],
      2,
      "\"f_gold\""
    ],
    [
      [
        "py.parameters",
        "(nums1, nums2)"
      ],
      3,
      "\"(\"",
      [
        [
          "py.identifier",
          "nums1"
        ],
        4,
        "\"nums1\""
      ],
      "\",\"",
      [
        [
          "py.identifier",
          "nums2"
        ],
        5,
        "\"nums2\""
      ],
      "\")\""
    ],
    "\":\"",
    [
      [
        "py.block",
        "midVal1 = nums1[i + k // 2 - 1] if i + k // 2 - 1 < m else float('inf')"
      ],
      6,
      [
        [
          "py.expression_statement",
          "midVal1 = nums1[i + k // 2 - 1] if i + k // 2 - 1 < m else float('inf')"
        ],
        7,
        [
          [
            "py.assignment",
            "midVal1 = nums1[i + k // 2 - 1] if i + k // 2 - 1 < m else float('inf')"
          ],
          8,
          [
            [
              "py.identifier",
              "midVal1"
            ],
            9,
            "\"midVal1\""
          ],
          "\"=\"",
          [
            [
              "py.conditional_expression",
              "nums1[i + k // 2 - 1] if i + k // 2 - 1 < m else float('inf')"
            ],
            10,
            [
              [
                "py.subscript",
                "nums1[i + k // 2 - 1]"
              ],
              11,
              [
                [
                  "py.identifier",
                  "nums1"
                ],
                12,
                "\"nums1\""
              ],
              "\"[\"",
              [
                [
                  "py.binary_operator",
                  "i + k // 2 - 1"
                ],
                13,
                [
                  [
                    "py.binary_operator",
                    "i + k // 2"
                  ],
                  14,
                  [
                    [
                      "py.identifier",
                      "i"
                    ],
                    15,
                    "\"i\""
                  ],
                  "\"+\"",
                  [
                    [
                      "py.binary_operator",
                      "k // 2"
                    ],
                    16,
                    [
                      [
                        "py.identifier",
                        "k"
                      ],
                      17,
                      "\"k\""
                    ],
                    "\"//\"",
                    [
                      [
                        "py.integer",
                        "2"
                      ],
                      18,
                      "\"2\""
                    ]
                  ]
                ],
                "\"-\"",
                [
                  [
                    "py.integer",
                    "1"
                  ],
                  19,
                  "\"1\""
                ]
              ],
              "\"]\""
            ],
            "\"if\"",
            [
              [
                "py.comparison_operator",
                "i + k // 2 - 1 < m"
              ],
              20,
              [
                [
                  "py.binary_operator",
                  "i + k // 2 - 1"
                ],
                21,
                [
                  [
                    "py.binary_operator",
                    "i + k // 2"
                  ],
                  22,
                  [
                    [
                      "py.identifier",
                      "i"
                    ],
                    23,
                    "\"i\""
                  ],
                  "\"+\"",
                  [
                    [
                      "py.binary_operator",
                      "k // 2"
                    ],
                    24,
                    [
                      [
                        "py.identifier",
                        "k"
                      ],
                      25,
                      "\"k\""
                    ],
                    "\"//\"",
                    [
                      [
                        "py.integer",
                        "2"
                      ],
                      26,
                      "\"2\""
                    ]
                  ]
                ],
                "\"-\"",
                [
                  [
                    "py.integer",
                    "1"
                  ],
                  27,
                  "\"1\""
                ]
              ],
              "\"<\"",
              [
                [
                  "py.identifier",
                  "m"
                ],
                28,
                "\"m\""
              ]
            ],
            "\"else\"",
            [
              [
                "py.call",
                "float('inf')"
              ],
              29,
              [
                [
                  "py.identifier",
                  "float"
                ],
                30,
                "\"float\""
              ],
              [
                [
                  "py.argument_list",
                  "('inf')"
                ],
                31,
                "\"(\"",
                [
                  [
                    "py.string",
                    "'inf'"
                  ],
                  32,
                  [
                    "anno",
                    [
                      "\"stype\"",
                      "\"\""
                    ],
                    [
                      "\"quote\"",
                      "\"'\""
                    ]
                  ],
                  "\"\\\"\"",
                  [
                    [
                      "py.string_content",
                      "inf"
                    ],
                    33,
                    "\"inf\""
                  ],
                  "\"\\\"\""
                ],
                "\")\""
              ]
            ]
          ]
        ]
      ]
    ]
  ]
]