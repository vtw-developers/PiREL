[
  "(match_expand\n  (fragment (\"py.for_statement\" (str \"for\") \"*\" (str \"in\") (\"py.call\" (\"py.identifier\" (val \"enumerate\")) (\"py.argument_list\" (str \"(\") (\"py.identifier\" \"_val_\") (str \")\"))) (str \":\") (\"py.block\" \"*\")) \"*\")\n  (fragment (\"js.for_statement\" (str \"for\") (str \"(\") (\"js.lexical_declaration\" (str \"let\") (\"js.variable_declarator\" (\"js.identifier\" (val \"i\")) (str \"=\") (\"js.number\" (val \"0\"))) (str \";\")) (\"js.expression_statement\" (\"js.binary_expression\" (\"js.identifier\" (val \"i\")) (str \"<\") (\"js.member_expression\" (\"js.identifier\" \"_val1_\") (str \".\") (\"js.property_identifier\" (val \"length\")))) (str \";\")) (\"js.update_expression\" (\"js.identifier\" (val \"i\")) (str \"++\")) (str \")\") (\"js.statement_block\" (str \"{\") (\"js.lexical_declaration\" (str \"let\") (\"js.variable_declarator\" (\"js.identifier\" (val \"v\")) (str \"=\") (\"js.subscript_expression\" (\"js.identifier\" \"_val1_\") (str \"[\") (\"js.identifier\" (val \"i\")) (str \"]\"))) (str \";\")) \"*2\" (str \"}\"))) \"*3\")\n)",
  "(match_expand\n  (fragment (\"py.for_statement\" (str \"for\") \"*\" (str \"in\") (\"py.call\" (\"py.identifier\" (val \"enumerate\")) (\"py.argument_list\" (str \"(\") (\"py.identifier\" \"_val_\") (str \")\"))) (str \":\") (\"py.block\" \"*\")) \"*\")\n  (fragment (\"js.expression_statement\" (\"js.call_expression\" (\"js.member_expression\" (\"js.identifier\" \"_val1_\") (str \".\") (\"js.property_identifier\" (val \"forEach\"))) (\"js.arguments\" (str \"(\") (\"js.arrow_function\" (nostr) (\"js.formal_parameters\" (str \"(\") (\"js.identifier\" (val \"v\")) (str \",\") (\"js.identifier\" (val \"i\")) (str \")\")) (str \"=>\") (\"js.statement_block\" (str \"{\") \"*2\" (str \"}\"))) (str \")\"))) (str \";\")) \"*3\")\n)"
]
