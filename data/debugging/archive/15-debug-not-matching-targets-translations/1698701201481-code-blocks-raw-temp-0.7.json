[
  "for i, item in enumerate(my_list):\n    print(i, item)",
  "for index, element in enumerate(['apple', 'banana', 'cherry']):\n    print('Index:', index, 'Element:', element)",
  "for i, _ in enumerate(range(10)):\n    if i == 5:\n        break",
  "for idx, value in enumerate({\"first\": 1, \"second\": 2}):\n    print(idx, value)",
  "for _, fruit in enumerate(('apple', 'banana', 'cherry')):\n    print('Fruit:', fruit)",
  "for i, value in enumerate(nums):\n    print(i, value)",
  "for _ in enumerate([1, 2, 3, 4, 5]):\n    print(_)",
  "for idx, num in enumerate(map(int, input().split())):\n    print(idx, num)",
  "for idx, num in enumerate([1, 2, 3, 4, 5]):\n    if num % 2 == 0:\n        continue\n    else:\n        print(num)",
  "for i, val in enumerate(list_vals):\n    print(i, val)",
  "for i, val in enumerate([1, 2, 3, 4, 5]):\n    print(i, val)",
  "for i, val in enumerate(range(5)):\n    print(i, val)",
  "for i, val in enumerate(numbers):\n    if val > 5:\n        break\n    else:\n        print(i, val)",
  "for i, val in enumerate(nums):\n    print(val)",
  "for i in enumerate([1, 2, 3, 4, 5]):\n    print(i)",
  "for i in enumerate(range(10)):\n    print(i)",
  "for i, val in enumerate(nums):\n    if val > 5:\n        print(val)",
  "for i, val in enumerate(nums):\n    if i > 5:\n        break",
  "def func(nums):\n    for i, val in enumerate(nums):\n        if val > 5:\n            return i",
  "for i, val in enumerate(nums):\n    if val < 5:\n        continue\n    print(val)",
  "for i, val in enumerate([1, 2, 3, 4, 5]):\n    print(val)",
  "for i, key in enumerate({'a': 1, 'b': 2, 'c': 3}):\n    print(key)",
  "class Sample:\n    def __init__(self):\n        self.attr1 = 1\n        self.attr2 = 2\n\nobj = Sample()\n\nfor i, attr in enumerate(vars(obj)):\n    print(attr)",
  "for i, value in enumerate(my_list):\n    print(i, value)",
  "for i, value in enumerate([1, 2, 3, 4]):\n    print(value)",
  "for i, value in enumerate(get_list()):\n    if value is None: continue",
  "for i, value in enumerate(get_dict().items()):\n    if value[1] > threshold: break",
  "for index, value in enumerate([1, 2, 3, 4, 5]):\n    if index == value: print(\"Match!\")",
  "for index, value in enumerate(my_object.get_values()):\n    if value > limit: return False",
  "for i, element in enumerate(my_list):\n    print(element)",
  "for idx, val in enumerate([\"apple\", \"banana\", \"cherry\"]):\n    print(val)",
  "for n, char in enumerate(\"Hello\"):\n    if char == \"l\":\n        continue",
  "for index, item in enumerate({\"key1\": \"value1\", \"key2\": \"value2\"}.items()):\n    print(item)",
  "for i, val in enumerate(nums):\n    print(val)",
  "for index, value in enumerate(['apple', 'banana', 'cherry']):\n    print(index, value)",
  "for key, value in enumerate(dictionary):\n    print(key, value)",
  "for idx, item in enumerate([1, 2, 3, 4, 5]):\n    if item > 3:\n        break",
  "for num, elem in enumerate(['one', 'two', 'three']):\n    if num == 2:\n        continue",
  "for a, b in enumerate({'name': 'John', 'age': 30}):\n    return a, b",
  "for i, item in enumerate(my_list):\n    print(item)",
  "for i, item in enumerate([1, 2, 3, 4, 5]):\n    print(item)",
  "for i, item in enumerate(list(range(10))):\n    if item % 2 == 0:\n        continue\n    else:\n        print(item)",
  "for count, char in enumerate(str(\"Hello World\")):\n    print(f\"{count}: {char}\")",
  "for i, val in enumerate(nums):\n    print(i, val)",
  "for index, value in enumerate(my_list):\n    my_list[index] = value * 2",
  "for count, item in enumerate(items):\n    if item == 'stop':\n        break",
  "for num, letter in enumerate('python'):\n    if letter == 'o':\n        continue",
  "for idx, char in enumerate('hello'):\n    if char == 'e':\n        return idx",
  "for idx, val in enumerate(nums):\n    print(val)",
  "for i in enumerate([1, 2, 3]):\n    print(i)",
  "for item in enumerate(list(range(10))):\n    print(item)",
  "for idx, val in enumerate(nums):\n    if val > 5:\n        break"
]
