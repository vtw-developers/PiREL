{
  "generated_codes_stats": [
    [
      0,
      {
        "generated_code": "num = x - y",
        "has_parse_error": false,
        "is_type_isomorphic_to_template": true,
        "template_origin": "num = target - v"
      }
    ],
    [
      1,
      {
        "generated_code": "num = 5 - 3",
        "has_parse_error": false,
        "is_type_isomorphic_to_template": true,
        "template_origin": "num = target - v"
      }
    ],
    [
      2,
      {
        "generated_code": "num = max(2,3) - min(2,3)",
        "has_parse_error": false,
        "is_type_isomorphic_to_template": true,
        "template_origin": "num = target - v"
      }
    ],
    [
      3,
      {
        "generated_code": "num = lst[0] - lst[1]",
        "has_parse_error": false,
        "is_type_isomorphic_to_template": true,
        "template_origin": "num = target - v"
      }
    ],
    [
      4,
      {
        "generated_code": "num = dict['key1'] - dict['key2']",
        "has_parse_error": false,
        "is_type_isomorphic_to_template": true,
        "template_origin": "num = target - v"
      }
    ],
    [
      5,
      {
        "generated_code": "num = x - y",
        "has_parse_error": false,
        "is_type_isomorphic_to_template": true,
        "template_origin": "num = target - v"
      }
    ],
    [
      6,
      {
        "generated_code": "num = 10 - 5",
        "has_parse_error": false,
        "is_type_isomorphic_to_template": true,
        "template_origin": "num = target - v"
      }
    ],
    [
      7,
      {
        "generated_code": "num = max(10, 20) - min(3, 7)",
        "has_parse_error": false,
        "is_type_isomorphic_to_template": true,
        "template_origin": "num = target - v"
      }
    ],
    [
      8,
      {
        "generated_code": "num1 = 10 - 5",
        "has_parse_error": false,
        "is_type_isomorphic_to_template": false,
        "template_origin": "num = target - v"
      }
    ],
    [
      9,
      {
        "generated_code": "num2 = max_val - min_val",
        "has_parse_error": false,
        "is_type_isomorphic_to_template": false,
        "template_origin": "num = target - v"
      }
    ],
    [
      10,
      {
        "generated_code": "num3 = 100 - 50",
        "has_parse_error": false,
        "is_type_isomorphic_to_template": false,
        "template_origin": "num = target - v"
      }
    ],
    [
      11,
      {
        "generated_code": "num4 = num_a - num_b",
        "has_parse_error": false,
        "is_type_isomorphic_to_template": false,
        "template_origin": "num = target - v"
      }
    ],
    [
      12,
      {
        "generated_code": "num5 = sum(nums) - len(nums)",
        "has_parse_error": false,
        "is_type_isomorphic_to_template": false,
        "template_origin": "num = target - v"
      }
    ],
    [
      13,
      {
        "generated_code": "num6 = lst[0] - lst[1]",
        "has_parse_error": false,
        "is_type_isomorphic_to_template": false,
        "template_origin": "num = target - v"
      }
    ],
    [
      14,
      {
        "generated_code": "num = x - y",
        "has_parse_error": false,
        "is_type_isomorphic_to_template": true,
        "template_origin": "num = target - v"
      }
    ],
    [
      15,
      {
        "generated_code": "num = 10 - 5",
        "has_parse_error": false,
        "is_type_isomorphic_to_template": true,
        "template_origin": "num = target - v"
      }
    ],
    [
      16,
      {
        "generated_code": "num = len(list1) - len(list2)",
        "has_parse_error": false,
        "is_type_isomorphic_to_template": true,
        "template_origin": "num = target - v"
      }
    ],
    [
      17,
      {
        "generated_code": "num = dict1.get('key1') - dict2.get('key2')",
        "has_parse_error": false,
        "is_type_isomorphic_to_template": true,
        "template_origin": "num = target - v"
      }
    ],
    [
      18,
      {
        "generated_code": "num = var1 - var2",
        "has_parse_error": false,
        "is_type_isomorphic_to_template": true,
        "template_origin": "num = target - v"
      }
    ],
    [
      19,
      {
        "generated_code": "num = 5 - 2",
        "has_parse_error": false,
        "is_type_isomorphic_to_template": true,
        "template_origin": "num = target - v"
      }
    ],
    [
      20,
      {
        "generated_code": "num = func1() - func2()",
        "has_parse_error": false,
        "is_type_isomorphic_to_template": true,
        "template_origin": "num = target - v"
      }
    ],
    [
      21,
      {
        "generated_code": "num = list1[1] - list2[2]",
        "has_parse_error": false,
        "is_type_isomorphic_to_template": true,
        "template_origin": "num = target - v"
      }
    ],
    [
      22,
      {
        "generated_code": "num = dict1['key1'] - dict2['key2']",
        "has_parse_error": false,
        "is_type_isomorphic_to_template": true,
        "template_origin": "num = target - v"
      }
    ],
    [
      23,
      {
        "generated_code": "num = obj1.attr1 - obj2.attr2",
        "has_parse_error": false,
        "is_type_isomorphic_to_template": true,
        "template_origin": "num = target - v"
      }
    ]
  ],
  "min_penalty": 1,
  "success": true,
  "two_source_programs_stats": [
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 160,
      "program1": "num = x - y",
      "program2": "num = 5 - 3",
      "ratio_template_nodes_width_1": 1,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 640,
      "program1": "num = x - y",
      "program2": "num = max(2,3) - min(2,3)",
      "ratio_template_nodes_width_1": 0.5,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 480,
      "program1": "num = x - y",
      "program2": "num = lst[0] - lst[1]",
      "ratio_template_nodes_width_1": 0.5,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 480,
      "program1": "num = x - y",
      "program2": "num = dict['key1'] - dict['key2']",
      "ratio_template_nodes_width_1": 0.5,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": false,
      "match_penalty": 100,
      "no_repeating_tokens": false,
      "pair_penalty": 400,
      "program1": "num = x - y",
      "program2": "num = x - y",
      "ratio_template_nodes_width_1": 1,
      "templatized_nodes_match_types": [
        null,
        null
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        false,
        false
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 160,
      "program1": "num = x - y",
      "program2": "num = 10 - 5",
      "ratio_template_nodes_width_1": 1,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 640,
      "program1": "num = x - y",
      "program2": "num = max(10, 20) - min(3, 7)",
      "ratio_template_nodes_width_1": 0.5,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": false,
      "match_penalty": 100,
      "no_repeating_tokens": false,
      "pair_penalty": 400,
      "program1": "num = x - y",
      "program2": "num = x - y",
      "ratio_template_nodes_width_1": 1,
      "templatized_nodes_match_types": [
        null,
        null
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        false,
        false
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 160,
      "program1": "num = x - y",
      "program2": "num = 10 - 5",
      "ratio_template_nodes_width_1": 1,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 480,
      "program1": "num = x - y",
      "program2": "num = len(list1) - len(list2)",
      "ratio_template_nodes_width_1": 0.5,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 640,
      "program1": "num = x - y",
      "program2": "num = dict1.get('key1') - dict2.get('key2')",
      "ratio_template_nodes_width_1": 0.5,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 0.25,
      "no_repeating_tokens": true,
      "pair_penalty": 1,
      "program1": "num = x - y",
      "program2": "num = var1 - var2",
      "ratio_template_nodes_width_1": 1,
      "templatized_nodes_match_types": [
        "terminal_val",
        "terminal_val"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        false,
        false
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 160,
      "program1": "num = x - y",
      "program2": "num = 5 - 2",
      "ratio_template_nodes_width_1": 1,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 160,
      "program1": "num = x - y",
      "program2": "num = func1() - func2()",
      "ratio_template_nodes_width_1": 0.5,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 480,
      "program1": "num = x - y",
      "program2": "num = list1[1] - list2[2]",
      "ratio_template_nodes_width_1": 0.5,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 480,
      "program1": "num = x - y",
      "program2": "num = dict1['key1'] - dict2['key2']",
      "ratio_template_nodes_width_1": 0.5,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 480,
      "program1": "num = x - y",
      "program2": "num = obj1.attr1 - obj2.attr2",
      "ratio_template_nodes_width_1": 0.5,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 640,
      "program1": "num = 5 - 3",
      "program2": "num = max(2,3) - min(2,3)",
      "ratio_template_nodes_width_1": 0.5,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 480,
      "program1": "num = 5 - 3",
      "program2": "num = lst[0] - lst[1]",
      "ratio_template_nodes_width_1": 0.5,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 480,
      "program1": "num = 5 - 3",
      "program2": "num = dict['key1'] - dict['key2']",
      "ratio_template_nodes_width_1": 0.5,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 160,
      "program1": "num = 5 - 3",
      "program2": "num = x - y",
      "ratio_template_nodes_width_1": 1,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": false,
      "match_penalty": 100,
      "no_repeating_tokens": false,
      "pair_penalty": 200,
      "program1": "num = 5 - 3",
      "program2": "num = 10 - 5",
      "ratio_template_nodes_width_1": 1,
      "templatized_nodes_match_types": [
        null,
        null
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        false,
        false
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 640,
      "program1": "num = 5 - 3",
      "program2": "num = max(10, 20) - min(3, 7)",
      "ratio_template_nodes_width_1": 0.5,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 160,
      "program1": "num = 5 - 3",
      "program2": "num = x - y",
      "ratio_template_nodes_width_1": 1,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": false,
      "match_penalty": 100,
      "no_repeating_tokens": false,
      "pair_penalty": 200,
      "program1": "num = 5 - 3",
      "program2": "num = 10 - 5",
      "ratio_template_nodes_width_1": 1,
      "templatized_nodes_match_types": [
        null,
        null
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        false,
        false
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 480,
      "program1": "num = 5 - 3",
      "program2": "num = len(list1) - len(list2)",
      "ratio_template_nodes_width_1": 0.5,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 640,
      "program1": "num = 5 - 3",
      "program2": "num = dict1.get('key1') - dict2.get('key2')",
      "ratio_template_nodes_width_1": 0.5,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 160,
      "program1": "num = 5 - 3",
      "program2": "num = var1 - var2",
      "ratio_template_nodes_width_1": 1,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": false,
      "match_penalty": 100,
      "no_repeating_tokens": false,
      "pair_penalty": 200,
      "program1": "num = 5 - 3",
      "program2": "num = 5 - 2",
      "ratio_template_nodes_width_1": 1,
      "templatized_nodes_match_types": [
        null,
        null
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        false,
        false
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 160,
      "program1": "num = 5 - 3",
      "program2": "num = func1() - func2()",
      "ratio_template_nodes_width_1": 0.5,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 480,
      "program1": "num = 5 - 3",
      "program2": "num = list1[1] - list2[2]",
      "ratio_template_nodes_width_1": 0.5,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 480,
      "program1": "num = 5 - 3",
      "program2": "num = dict1['key1'] - dict2['key2']",
      "ratio_template_nodes_width_1": 0.5,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 480,
      "program1": "num = 5 - 3",
      "program2": "num = obj1.attr1 - obj2.attr2",
      "ratio_template_nodes_width_1": 0.5,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 800,
      "program1": "num = max(2,3) - min(2,3)",
      "program2": "num = lst[0] - lst[1]",
      "ratio_template_nodes_width_1": 0,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 800,
      "program1": "num = max(2,3) - min(2,3)",
      "program2": "num = dict['key1'] - dict['key2']",
      "ratio_template_nodes_width_1": 0,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 640,
      "program1": "num = max(2,3) - min(2,3)",
      "program2": "num = x - y",
      "ratio_template_nodes_width_1": 0.5,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 640,
      "program1": "num = max(2,3) - min(2,3)",
      "program2": "num = 10 - 5",
      "ratio_template_nodes_width_1": 0.5,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": false,
      "match_penalty": 100,
      "no_repeating_tokens": true,
      "pair_penalty": 1200,
      "program1": "num = max(2,3) - min(2,3)",
      "program2": "num = max(10, 20) - min(3, 7)",
      "ratio_template_nodes_width_1": 0,
      "templatized_nodes_match_types": [
        null,
        null
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        false,
        false
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 640,
      "program1": "num = max(2,3) - min(2,3)",
      "program2": "num = x - y",
      "ratio_template_nodes_width_1": 0.5,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 640,
      "program1": "num = max(2,3) - min(2,3)",
      "program2": "num = 10 - 5",
      "ratio_template_nodes_width_1": 0.5,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": false,
      "match_penalty": 100,
      "no_repeating_tokens": true,
      "pair_penalty": 1000,
      "program1": "num = max(2,3) - min(2,3)",
      "program2": "num = len(list1) - len(list2)",
      "ratio_template_nodes_width_1": 0,
      "templatized_nodes_match_types": [
        null,
        null
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        false,
        false
      ]
    },
    {
      "all_templatized_nodes_match": false,
      "match_penalty": 100,
      "no_repeating_tokens": true,
      "pair_penalty": 1200,
      "program1": "num = max(2,3) - min(2,3)",
      "program2": "num = dict1.get('key1') - dict2.get('key2')",
      "ratio_template_nodes_width_1": 0,
      "templatized_nodes_match_types": [
        null,
        null
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        false,
        false
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 640,
      "program1": "num = max(2,3) - min(2,3)",
      "program2": "num = var1 - var2",
      "ratio_template_nodes_width_1": 0.5,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 640,
      "program1": "num = max(2,3) - min(2,3)",
      "program2": "num = 5 - 2",
      "ratio_template_nodes_width_1": 0.5,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": false,
      "match_penalty": 100,
      "no_repeating_tokens": true,
      "pair_penalty": 800,
      "program1": "num = max(2,3) - min(2,3)",
      "program2": "num = func1() - func2()",
      "ratio_template_nodes_width_1": 0,
      "templatized_nodes_match_types": [
        null,
        null
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        false,
        false
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 800,
      "program1": "num = max(2,3) - min(2,3)",
      "program2": "num = list1[1] - list2[2]",
      "ratio_template_nodes_width_1": 0,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 800,
      "program1": "num = max(2,3) - min(2,3)",
      "program2": "num = dict1['key1'] - dict2['key2']",
      "ratio_template_nodes_width_1": 0,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 800,
      "program1": "num = max(2,3) - min(2,3)",
      "program2": "num = obj1.attr1 - obj2.attr2",
      "ratio_template_nodes_width_1": 0,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": false,
      "match_penalty": 100,
      "no_repeating_tokens": true,
      "pair_penalty": 800,
      "program1": "num = lst[0] - lst[1]",
      "program2": "num = dict['key1'] - dict['key2']",
      "ratio_template_nodes_width_1": 0,
      "templatized_nodes_match_types": [
        null,
        null
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        false,
        false
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 480,
      "program1": "num = lst[0] - lst[1]",
      "program2": "num = x - y",
      "ratio_template_nodes_width_1": 0.5,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 480,
      "program1": "num = lst[0] - lst[1]",
      "program2": "num = 10 - 5",
      "ratio_template_nodes_width_1": 0.5,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 800,
      "program1": "num = lst[0] - lst[1]",
      "program2": "num = max(10, 20) - min(3, 7)",
      "ratio_template_nodes_width_1": 0,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 480,
      "program1": "num = lst[0] - lst[1]",
      "program2": "num = x - y",
      "ratio_template_nodes_width_1": 0.5,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 480,
      "program1": "num = lst[0] - lst[1]",
      "program2": "num = 10 - 5",
      "ratio_template_nodes_width_1": 0.5,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 640,
      "program1": "num = lst[0] - lst[1]",
      "program2": "num = len(list1) - len(list2)",
      "ratio_template_nodes_width_1": 0,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 800,
      "program1": "num = lst[0] - lst[1]",
      "program2": "num = dict1.get('key1') - dict2.get('key2')",
      "ratio_template_nodes_width_1": 0,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 480,
      "program1": "num = lst[0] - lst[1]",
      "program2": "num = var1 - var2",
      "ratio_template_nodes_width_1": 0.5,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 480,
      "program1": "num = lst[0] - lst[1]",
      "program2": "num = 5 - 2",
      "ratio_template_nodes_width_1": 0.5,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 480,
      "program1": "num = lst[0] - lst[1]",
      "program2": "num = func1() - func2()",
      "ratio_template_nodes_width_1": 0,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": false,
      "match_penalty": 100,
      "no_repeating_tokens": true,
      "pair_penalty": 800,
      "program1": "num = lst[0] - lst[1]",
      "program2": "num = list1[1] - list2[2]",
      "ratio_template_nodes_width_1": 0,
      "templatized_nodes_match_types": [
        null,
        null
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        false,
        false
      ]
    },
    {
      "all_templatized_nodes_match": false,
      "match_penalty": 100,
      "no_repeating_tokens": true,
      "pair_penalty": 800,
      "program1": "num = lst[0] - lst[1]",
      "program2": "num = dict1['key1'] - dict2['key2']",
      "ratio_template_nodes_width_1": 0,
      "templatized_nodes_match_types": [
        null,
        null
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        false,
        false
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 640,
      "program1": "num = lst[0] - lst[1]",
      "program2": "num = obj1.attr1 - obj2.attr2",
      "ratio_template_nodes_width_1": 0,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 480,
      "program1": "num = dict['key1'] - dict['key2']",
      "program2": "num = x - y",
      "ratio_template_nodes_width_1": 0.5,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 480,
      "program1": "num = dict['key1'] - dict['key2']",
      "program2": "num = 10 - 5",
      "ratio_template_nodes_width_1": 0.5,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 800,
      "program1": "num = dict['key1'] - dict['key2']",
      "program2": "num = max(10, 20) - min(3, 7)",
      "ratio_template_nodes_width_1": 0,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 480,
      "program1": "num = dict['key1'] - dict['key2']",
      "program2": "num = x - y",
      "ratio_template_nodes_width_1": 0.5,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 480,
      "program1": "num = dict['key1'] - dict['key2']",
      "program2": "num = 10 - 5",
      "ratio_template_nodes_width_1": 0.5,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 640,
      "program1": "num = dict['key1'] - dict['key2']",
      "program2": "num = len(list1) - len(list2)",
      "ratio_template_nodes_width_1": 0,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 800,
      "program1": "num = dict['key1'] - dict['key2']",
      "program2": "num = dict1.get('key1') - dict2.get('key2')",
      "ratio_template_nodes_width_1": 0,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 480,
      "program1": "num = dict['key1'] - dict['key2']",
      "program2": "num = var1 - var2",
      "ratio_template_nodes_width_1": 0.5,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 480,
      "program1": "num = dict['key1'] - dict['key2']",
      "program2": "num = 5 - 2",
      "ratio_template_nodes_width_1": 0.5,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 480,
      "program1": "num = dict['key1'] - dict['key2']",
      "program2": "num = func1() - func2()",
      "ratio_template_nodes_width_1": 0,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": false,
      "match_penalty": 100,
      "no_repeating_tokens": true,
      "pair_penalty": 800,
      "program1": "num = dict['key1'] - dict['key2']",
      "program2": "num = list1[1] - list2[2]",
      "ratio_template_nodes_width_1": 0,
      "templatized_nodes_match_types": [
        null,
        null
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        false,
        false
      ]
    },
    {
      "all_templatized_nodes_match": false,
      "match_penalty": 100,
      "no_repeating_tokens": true,
      "pair_penalty": 800,
      "program1": "num = dict['key1'] - dict['key2']",
      "program2": "num = dict1['key1'] - dict2['key2']",
      "ratio_template_nodes_width_1": 0,
      "templatized_nodes_match_types": [
        null,
        null
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        false,
        false
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 640,
      "program1": "num = dict['key1'] - dict['key2']",
      "program2": "num = obj1.attr1 - obj2.attr2",
      "ratio_template_nodes_width_1": 0,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 160,
      "program1": "num = x - y",
      "program2": "num = 10 - 5",
      "ratio_template_nodes_width_1": 1,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 640,
      "program1": "num = x - y",
      "program2": "num = max(10, 20) - min(3, 7)",
      "ratio_template_nodes_width_1": 0.5,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": false,
      "match_penalty": 100,
      "no_repeating_tokens": false,
      "pair_penalty": 400,
      "program1": "num = x - y",
      "program2": "num = x - y",
      "ratio_template_nodes_width_1": 1,
      "templatized_nodes_match_types": [
        null,
        null
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        false,
        false
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 160,
      "program1": "num = x - y",
      "program2": "num = 10 - 5",
      "ratio_template_nodes_width_1": 1,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 480,
      "program1": "num = x - y",
      "program2": "num = len(list1) - len(list2)",
      "ratio_template_nodes_width_1": 0.5,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 640,
      "program1": "num = x - y",
      "program2": "num = dict1.get('key1') - dict2.get('key2')",
      "ratio_template_nodes_width_1": 0.5,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 0.25,
      "no_repeating_tokens": true,
      "pair_penalty": 1,
      "program1": "num = x - y",
      "program2": "num = var1 - var2",
      "ratio_template_nodes_width_1": 1,
      "templatized_nodes_match_types": [
        "terminal_val",
        "terminal_val"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        false,
        false
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 160,
      "program1": "num = x - y",
      "program2": "num = 5 - 2",
      "ratio_template_nodes_width_1": 1,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 160,
      "program1": "num = x - y",
      "program2": "num = func1() - func2()",
      "ratio_template_nodes_width_1": 0.5,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 480,
      "program1": "num = x - y",
      "program2": "num = list1[1] - list2[2]",
      "ratio_template_nodes_width_1": 0.5,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 480,
      "program1": "num = x - y",
      "program2": "num = dict1['key1'] - dict2['key2']",
      "ratio_template_nodes_width_1": 0.5,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 480,
      "program1": "num = x - y",
      "program2": "num = obj1.attr1 - obj2.attr2",
      "ratio_template_nodes_width_1": 0.5,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 640,
      "program1": "num = 10 - 5",
      "program2": "num = max(10, 20) - min(3, 7)",
      "ratio_template_nodes_width_1": 0.5,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 160,
      "program1": "num = 10 - 5",
      "program2": "num = x - y",
      "ratio_template_nodes_width_1": 1,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": false,
      "match_penalty": 100,
      "no_repeating_tokens": false,
      "pair_penalty": 200,
      "program1": "num = 10 - 5",
      "program2": "num = 10 - 5",
      "ratio_template_nodes_width_1": 1,
      "templatized_nodes_match_types": [
        null,
        null
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        false,
        false
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 480,
      "program1": "num = 10 - 5",
      "program2": "num = len(list1) - len(list2)",
      "ratio_template_nodes_width_1": 0.5,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 640,
      "program1": "num = 10 - 5",
      "program2": "num = dict1.get('key1') - dict2.get('key2')",
      "ratio_template_nodes_width_1": 0.5,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 160,
      "program1": "num = 10 - 5",
      "program2": "num = var1 - var2",
      "ratio_template_nodes_width_1": 1,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": false,
      "match_penalty": 100,
      "no_repeating_tokens": false,
      "pair_penalty": 200,
      "program1": "num = 10 - 5",
      "program2": "num = 5 - 2",
      "ratio_template_nodes_width_1": 1,
      "templatized_nodes_match_types": [
        null,
        null
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        false,
        false
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 160,
      "program1": "num = 10 - 5",
      "program2": "num = func1() - func2()",
      "ratio_template_nodes_width_1": 0.5,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 480,
      "program1": "num = 10 - 5",
      "program2": "num = list1[1] - list2[2]",
      "ratio_template_nodes_width_1": 0.5,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 480,
      "program1": "num = 10 - 5",
      "program2": "num = dict1['key1'] - dict2['key2']",
      "ratio_template_nodes_width_1": 0.5,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 480,
      "program1": "num = 10 - 5",
      "program2": "num = obj1.attr1 - obj2.attr2",
      "ratio_template_nodes_width_1": 0.5,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 640,
      "program1": "num = max(10, 20) - min(3, 7)",
      "program2": "num = x - y",
      "ratio_template_nodes_width_1": 0.5,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 640,
      "program1": "num = max(10, 20) - min(3, 7)",
      "program2": "num = 10 - 5",
      "ratio_template_nodes_width_1": 0.5,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": false,
      "match_penalty": 100,
      "no_repeating_tokens": true,
      "pair_penalty": 1000,
      "program1": "num = max(10, 20) - min(3, 7)",
      "program2": "num = len(list1) - len(list2)",
      "ratio_template_nodes_width_1": 0,
      "templatized_nodes_match_types": [
        null,
        null
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        false,
        false
      ]
    },
    {
      "all_templatized_nodes_match": false,
      "match_penalty": 100,
      "no_repeating_tokens": true,
      "pair_penalty": 1200,
      "program1": "num = max(10, 20) - min(3, 7)",
      "program2": "num = dict1.get('key1') - dict2.get('key2')",
      "ratio_template_nodes_width_1": 0,
      "templatized_nodes_match_types": [
        null,
        null
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        false,
        false
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 640,
      "program1": "num = max(10, 20) - min(3, 7)",
      "program2": "num = var1 - var2",
      "ratio_template_nodes_width_1": 0.5,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 640,
      "program1": "num = max(10, 20) - min(3, 7)",
      "program2": "num = 5 - 2",
      "ratio_template_nodes_width_1": 0.5,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": false,
      "match_penalty": 100,
      "no_repeating_tokens": true,
      "pair_penalty": 800,
      "program1": "num = max(10, 20) - min(3, 7)",
      "program2": "num = func1() - func2()",
      "ratio_template_nodes_width_1": 0,
      "templatized_nodes_match_types": [
        null,
        null
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        false,
        false
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 800,
      "program1": "num = max(10, 20) - min(3, 7)",
      "program2": "num = list1[1] - list2[2]",
      "ratio_template_nodes_width_1": 0,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 800,
      "program1": "num = max(10, 20) - min(3, 7)",
      "program2": "num = dict1['key1'] - dict2['key2']",
      "ratio_template_nodes_width_1": 0,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 800,
      "program1": "num = max(10, 20) - min(3, 7)",
      "program2": "num = obj1.attr1 - obj2.attr2",
      "ratio_template_nodes_width_1": 0,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 160,
      "program1": "num = x - y",
      "program2": "num = 10 - 5",
      "ratio_template_nodes_width_1": 1,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 480,
      "program1": "num = x - y",
      "program2": "num = len(list1) - len(list2)",
      "ratio_template_nodes_width_1": 0.5,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 640,
      "program1": "num = x - y",
      "program2": "num = dict1.get('key1') - dict2.get('key2')",
      "ratio_template_nodes_width_1": 0.5,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 0.25,
      "no_repeating_tokens": true,
      "pair_penalty": 1,
      "program1": "num = x - y",
      "program2": "num = var1 - var2",
      "ratio_template_nodes_width_1": 1,
      "templatized_nodes_match_types": [
        "terminal_val",
        "terminal_val"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        false,
        false
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 160,
      "program1": "num = x - y",
      "program2": "num = 5 - 2",
      "ratio_template_nodes_width_1": 1,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 160,
      "program1": "num = x - y",
      "program2": "num = func1() - func2()",
      "ratio_template_nodes_width_1": 0.5,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 480,
      "program1": "num = x - y",
      "program2": "num = list1[1] - list2[2]",
      "ratio_template_nodes_width_1": 0.5,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 480,
      "program1": "num = x - y",
      "program2": "num = dict1['key1'] - dict2['key2']",
      "ratio_template_nodes_width_1": 0.5,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 480,
      "program1": "num = x - y",
      "program2": "num = obj1.attr1 - obj2.attr2",
      "ratio_template_nodes_width_1": 0.5,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 480,
      "program1": "num = 10 - 5",
      "program2": "num = len(list1) - len(list2)",
      "ratio_template_nodes_width_1": 0.5,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 640,
      "program1": "num = 10 - 5",
      "program2": "num = dict1.get('key1') - dict2.get('key2')",
      "ratio_template_nodes_width_1": 0.5,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 160,
      "program1": "num = 10 - 5",
      "program2": "num = var1 - var2",
      "ratio_template_nodes_width_1": 1,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": false,
      "match_penalty": 100,
      "no_repeating_tokens": false,
      "pair_penalty": 200,
      "program1": "num = 10 - 5",
      "program2": "num = 5 - 2",
      "ratio_template_nodes_width_1": 1,
      "templatized_nodes_match_types": [
        null,
        null
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        false,
        false
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 160,
      "program1": "num = 10 - 5",
      "program2": "num = func1() - func2()",
      "ratio_template_nodes_width_1": 0.5,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 480,
      "program1": "num = 10 - 5",
      "program2": "num = list1[1] - list2[2]",
      "ratio_template_nodes_width_1": 0.5,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 480,
      "program1": "num = 10 - 5",
      "program2": "num = dict1['key1'] - dict2['key2']",
      "ratio_template_nodes_width_1": 0.5,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 480,
      "program1": "num = 10 - 5",
      "program2": "num = obj1.attr1 - obj2.attr2",
      "ratio_template_nodes_width_1": 0.5,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": false,
      "match_penalty": 100,
      "no_repeating_tokens": true,
      "pair_penalty": 1000,
      "program1": "num = len(list1) - len(list2)",
      "program2": "num = dict1.get('key1') - dict2.get('key2')",
      "ratio_template_nodes_width_1": 0,
      "templatized_nodes_match_types": [
        null,
        null
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        false,
        false
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 480,
      "program1": "num = len(list1) - len(list2)",
      "program2": "num = var1 - var2",
      "ratio_template_nodes_width_1": 0.5,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 480,
      "program1": "num = len(list1) - len(list2)",
      "program2": "num = 5 - 2",
      "ratio_template_nodes_width_1": 0.5,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": false,
      "match_penalty": 100,
      "no_repeating_tokens": true,
      "pair_penalty": 600,
      "program1": "num = len(list1) - len(list2)",
      "program2": "num = func1() - func2()",
      "ratio_template_nodes_width_1": 0,
      "templatized_nodes_match_types": [
        null,
        null
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        false,
        false
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 640,
      "program1": "num = len(list1) - len(list2)",
      "program2": "num = list1[1] - list2[2]",
      "ratio_template_nodes_width_1": 0,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 640,
      "program1": "num = len(list1) - len(list2)",
      "program2": "num = dict1['key1'] - dict2['key2']",
      "ratio_template_nodes_width_1": 0,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 640,
      "program1": "num = len(list1) - len(list2)",
      "program2": "num = obj1.attr1 - obj2.attr2",
      "ratio_template_nodes_width_1": 0,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 640,
      "program1": "num = dict1.get('key1') - dict2.get('key2')",
      "program2": "num = var1 - var2",
      "ratio_template_nodes_width_1": 0.5,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 640,
      "program1": "num = dict1.get('key1') - dict2.get('key2')",
      "program2": "num = 5 - 2",
      "ratio_template_nodes_width_1": 0.5,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": false,
      "match_penalty": 100,
      "no_repeating_tokens": true,
      "pair_penalty": 800,
      "program1": "num = dict1.get('key1') - dict2.get('key2')",
      "program2": "num = func1() - func2()",
      "ratio_template_nodes_width_1": 0,
      "templatized_nodes_match_types": [
        null,
        null
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        false,
        false
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 800,
      "program1": "num = dict1.get('key1') - dict2.get('key2')",
      "program2": "num = list1[1] - list2[2]",
      "ratio_template_nodes_width_1": 0,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 800,
      "program1": "num = dict1.get('key1') - dict2.get('key2')",
      "program2": "num = dict1['key1'] - dict2['key2']",
      "ratio_template_nodes_width_1": 0,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 800,
      "program1": "num = dict1.get('key1') - dict2.get('key2')",
      "program2": "num = obj1.attr1 - obj2.attr2",
      "ratio_template_nodes_width_1": 0,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 160,
      "program1": "num = var1 - var2",
      "program2": "num = 5 - 2",
      "ratio_template_nodes_width_1": 1,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 160,
      "program1": "num = var1 - var2",
      "program2": "num = func1() - func2()",
      "ratio_template_nodes_width_1": 0.5,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 480,
      "program1": "num = var1 - var2",
      "program2": "num = list1[1] - list2[2]",
      "ratio_template_nodes_width_1": 0.5,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 480,
      "program1": "num = var1 - var2",
      "program2": "num = dict1['key1'] - dict2['key2']",
      "ratio_template_nodes_width_1": 0.5,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 480,
      "program1": "num = var1 - var2",
      "program2": "num = obj1.attr1 - obj2.attr2",
      "ratio_template_nodes_width_1": 0.5,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 160,
      "program1": "num = 5 - 2",
      "program2": "num = func1() - func2()",
      "ratio_template_nodes_width_1": 0.5,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 480,
      "program1": "num = 5 - 2",
      "program2": "num = list1[1] - list2[2]",
      "ratio_template_nodes_width_1": 0.5,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 480,
      "program1": "num = 5 - 2",
      "program2": "num = dict1['key1'] - dict2['key2']",
      "ratio_template_nodes_width_1": 0.5,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 480,
      "program1": "num = 5 - 2",
      "program2": "num = obj1.attr1 - obj2.attr2",
      "ratio_template_nodes_width_1": 0.5,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 480,
      "program1": "num = func1() - func2()",
      "program2": "num = list1[1] - list2[2]",
      "ratio_template_nodes_width_1": 0,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 480,
      "program1": "num = func1() - func2()",
      "program2": "num = dict1['key1'] - dict2['key2']",
      "ratio_template_nodes_width_1": 0,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 480,
      "program1": "num = func1() - func2()",
      "program2": "num = obj1.attr1 - obj2.attr2",
      "ratio_template_nodes_width_1": 0,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": false,
      "match_penalty": 100,
      "no_repeating_tokens": true,
      "pair_penalty": 800,
      "program1": "num = list1[1] - list2[2]",
      "program2": "num = dict1['key1'] - dict2['key2']",
      "ratio_template_nodes_width_1": 0,
      "templatized_nodes_match_types": [
        null,
        null
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        false,
        false
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 640,
      "program1": "num = list1[1] - list2[2]",
      "program2": "num = obj1.attr1 - obj2.attr2",
      "ratio_template_nodes_width_1": 0,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 640,
      "program1": "num = dict1['key1'] - dict2['key2']",
      "program2": "num = obj1.attr1 - obj2.attr2",
      "ratio_template_nodes_width_1": 0,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    }
  ],
  "valid_tsp_list": [
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 0.25,
      "no_repeating_tokens": true,
      "pair_penalty": 1,
      "program1": "num = x - y",
      "program2": "num = var1 - var2",
      "ratio_template_nodes_width_1": 1,
      "templatized_nodes_match_types": [
        "terminal_val",
        "terminal_val"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        false,
        false
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 0.25,
      "no_repeating_tokens": true,
      "pair_penalty": 1,
      "program1": "num = x - y",
      "program2": "num = var1 - var2",
      "ratio_template_nodes_width_1": 1,
      "templatized_nodes_match_types": [
        "terminal_val",
        "terminal_val"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        false,
        false
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 0.25,
      "no_repeating_tokens": true,
      "pair_penalty": 1,
      "program1": "num = x - y",
      "program2": "num = var1 - var2",
      "ratio_template_nodes_width_1": 1,
      "templatized_nodes_match_types": [
        "terminal_val",
        "terminal_val"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        false,
        false
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 160,
      "program1": "num = x - y",
      "program2": "num = 5 - 3",
      "ratio_template_nodes_width_1": 1,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 160,
      "program1": "num = x - y",
      "program2": "num = 10 - 5",
      "ratio_template_nodes_width_1": 1,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 160,
      "program1": "num = x - y",
      "program2": "num = 10 - 5",
      "ratio_template_nodes_width_1": 1,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 160,
      "program1": "num = x - y",
      "program2": "num = 5 - 2",
      "ratio_template_nodes_width_1": 1,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 160,
      "program1": "num = x - y",
      "program2": "num = func1() - func2()",
      "ratio_template_nodes_width_1": 0.5,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 160,
      "program1": "num = 5 - 3",
      "program2": "num = x - y",
      "ratio_template_nodes_width_1": 1,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 160,
      "program1": "num = 5 - 3",
      "program2": "num = x - y",
      "ratio_template_nodes_width_1": 1,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 160,
      "program1": "num = 5 - 3",
      "program2": "num = var1 - var2",
      "ratio_template_nodes_width_1": 1,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 160,
      "program1": "num = 5 - 3",
      "program2": "num = func1() - func2()",
      "ratio_template_nodes_width_1": 0.5,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 160,
      "program1": "num = x - y",
      "program2": "num = 10 - 5",
      "ratio_template_nodes_width_1": 1,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 160,
      "program1": "num = x - y",
      "program2": "num = 10 - 5",
      "ratio_template_nodes_width_1": 1,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 160,
      "program1": "num = x - y",
      "program2": "num = 5 - 2",
      "ratio_template_nodes_width_1": 1,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 160,
      "program1": "num = x - y",
      "program2": "num = func1() - func2()",
      "ratio_template_nodes_width_1": 0.5,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 160,
      "program1": "num = 10 - 5",
      "program2": "num = x - y",
      "ratio_template_nodes_width_1": 1,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 160,
      "program1": "num = 10 - 5",
      "program2": "num = var1 - var2",
      "ratio_template_nodes_width_1": 1,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 160,
      "program1": "num = 10 - 5",
      "program2": "num = func1() - func2()",
      "ratio_template_nodes_width_1": 0.5,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 160,
      "program1": "num = x - y",
      "program2": "num = 10 - 5",
      "ratio_template_nodes_width_1": 1,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 160,
      "program1": "num = x - y",
      "program2": "num = 5 - 2",
      "ratio_template_nodes_width_1": 1,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 160,
      "program1": "num = x - y",
      "program2": "num = func1() - func2()",
      "ratio_template_nodes_width_1": 0.5,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 160,
      "program1": "num = 10 - 5",
      "program2": "num = var1 - var2",
      "ratio_template_nodes_width_1": 1,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 160,
      "program1": "num = 10 - 5",
      "program2": "num = func1() - func2()",
      "ratio_template_nodes_width_1": 0.5,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 160,
      "program1": "num = var1 - var2",
      "program2": "num = 5 - 2",
      "ratio_template_nodes_width_1": 1,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 160,
      "program1": "num = var1 - var2",
      "program2": "num = func1() - func2()",
      "ratio_template_nodes_width_1": 0.5,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 160,
      "program1": "num = 5 - 2",
      "program2": "num = func1() - func2()",
      "ratio_template_nodes_width_1": 0.5,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 480,
      "program1": "num = x - y",
      "program2": "num = lst[0] - lst[1]",
      "ratio_template_nodes_width_1": 0.5,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 480,
      "program1": "num = x - y",
      "program2": "num = dict['key1'] - dict['key2']",
      "ratio_template_nodes_width_1": 0.5,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 480,
      "program1": "num = x - y",
      "program2": "num = len(list1) - len(list2)",
      "ratio_template_nodes_width_1": 0.5,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 480,
      "program1": "num = x - y",
      "program2": "num = list1[1] - list2[2]",
      "ratio_template_nodes_width_1": 0.5,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 480,
      "program1": "num = x - y",
      "program2": "num = dict1['key1'] - dict2['key2']",
      "ratio_template_nodes_width_1": 0.5,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 480,
      "program1": "num = x - y",
      "program2": "num = obj1.attr1 - obj2.attr2",
      "ratio_template_nodes_width_1": 0.5,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 480,
      "program1": "num = 5 - 3",
      "program2": "num = lst[0] - lst[1]",
      "ratio_template_nodes_width_1": 0.5,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 480,
      "program1": "num = 5 - 3",
      "program2": "num = dict['key1'] - dict['key2']",
      "ratio_template_nodes_width_1": 0.5,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 480,
      "program1": "num = 5 - 3",
      "program2": "num = len(list1) - len(list2)",
      "ratio_template_nodes_width_1": 0.5,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 480,
      "program1": "num = 5 - 3",
      "program2": "num = list1[1] - list2[2]",
      "ratio_template_nodes_width_1": 0.5,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 480,
      "program1": "num = 5 - 3",
      "program2": "num = dict1['key1'] - dict2['key2']",
      "ratio_template_nodes_width_1": 0.5,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 480,
      "program1": "num = 5 - 3",
      "program2": "num = obj1.attr1 - obj2.attr2",
      "ratio_template_nodes_width_1": 0.5,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 480,
      "program1": "num = lst[0] - lst[1]",
      "program2": "num = x - y",
      "ratio_template_nodes_width_1": 0.5,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 480,
      "program1": "num = lst[0] - lst[1]",
      "program2": "num = 10 - 5",
      "ratio_template_nodes_width_1": 0.5,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 480,
      "program1": "num = lst[0] - lst[1]",
      "program2": "num = x - y",
      "ratio_template_nodes_width_1": 0.5,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 480,
      "program1": "num = lst[0] - lst[1]",
      "program2": "num = 10 - 5",
      "ratio_template_nodes_width_1": 0.5,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 480,
      "program1": "num = lst[0] - lst[1]",
      "program2": "num = var1 - var2",
      "ratio_template_nodes_width_1": 0.5,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 480,
      "program1": "num = lst[0] - lst[1]",
      "program2": "num = 5 - 2",
      "ratio_template_nodes_width_1": 0.5,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 480,
      "program1": "num = lst[0] - lst[1]",
      "program2": "num = func1() - func2()",
      "ratio_template_nodes_width_1": 0,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 480,
      "program1": "num = dict['key1'] - dict['key2']",
      "program2": "num = x - y",
      "ratio_template_nodes_width_1": 0.5,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 480,
      "program1": "num = dict['key1'] - dict['key2']",
      "program2": "num = 10 - 5",
      "ratio_template_nodes_width_1": 0.5,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 480,
      "program1": "num = dict['key1'] - dict['key2']",
      "program2": "num = x - y",
      "ratio_template_nodes_width_1": 0.5,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 480,
      "program1": "num = dict['key1'] - dict['key2']",
      "program2": "num = 10 - 5",
      "ratio_template_nodes_width_1": 0.5,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 480,
      "program1": "num = dict['key1'] - dict['key2']",
      "program2": "num = var1 - var2",
      "ratio_template_nodes_width_1": 0.5,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 480,
      "program1": "num = dict['key1'] - dict['key2']",
      "program2": "num = 5 - 2",
      "ratio_template_nodes_width_1": 0.5,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 480,
      "program1": "num = dict['key1'] - dict['key2']",
      "program2": "num = func1() - func2()",
      "ratio_template_nodes_width_1": 0,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 480,
      "program1": "num = x - y",
      "program2": "num = len(list1) - len(list2)",
      "ratio_template_nodes_width_1": 0.5,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 480,
      "program1": "num = x - y",
      "program2": "num = list1[1] - list2[2]",
      "ratio_template_nodes_width_1": 0.5,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 480,
      "program1": "num = x - y",
      "program2": "num = dict1['key1'] - dict2['key2']",
      "ratio_template_nodes_width_1": 0.5,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 480,
      "program1": "num = x - y",
      "program2": "num = obj1.attr1 - obj2.attr2",
      "ratio_template_nodes_width_1": 0.5,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 480,
      "program1": "num = 10 - 5",
      "program2": "num = len(list1) - len(list2)",
      "ratio_template_nodes_width_1": 0.5,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 480,
      "program1": "num = 10 - 5",
      "program2": "num = list1[1] - list2[2]",
      "ratio_template_nodes_width_1": 0.5,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 480,
      "program1": "num = 10 - 5",
      "program2": "num = dict1['key1'] - dict2['key2']",
      "ratio_template_nodes_width_1": 0.5,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 480,
      "program1": "num = 10 - 5",
      "program2": "num = obj1.attr1 - obj2.attr2",
      "ratio_template_nodes_width_1": 0.5,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 480,
      "program1": "num = x - y",
      "program2": "num = len(list1) - len(list2)",
      "ratio_template_nodes_width_1": 0.5,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 480,
      "program1": "num = x - y",
      "program2": "num = list1[1] - list2[2]",
      "ratio_template_nodes_width_1": 0.5,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 480,
      "program1": "num = x - y",
      "program2": "num = dict1['key1'] - dict2['key2']",
      "ratio_template_nodes_width_1": 0.5,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 480,
      "program1": "num = x - y",
      "program2": "num = obj1.attr1 - obj2.attr2",
      "ratio_template_nodes_width_1": 0.5,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 480,
      "program1": "num = 10 - 5",
      "program2": "num = len(list1) - len(list2)",
      "ratio_template_nodes_width_1": 0.5,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 480,
      "program1": "num = 10 - 5",
      "program2": "num = list1[1] - list2[2]",
      "ratio_template_nodes_width_1": 0.5,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 480,
      "program1": "num = 10 - 5",
      "program2": "num = dict1['key1'] - dict2['key2']",
      "ratio_template_nodes_width_1": 0.5,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 480,
      "program1": "num = 10 - 5",
      "program2": "num = obj1.attr1 - obj2.attr2",
      "ratio_template_nodes_width_1": 0.5,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 480,
      "program1": "num = len(list1) - len(list2)",
      "program2": "num = var1 - var2",
      "ratio_template_nodes_width_1": 0.5,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 480,
      "program1": "num = len(list1) - len(list2)",
      "program2": "num = 5 - 2",
      "ratio_template_nodes_width_1": 0.5,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 480,
      "program1": "num = var1 - var2",
      "program2": "num = list1[1] - list2[2]",
      "ratio_template_nodes_width_1": 0.5,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 480,
      "program1": "num = var1 - var2",
      "program2": "num = dict1['key1'] - dict2['key2']",
      "ratio_template_nodes_width_1": 0.5,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 480,
      "program1": "num = var1 - var2",
      "program2": "num = obj1.attr1 - obj2.attr2",
      "ratio_template_nodes_width_1": 0.5,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 480,
      "program1": "num = 5 - 2",
      "program2": "num = list1[1] - list2[2]",
      "ratio_template_nodes_width_1": 0.5,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 480,
      "program1": "num = 5 - 2",
      "program2": "num = dict1['key1'] - dict2['key2']",
      "ratio_template_nodes_width_1": 0.5,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 480,
      "program1": "num = 5 - 2",
      "program2": "num = obj1.attr1 - obj2.attr2",
      "ratio_template_nodes_width_1": 0.5,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 480,
      "program1": "num = func1() - func2()",
      "program2": "num = list1[1] - list2[2]",
      "ratio_template_nodes_width_1": 0,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 480,
      "program1": "num = func1() - func2()",
      "program2": "num = dict1['key1'] - dict2['key2']",
      "ratio_template_nodes_width_1": 0,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 480,
      "program1": "num = func1() - func2()",
      "program2": "num = obj1.attr1 - obj2.attr2",
      "ratio_template_nodes_width_1": 0,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 640,
      "program1": "num = x - y",
      "program2": "num = max(2,3) - min(2,3)",
      "ratio_template_nodes_width_1": 0.5,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 640,
      "program1": "num = x - y",
      "program2": "num = max(10, 20) - min(3, 7)",
      "ratio_template_nodes_width_1": 0.5,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 640,
      "program1": "num = x - y",
      "program2": "num = dict1.get('key1') - dict2.get('key2')",
      "ratio_template_nodes_width_1": 0.5,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 640,
      "program1": "num = 5 - 3",
      "program2": "num = max(2,3) - min(2,3)",
      "ratio_template_nodes_width_1": 0.5,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 640,
      "program1": "num = 5 - 3",
      "program2": "num = max(10, 20) - min(3, 7)",
      "ratio_template_nodes_width_1": 0.5,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 640,
      "program1": "num = 5 - 3",
      "program2": "num = dict1.get('key1') - dict2.get('key2')",
      "ratio_template_nodes_width_1": 0.5,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 640,
      "program1": "num = max(2,3) - min(2,3)",
      "program2": "num = x - y",
      "ratio_template_nodes_width_1": 0.5,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 640,
      "program1": "num = max(2,3) - min(2,3)",
      "program2": "num = 10 - 5",
      "ratio_template_nodes_width_1": 0.5,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 640,
      "program1": "num = max(2,3) - min(2,3)",
      "program2": "num = x - y",
      "ratio_template_nodes_width_1": 0.5,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 640,
      "program1": "num = max(2,3) - min(2,3)",
      "program2": "num = 10 - 5",
      "ratio_template_nodes_width_1": 0.5,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 640,
      "program1": "num = max(2,3) - min(2,3)",
      "program2": "num = var1 - var2",
      "ratio_template_nodes_width_1": 0.5,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 640,
      "program1": "num = max(2,3) - min(2,3)",
      "program2": "num = 5 - 2",
      "ratio_template_nodes_width_1": 0.5,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 640,
      "program1": "num = lst[0] - lst[1]",
      "program2": "num = len(list1) - len(list2)",
      "ratio_template_nodes_width_1": 0,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 640,
      "program1": "num = lst[0] - lst[1]",
      "program2": "num = obj1.attr1 - obj2.attr2",
      "ratio_template_nodes_width_1": 0,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 640,
      "program1": "num = dict['key1'] - dict['key2']",
      "program2": "num = len(list1) - len(list2)",
      "ratio_template_nodes_width_1": 0,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 640,
      "program1": "num = dict['key1'] - dict['key2']",
      "program2": "num = obj1.attr1 - obj2.attr2",
      "ratio_template_nodes_width_1": 0,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 640,
      "program1": "num = x - y",
      "program2": "num = max(10, 20) - min(3, 7)",
      "ratio_template_nodes_width_1": 0.5,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 640,
      "program1": "num = x - y",
      "program2": "num = dict1.get('key1') - dict2.get('key2')",
      "ratio_template_nodes_width_1": 0.5,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 640,
      "program1": "num = 10 - 5",
      "program2": "num = max(10, 20) - min(3, 7)",
      "ratio_template_nodes_width_1": 0.5,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 640,
      "program1": "num = 10 - 5",
      "program2": "num = dict1.get('key1') - dict2.get('key2')",
      "ratio_template_nodes_width_1": 0.5,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 640,
      "program1": "num = max(10, 20) - min(3, 7)",
      "program2": "num = x - y",
      "ratio_template_nodes_width_1": 0.5,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 640,
      "program1": "num = max(10, 20) - min(3, 7)",
      "program2": "num = 10 - 5",
      "ratio_template_nodes_width_1": 0.5,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 640,
      "program1": "num = max(10, 20) - min(3, 7)",
      "program2": "num = var1 - var2",
      "ratio_template_nodes_width_1": 0.5,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 640,
      "program1": "num = max(10, 20) - min(3, 7)",
      "program2": "num = 5 - 2",
      "ratio_template_nodes_width_1": 0.5,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 640,
      "program1": "num = x - y",
      "program2": "num = dict1.get('key1') - dict2.get('key2')",
      "ratio_template_nodes_width_1": 0.5,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 640,
      "program1": "num = 10 - 5",
      "program2": "num = dict1.get('key1') - dict2.get('key2')",
      "ratio_template_nodes_width_1": 0.5,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 640,
      "program1": "num = len(list1) - len(list2)",
      "program2": "num = list1[1] - list2[2]",
      "ratio_template_nodes_width_1": 0,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 640,
      "program1": "num = len(list1) - len(list2)",
      "program2": "num = dict1['key1'] - dict2['key2']",
      "ratio_template_nodes_width_1": 0,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 640,
      "program1": "num = len(list1) - len(list2)",
      "program2": "num = obj1.attr1 - obj2.attr2",
      "ratio_template_nodes_width_1": 0,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 640,
      "program1": "num = dict1.get('key1') - dict2.get('key2')",
      "program2": "num = var1 - var2",
      "ratio_template_nodes_width_1": 0.5,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 640,
      "program1": "num = dict1.get('key1') - dict2.get('key2')",
      "program2": "num = 5 - 2",
      "ratio_template_nodes_width_1": 0.5,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 640,
      "program1": "num = list1[1] - list2[2]",
      "program2": "num = obj1.attr1 - obj2.attr2",
      "ratio_template_nodes_width_1": 0,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 640,
      "program1": "num = dict1['key1'] - dict2['key2']",
      "program2": "num = obj1.attr1 - obj2.attr2",
      "ratio_template_nodes_width_1": 0,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 800,
      "program1": "num = max(2,3) - min(2,3)",
      "program2": "num = lst[0] - lst[1]",
      "ratio_template_nodes_width_1": 0,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 800,
      "program1": "num = max(2,3) - min(2,3)",
      "program2": "num = dict['key1'] - dict['key2']",
      "ratio_template_nodes_width_1": 0,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 800,
      "program1": "num = max(2,3) - min(2,3)",
      "program2": "num = list1[1] - list2[2]",
      "ratio_template_nodes_width_1": 0,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 800,
      "program1": "num = max(2,3) - min(2,3)",
      "program2": "num = dict1['key1'] - dict2['key2']",
      "ratio_template_nodes_width_1": 0,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 800,
      "program1": "num = max(2,3) - min(2,3)",
      "program2": "num = obj1.attr1 - obj2.attr2",
      "ratio_template_nodes_width_1": 0,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 800,
      "program1": "num = lst[0] - lst[1]",
      "program2": "num = max(10, 20) - min(3, 7)",
      "ratio_template_nodes_width_1": 0,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 800,
      "program1": "num = lst[0] - lst[1]",
      "program2": "num = dict1.get('key1') - dict2.get('key2')",
      "ratio_template_nodes_width_1": 0,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 800,
      "program1": "num = dict['key1'] - dict['key2']",
      "program2": "num = max(10, 20) - min(3, 7)",
      "ratio_template_nodes_width_1": 0,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 800,
      "program1": "num = dict['key1'] - dict['key2']",
      "program2": "num = dict1.get('key1') - dict2.get('key2')",
      "ratio_template_nodes_width_1": 0,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 800,
      "program1": "num = max(10, 20) - min(3, 7)",
      "program2": "num = list1[1] - list2[2]",
      "ratio_template_nodes_width_1": 0,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 800,
      "program1": "num = max(10, 20) - min(3, 7)",
      "program2": "num = dict1['key1'] - dict2['key2']",
      "ratio_template_nodes_width_1": 0,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 800,
      "program1": "num = max(10, 20) - min(3, 7)",
      "program2": "num = obj1.attr1 - obj2.attr2",
      "ratio_template_nodes_width_1": 0,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 800,
      "program1": "num = dict1.get('key1') - dict2.get('key2')",
      "program2": "num = list1[1] - list2[2]",
      "ratio_template_nodes_width_1": 0,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 800,
      "program1": "num = dict1.get('key1') - dict2.get('key2')",
      "program2": "num = dict1['key1'] - dict2['key2']",
      "ratio_template_nodes_width_1": 0,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    },
    {
      "all_templatized_nodes_match": true,
      "match_penalty": 4,
      "no_repeating_tokens": true,
      "pair_penalty": 800,
      "program1": "num = dict1.get('key1') - dict2.get('key2')",
      "program2": "num = obj1.attr1 - obj2.attr2",
      "ratio_template_nodes_width_1": 0,
      "templatized_nodes_match_types": [
        "nonterminal_dotstar",
        "nonterminal_dotstar"
      ],
      "templatized_nodes_replace_dot_w_star_flags": [
        true,
        true
      ]
    }
  ]
}
